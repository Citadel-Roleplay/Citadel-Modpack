##########
# Ninepenny Conquest !
#########
ninepenny_conquest_cb = {
	mutually_exclusive_titles = {
		always = yes
	}

	allow_hostages = no
	allowed_for_character = {
		always = no
	}
	allowed_against_character = {
		always = yes
	}
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	combine_into_one = yes


	is_allowed_claim_title = {
		scope:claimant =  {
			is_human = yes
			NOT = { has_trait = incapable }
			is_imprisoned = no
			OR = {
				this = scope:attacker
				AND = {
					religion = scope:attacker.religion
					dynasty = scope:attacker.dynasty
				}
			}
		}
	}

	cost = {}

	white_peace_possible = no

	on_declaration = {
		on_declared_war = yes
	}

	should_invalidate = {
	}

	on_invalidated = {
		scope:attacker = { #Will only invalidate if the claimant dies - Write a New Event for this?
			trigger_event = agot_ninepenny.0002
		}
	}
	on_invalidated_desc = msg_claim_war_invalidated_message

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = ninepenny_conquest_cb_victory_desc_defender
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = ninepenny_conquest_cb_victory_desc_attacker
			}
			desc = ninepenny_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

		if = { #Return Disputed Lands Temp Titles to Holders
			limit = {
				exists = title:k_disputed_lands.holder
			}
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = disputed_lands
				add_claim_on_loss = no
			}

			title:k_disputed_lands = {
				every_in_de_jure_hierarchy = {
					limit = {
						holder = scope:claimant
						NOT = { tier = tier_barony }
					}

					change_title_holder_include_vassals = {
						holder = title:k_disputed_lands.holder
						change = scope:disputed_lands
					}
				}
			}
			resolve_title_and_vassal_change = scope:disputed_lands
		}

		if = {
			limit = {
				scope:claimant = { is_ruler = yes }
			}
			#Ninepenny King Becomes Independent
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
			}
			scope:claimant = {
				becomes_independent = { change = scope:change }
				if = { #Tracking for later events
					limit = {
						is_alive = yes
						is_landed = yes
					}
					add_character_flag = enthroned
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		# Set land acquisition type to conquest.
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		scope:defender = {
			every_held_title = {
				limit = {
					NOT = { tier = tier_barony }
				}
				change_title_holder = {
					holder = scope:claimant
					change = scope:change
				}
			}
		}

		resolve_title_and_vassal_change = scope:change

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = fealty_change
			add_claim_on_loss = no
		}
		scope:defender = {
			change_liege = {
				liege = scope:claimant
				change = scope:fealty_change
			}
			resolve_title_and_vassal_change = scope:fealty_change
		}

		if = { #Create Stepstones if non existant
			limit = {
				any_in_list = {
					list = target_titles
					this = title:k_the_stepstones
				}
			}
			create_title_and_vassal_change = {
				type = created
				save_scope_as = stepstones
				add_claim_on_loss = no
			}
			title:k_the_stepstones = {
				change_title_holder = {
					holder = scope:claimant
					change = scope:stepstones
				}
			}
			resolve_title_and_vassal_change = scope:stepstones
		}

		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# truce
		add_truce_attacker_victory_effect = yes

		scope:claimant = {
			if = { #Tracking for later events
				limit = {
					is_alive = yes
					is_landed = yes
				}
				add_character_flag = enthroned
			}
		}

		scope:claimant = {
			create_band_of_nine_alliances_effect = yes
		}

		#Ninepenny King Assumes Correct Gov
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					OR = {
						this = title:k_lys
						this = title:k_pentos
						this = title:k_tyrosh
						this = title:k_myr
					}
				}
			}
			scope:claimant = {
				set_realm_capital = primary_title.title_capital_county
				if = {
					limit = {
						NOT = { has_government = administrative_government } #AGOT FreeCityPlaceholder
					}
					change_government = administrative_government
				}
				primary_title = { add_title_law = dictatorship_succession_law }
			}
		}

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = {
			fp1_remember_recent_conquest_victory_effect = yes
			#Add to Ninepenny Conquest Counter
			random_owned_story = {
				limit = {
					story_type = story_agot_ninepenny_kings
				}
				save_scope_as = ninepenny_story
				change_variable = {
					name = band_of_nine_conquest
					add	= 1
				#Remember the most recent conquest
				}
				if = {
					limit = {
						scope:claimant = character:Blackfyre_14
						any_in_list = {
							list = target_titles
							this = title:k_the_stepstones
						}
					}
					set_variable = {
						name = recent_conquest
						value = title:k_the_stepstones
					}
				}
				else = {
					set_variable = {
						name = recent_conquest
						value = scope:claimant.primary_title
					}
				}
			}

			if = {
				limit = {
					scope:ninepenny_story = {
						has_variable = band_of_nine_conquest
						var:band_of_nine_conquest = 2
						NOT = {
							has_variable = second_npk_conquest
						}
					}
				}
			}
			else_if = { #Second NPK Wars
				limit = {
					scope:ninepenny_story = {
						has_variable = second_npk_conquest
					}
				}
				trigger_event = agot_ninepenny.0021
			}
			else = { #Initial NPK Wars
				trigger_event = agot_ninepenny.0002
			}
		}
	}

	on_white_peace_desc = {}

	on_white_peace = {}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = ninepenny_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = ninepenny_conquest_cb_defeat_desc_attacker
			}
			desc = ninepenny_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# lose claims
		if = {
			limit = { scope:attacker = scope:claimant }
			every_in_list = {
				list = target_titles
				scope:claimant = {
					remove_claim = prev
				}
			}
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant = {
					can_add_hook = {
						type = favor_hook
						target = scope:attacker
					}
				}
			}
			scope:claimant = {
				add_hook = {
					target = scope:attacker
					type = favor_hook
				}
			}
		}

		# Award the appropriate amount of prestige to all participants in the war.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		#NPK Effects
		scope:attacker = {
			random_owned_story = {
				limit = {
					story_type = story_agot_ninepenny_kings
				}
				save_scope_as = ninepenny_story
			}
		}
		if = { #Second NPK Wars
			limit = {
				scope:ninepenny_story = {
					has_variable = second_npk_conquest
				}
			}
			scope:attacker = {
				trigger_event = agot_ninepenny.0024 #Lost War momentum gone wah wah
			}
		}
		else = {
			#Implode the Band of the Nine
			scope:attacker = { shatter_band_of_nine_alliances_effect = yes }
			maelys_title_distribution_effect = {
				MAELYS = scope:attacker
			}
		}
	}


	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "NINEPENNY_WAR_NAME"
	interface_priority = 60

	should_show_war_goal_subview = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_attacker_score_from_battles = 200
	max_defender_score_from_battles = 200

	max_ai_diplo_distance_to_title = 1000
}

##########
# The Reyne Rebellion
#########
reyne_rebellion = {
	icon = dissolution_war
	group = civil_war
	ai_only_against_liege = yes
	allow_hostages = yes
	target_titles = all
	target_title_tier = all
	allowed_for_character = {
		always = no
	}

	allowed_against_character = {
		scope:attacker = {
			liege = scope:defender
		}
	}

	target_de_jure_regions_above = yes

	white_peace_possible = no

	valid_to_start = {
	}

	should_invalidate = {
		scope:attacker = {
			NOT = {
				any_liege_or_above = { this = scope:defender }
			}
		}
	}

	on_declaration = {
		#on_declared_war = yes
		# save the initial target and their tier for conditioning the depose effect
		if = {
			limit = { NOT = { exists = scope:attacker.var:initial_target } }
			scope:attacker = {
				set_variable = {
					name = initial_target
					value = scope:defender
				}

				set_variable = {
					name = target_tier
					value = scope:defender.primary_title.tier
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = { is_local_player = yes }
					OR = {
						NOT = { exists = scope:attacker.var:initial_target }
						scope:defender = scope:attacker.var:initial_target
						scope:defender.primary_title.tier <= scope:attacker.var:target_tier
					}
				}
				desc = refused_liege_demand_war_victory_desc_defender
			}
			triggered_desc = {
				trigger = {
					OR = {
						NOT = { exists = scope:attacker.var:initial_target }
						scope:defender = scope:attacker.var:initial_target
						scope:defender.primary_title.tier <= scope:attacker.var:target_tier
					}
				}
				desc = refused_liege_demand_war_victory_desc
			}
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }


		scope:defender = {
			every_held_title = {
				add_to_list = target_titles
			}
			every_vassal = {
				limit = {
					NOT = {
						this = scope:attacker
					}
				}
				add_to_list = vassals_taken
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		#Take Casterly Rock
		every_in_list = {
			list = target_titles
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
			}
		}
		hidden_effect = {
			#And all his vassals
			every_in_list = {
				list = vassals_taken
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}

			scope:attacker = { vassal_contract_set_obligation_level = { type = special_contract level = 0 } }
		}
		resolve_title_and_vassal_change = scope:change

		scope:defender = {
			add_character_flag = {
				flag = recent_liberty_faction_war
				years = 5
			}

			# If we win the rebellion, our liege loses any legal right to imprison us/banish us/revoke our titles.
			consume_all_criminal_reasons_effect = {
				LIEGE = scope:defender
				CRIMINAL = scope:attacker
			}

			add_prestige = -500

			# Then our liege is deposed (but the imprisonment loss remains true for their heir).
			if = {
				limit = { NOT = { exists = scope:attacker.var:initial_target } }
				depose = yes
			}
			else = {
				if = {
					limit = { this = scope:attacker.var:initial_target }
					depose = yes
				}
				else_if = {
					limit = { primary_title.tier <= scope:attacker.var:target_tier }
					depose = yes
				}

				# remove variables
				scope:attacker = {
					remove_variable = initial_target
					remove_variable = target_tier
				}
			}
		}

		scope:attacker = {
			#Trigger the Reign of Castamere Event
		}

		scope:defender = {
			#Set variable in the Story Cycle
			random_owned_story = {
				limit = {
					story_type = story_agot_reyne_rebellion
				}
				set_variable = reyne_rebellion_complete
			}
		}

		hidden_effect = {
			scope:attacker = {
				add_truce_both_ways = {
					character = scope:defender
					days = 1825
					war = root.war
					result = victory
				}
			}
		}

	}

	on_white_peace_desc = {
	}

	on_white_peace = {
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = refused_liege_demand_war_defeat_desc_defender
			}
			desc = refused_liege_demand_war_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			add_character_flag = {
				flag = recent_liberty_faction_war
				years = 10
			}
			add_dread = medium_dread_gain

			#Set variable in the Story Cycle
			random_owned_story = {
				limit = {
					story_type = story_agot_reyne_rebellion
				}
				set_variable = reyne_rebellion_complete
			}
		}
		on_lost_request_revolt_war = yes
	}

	on_invalidated_desc = msg_invalidate_war_title

	check_attacker_inheritance_validity = no

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "REYNE_REBELLION_NAME"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_attacker_score_from_battles = 100
	max_defender_score_from_battles = 50

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 500
}