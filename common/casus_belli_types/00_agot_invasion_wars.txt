agot_targaryen_exile_invasion_war_cb = {
	icon = vassalization
	group = claim
	target_top_liege_if_outside_realm = no
	white_peace_possible = no
	allowed_for_character = {
		any_owned_story = {
			story_type = story_agot_targaryen_exile_invasion
			var:story_cycle_status ?= flag:exile_invasion_player_opted_to_wait
		}
	}
	valid_to_start = {
		scope:attacker = {
			any_owned_story = {
				story_type = story_agot_targaryen_exile_invasion
				var:story_cycle_status ?= flag:exile_invasion_player_opted_to_wait
			}
		}
	}
	is_allowed_claim_title = {
		scope:claimant = {
			this = scope:attacker
		}
	}
	cost = {}

	target_titles = claim

	on_declaration = {
		on_declared_war = yes
		every_player = {
			limit = {
				location =  { geographical_region = world_westeros_seven_kingdoms }
			}
			trigger_event = agot_targaryen_exile_invasion.0810
		}
		scope:attacker = {
			if = {
				limit = {
					NOT = {
						has_character_modifier = agot_exile_faegon_invader_embark_modifier
					}
				}
				add_character_modifier = {
					modifier = agot_exile_faegon_invader_embark_modifier
					years = 5
				}
			}
		}
	}

	should_invalidate = {
		any_false = {
			exists = title:e_the_iron_throne.holder

			scope:attacker = {
				OR = {
					any_owned_story = {
						story_type = story_agot_targaryen_exile_invasion
						var:story_cycle_status ?= flag:exile_invasion
					}
					any_owned_story = {
						story_type = story_agot_targaryen_exile_invasion
						var:story_cycle_status ?= flag:exile_invasion_player_opted_to_wait
					}
				}
			}
		}
	}

	on_invalidated_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:claimant = scope:attacker }
					scope:claimant = { is_alive = no }
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_dead_message
			}
			triggered_desc = {
				trigger = {
					scope:claimant = {
						NOR = {
							this = scope:attacker
							NOR = {
								is_vassal_or_below_of = scope:attacker
								is_courtier_of = scope:attacker
							}
						}
					}
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_not_vassal_message
			}
			triggered_desc = {
				trigger = {
					scope:claimant = {
						NOR = {
							this = scope:attacker
							NOR = {
								is_vassal_or_below_of = scope:attacker
								is_courtier_of = scope:attacker
							}
						}
					}
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_not_vassal_message
			}
			desc = msg_claim_war_invalidated_message
		}
	}

	on_invalidated = {}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		every_in_list = {
			list = defenders

			if = { # Imprison them if they aren't imprisoned.
				limit = {
					is_imprisoned = no
					NOT = { this = scope:attacker }
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:attacker
				}
			}
		}
		scope:attacker = {
			trigger_event = agot_targaryen_exile_invasion.0401
			agot_invasions_remove_story_modifiers = yes
			hidden_effect = {
				random_owned_story = {
					limit = {
						story_type = story_agot_targaryen_exile_invasion
					}
					end_story = yes
				}
				if = {
					limit = {
						has_character_flag = exiled_from_westeros
					}
					remove_character_flag = exiled_from_westeros
				}
				if = {
					limit = {
						any_courtier = {
							has_character_flag = exiled_from_westeros
						}
					}
					every_courtier = {
						limit = {
							has_character_flag = exiled_from_westeros
						}
						remove_character_flag = exiled_from_westeros
					}
				}
			}
		}

		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		# Influence
		add_influence_attacker_victory_effect = yes

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		scope:defender ?= {
			if = {
				limit = {
					is_independent_ruler = yes
					government_allows = administrative
					primary_title = { is_in_list = target_titles }
				}
				every_held_title = {
					limit = {
						is_noble_family_title = no
						tier >= tier_county
					}
					add_to_list = target_titles
				}
			}
		}

		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# EP3 Laamp possibility warning
		scope:defender = { ep3_war_loss_adventurer_tt_effect = yes }

		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				scope:claimant = {
					NOT = { target_is_liege_or_above = scope:attacker }
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
	}

	on_white_peace = {}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			agot_invasions_remove_story_modifiers = yes
			trigger_event = { id = agot_targaryen_exile_invasion.0802 days = 1 }
			hidden_effect = {
				random_owned_story = {
					limit = {
						story_type = story_agot_targaryen_exile_invasion
					}
					end_story = yes
				}
			}
		}
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Influence
		add_influence_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
		}
		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
		scope:defender = {
			add_dread = medium_dread_gain
		}
		every_in_list = {
			list = attackers
			limit = {
				is_imprisoned = no
			}
			hard_imprison_character_effect = {
				TARGET = this
				IMPRISONER = scope:defender
			}
		}
	}

	on_primary_attacker_death = inherit
	check_attacker_inheritance_validity = no
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "agot_targaryen_exile_invasion_war_cb"
	my_war_name = "agot_targaryen_exile_invasion_war_cb"
	war_name_base = "agot_targaryen_exile_invasion_war_cb"
	cb_name = "agot_targaryen_exile_invasion_war_cb"

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 25
	max_attacker_score_from_battles = 200 #focus more on sieges
	max_defender_score_from_battles = 300 #focus on battles
}

faegon_invasion_war_cb = {
	icon = claim_cb
	group = claim
	target_top_liege_if_outside_realm = no
	white_peace_possible = no
	allowed_for_character = { always = no }
	valid_to_start = { always = no }
	cost = {}

	target_titles = claim

	on_declaration = {
		on_declared_war = yes
		if = {
			limit = {
				scope:attacker = {
					var:identity ?= flag:open_blackfyre
				}
			}
			blackfyre_war_declared = yes
		}
	}

	should_invalidate = {
		any_false = {
			exists = title:e_the_iron_throne.holder
			scope:attacker = {
				has_variable = is_faegon
			}
		}
	}

	on_invalidated_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:claimant = scope:attacker }
					scope:claimant = { is_alive = no }
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_dead_message
			}
			triggered_desc = {
				trigger = {
					scope:claimant = {
						NOR = {
							this = scope:attacker
							NOR = {
								is_vassal_or_below_of = scope:attacker
								is_courtier_of = scope:attacker
							}
						}
					}
				}
				desc = msg_claim_war_invalidated_claimant_unavailable_not_vassal_message
			}
			triggered_desc = {
				trigger = {
					NOT = {
						exists = title:e_the_iron_throne
					}
				}
				desc = targ_exiles_and_faegon_iron_doesnt_exist_war_invalidation
			}
			desc = msg_claim_war_invalidated_message
		}
	}

	on_invalidated = {
		agot_faegon_lost_or_invalidated_war_but_can_reclaim_identity_effect = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:claimant = { is_local_player = yes }
				}
				desc = claim_cb_victory_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_victory_desc_attacker
			}
			desc = claim_cb_victory_desc
		}
	}

	on_victory = {
		every_in_list = {
			list = defenders

			if = { # Imprison them if they aren't imprisoned.
				limit = {
					is_imprisoned = no
					NOT = { this = scope:attacker }
				}
				hard_imprison_character_effect = {
					TARGET = this
					IMPRISONER = scope:attacker
				}
			}
		}
		scope:attacker = {
			trigger_event = agot_faegon_invasion.0008
			agot_invasions_remove_story_modifiers = yes
			save_scope_as = faegon_victor
			global_var:targaryen_exile_title.holder ?= {
				trigger_event = agot_faegon_invasion.0040
			}
			hidden_effect = {
				if = {
					limit = {
						has_character_flag = exiled_from_westeros
					}
					remove_character_flag = exiled_from_westeros
				}
				if = {
					limit = {
						any_courtier = {
							has_character_flag = exiled_from_westeros
						}
					}
					every_courtier = {
						limit = {
							has_character_flag = exiled_from_westeros
						}
						remove_character_flag = exiled_from_westeros
					}
				}
			}
		}

		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		# Influence
		add_influence_attacker_victory_effect = yes

		#EP2 Accolade glory gain from winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		scope:defender ?= {
			if = {
				limit = {
					is_independent_ruler = yes
					government_allows = administrative
					primary_title = { is_in_list = target_titles }
				}
				every_held_title = {
					limit = {
						is_noble_family_title = no
						tier >= tier_county
					}
					add_to_list = target_titles
				}
			}
		}

		create_title_and_vassal_change = {
			type = conquest_claim
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# EP3 Laamp possibility warning
		scope:defender = { ep3_war_loss_adventurer_tt_effect = yes }

		# Create a claim CB which is executed to handle title/vassal changes, in addition to being used to calculate Prestige awards for war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			change = scope:change
		}

		resolve_title_and_vassal_change = scope:change

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:claimant.primary_title.tier < scope:attacker.primary_title.tier
				scope:claimant = {
					NOT = { target_is_liege_or_above = scope:attacker }
				}
			}

			create_title_and_vassal_change = {
				type = conquest_claim
				save_scope_as = change_two
				add_claim_on_loss = yes
			}
			scope:claimant = {
				change_liege = {
					liege = scope:attacker
					change = scope:change_two
				}
			}
			resolve_title_and_vassal_change = scope:change_two
		}

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_white_peace_desc_defender
			}
			desc = claim_cb_white_peace_desc
		}
	}

	on_white_peace = {}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = { scope:claimant = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker_claimant
			}
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = claim_cb_defeat_desc_attacker
			}
			desc = claim_cb_defeat_desc
		}

	}

	on_defeat = {
		scope:attacker = {
			show_pow_release_message_effect = yes
			remove_trait = refusing_marriage
			agot_invasions_remove_story_modifiers = yes
			agot_faegon_lost_or_invalidated_war_but_can_reclaim_identity_effect = yes
			trigger_event = {
				id = agot_targaryen_exile_invasion.0802 days = 1
			}
		}

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Influence
		add_influence_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		if = {
			limit = {
				NOT = { scope:claimant = scope:attacker }
				scope:attacker = {
					can_add_hook = {
					  	type = favor_hook
					  	target = scope:claimant
					}
				}
			}
			scope:attacker = {
				add_hook = {
		  			target = scope:claimant
		  			type = favor_hook
		 		}
			}
		}

		# Attacker pays gold to the defender as reparations.
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
		}
		# Create an 'helper' claim CB which we won't execute, but can use to determine how much Prestige should be given to war participants.
		setup_claim_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}
		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
		scope:defender = {
			add_dread = medium_dread_gain
		}
		every_in_list = {
			list = attackers
			limit = {
				is_imprisoned = no
			}
			hard_imprison_character_effect = {
				TARGET = this
				IMPRISONER = scope:defender
			}
		}
	}

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	transfer_behavior = transfer

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = faegon_invasion_war_cb

	interface_priority = 80

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	attacker_score_from_occupation_scale = 50
	defender_score_from_occupation_scale = 25
	max_attacker_score_from_battles = 200 #focus more on sieges
	max_defender_score_from_battles = 300 #focus on battles
}