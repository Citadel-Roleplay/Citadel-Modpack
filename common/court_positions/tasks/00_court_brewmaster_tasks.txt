### Court Brewmaster Tasks ###

court_brewmaster_popular_opinion = {
	court_position_types = { court_brewmaster_court_position }

	scaling_employer_modifiers = {
		terrible = {
		 	county_opinion_add = 1
		}
		poor = {
		 	county_opinion_add = 3
		}
		average = {
		 	county_opinion_add = 5
		}
		good = {
		 	county_opinion_add = 7
		}
		excellent = {
		 	county_opinion_add = 10
		}
	}

	# Monthly cost for the task
	cost = {
		round = no
		gold = {
			add = {
				value = monthly_court_position_task_cost
				desc = COURT_POSITION_TASK_COST_BREAKDOWN_BASE
				format = "BASE_VALUE_FORMAT_DECIMALS_PLUS_NEGATIVE"
			}
		}
	}

	ai_will_do = {
		value = 0
	}
}

court_brewmaster_court_opinion = {
	court_position_types = { court_brewmaster_court_position }

	scaling_employer_modifiers = {
		terrible = {
		 	courtier_and_guest_opinion = 2
		}
		poor = {
		 	courtier_and_guest_opinion = 4
		}
		average = {
		 	courtier_and_guest_opinion = 6
		}
		good = {
		 	courtier_and_guest_opinion = 8
		}
		excellent = {
		 	courtier_and_guest_opinion = 10
		}
	}

	on_yearly = {
		every_courtier_or_guest = {
			limit = {
				is_adult = yes
			}
			change_current_weight = 5
		}
	}

	# Monthly cost for the task
	cost = {
		round = no
		gold = {
			add = {
				value = monthly_court_position_task_cost
				desc = COURT_POSITION_TASK_COST_BREAKDOWN_BASE
				format = "BASE_VALUE_FORMAT_DECIMALS_PLUS_NEGATIVE"
			}
		}
	}

	ai_will_do = {
		value = 0
	}
}

court_brewmaster_experimental_brew = { #Hambone
	court_position_types = { court_brewmaster_court_position }

	is_valid_showing_failures_only = {
		trigger_if = {
			limit = {
				scope:liege = { has_variable = experimental_brew_cooldown }
			}
			custom_tooltip = {
				NOT = { scope:liege = { has_variable = experimental_brew_cooldown } }
				text = court_brewmaster_task_cooldown
			}
		}
	}

	on_start = {
		scope:liege = {
			gold = -10
			custom_tooltip = court_brewmaster_experimental_brew_tt
			set_variable = active_experimental_brew
			trigger_event = bp3_court_position.100
		}
	}

	on_yearly = {
		if = {
			limit = {
				NOT = { has_variable = experimental_brew_cooldown }
			}
			trigger_event = bp3_court_position.100
		}
	}

	cost = {
		round = no
		gold = {
			add = {
				value = 0.5
				desc = COURT_POSITION_TASK_COST_BREAKDOWN_BASE
				format = "BASE_VALUE_FORMAT_DECIMALS_PLUS_NEGATIVE"
			}
		}
	}

	on_end = {
		remove_variable = active_experimental_brew
	}

	ai_will_do = {
		value = 0
	}
}
