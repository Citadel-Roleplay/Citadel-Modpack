###########################
### Knight Tree Effects ###
###########################

agot_add_to_knight_tree = {
	$KNIGHT$ = { save_scope_as = knight }
	$SQUIRE$ = { save_scope_as = squire }

	########## Very limited
	if = {
		limit = {
			has_game_rule = agot_kt_very_limited
			scope:knight = {
				trigger_if = {
					limit = { is_lowborn = no }
					OR = {
						exists = scope:knight.primary_title
						has_trait = kingsguard
					}
				}
				trigger_else = {
					is_lowborn = yes
					has_trait = kingsguard
				}
			}
		}
		if = { # the knight already has a teacher story
			limit = {
				title:c_ruins.holder = {
					any_owned_story = {
						story_type = agot_knight_tree_structure
						has_variable_list = knight_tree_gui
						any_in_list = {
							variable = teacher_story_container
							OR = {
								var:this_teacher ?= scope:knight
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
					}
				}
			}
			if = { # the knight already has a teacher story
				limit = {
					title:c_ruins.holder = {
						any_owned_story = {
							story_type = agot_knight_tree_teacher
							var:this_teacher ?= scope:knight
						}
					}
				}
				title:c_ruins.holder = {
					random_owned_story = { # Add this squire to the existing list of squires
						limit = {
							story_type = agot_knight_tree_teacher
							var:this_teacher = scope:knight
						}
						add_to_variable_list = {
							name = student_container
							target = scope:squire
						}
					}
				}
			}
			else = { # the knight does not have a teacher story yet
				title:c_ruins.holder = {
					set_variable = {
						name = knight_teacher
						value = scope:knight
					}
					create_story = {
						type = agot_knight_tree_teacher
						save_scope_as = teacher_story
					}
				}
				scope:teacher_story ?= { # Create list of squires and add this squire to it
					add_to_variable_list = {
						name = student_container
						target = scope:squire
					}
				}
				title:c_ruins.holder = {
					random_owned_story = {
						limit = {
							story_type = agot_knight_tree_structure
							any_in_list = {
								variable = teacher_story_container
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
						add_to_variable_list = {
							name = teacher_story_container
							target = scope:teacher_story
						}
					}
				}
			}
		}
		else = { # the knight does not have a tree
			title:c_ruins.holder = {
				set_variable = {
					name = knight_teacher
					value = scope:knight
				}
				create_story = {
					type = agot_knight_tree_teacher
					save_scope_as = teacher_story
				}
				create_story = {
					type = agot_knight_tree_structure
					save_scope_as = tree_story
				}
			}
			scope:teacher_story ?= { # Create list of squires and add this squire to it
				add_to_variable_list = {
					name = student_container
					target = scope:squire
				}
			}
			scope:tree_story ?= { # Assign founder position for the tree
				set_variable = {
					name = knight_tree_founder
					value = scope:knight
				}
				add_to_variable_list = { # Contains the teacher story for this tree
					name = teacher_story_container
					target = scope:teacher_story
				}
				add_to_variable_list = { # Checked for in GUI datamodel
					name = knight_tree_gui
					target = scope:knight
				}
				add_to_global_variable_list = {
					name = known_knight_trees
					target = this
				}
			}
		}
	}

	# Limited
	else_if = {
		limit = {
			has_game_rule = agot_kt_limited
			scope:knight = {
				trigger_if = {
					limit = { is_lowborn = no }
					OR = {
						exists = scope:knight.primary_title
						AND = {
							is_courtier  = yes
							is_pool_guest = no
							exists = liege
 							is_courtier_of = liege
							court_owner = { is_ruler = yes }
						}
					}
				}
				trigger_else = {
					is_lowborn = yes
					has_trait = kingsguard
				}
			}
		}
		if = { # the knight already has a teacher story
			limit = {
				title:c_ruins.holder = {
					any_owned_story = {
						story_type = agot_knight_tree_structure
						has_variable_list = knight_tree_gui
						any_in_list = {
							variable = teacher_story_container
							OR = {
								var:this_teacher ?= scope:knight
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
					}
				}
			}
			if = { # the knight already has a teacher story
				limit = {
					title:c_ruins.holder = {
						any_owned_story = {
							story_type = agot_knight_tree_teacher
							var:this_teacher ?= scope:knight
						}
					}
				}
				title:c_ruins.holder = {
					random_owned_story = { # Add this squire to the existing list of squires
						limit = {
							story_type = agot_knight_tree_teacher
							var:this_teacher = scope:knight
						}
						add_to_variable_list = {
							name = student_container
							target = scope:squire
						}
					}
				}
			}
			else = { # the knight does not have a teacher story yet
				title:c_ruins.holder = {
					set_variable = {
						name = knight_teacher
						value = scope:knight
					}
					create_story = {
						type = agot_knight_tree_teacher
						save_scope_as = teacher_story
					}
				}
				scope:teacher_story ?= { # Create list of squires and add this squire to it
					add_to_variable_list = {
						name = student_container
						target = scope:squire
					}
				}
				title:c_ruins.holder = {
					random_owned_story = {
						limit = {
							story_type = agot_knight_tree_structure
							any_in_list = {
								variable = teacher_story_container
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
						add_to_variable_list = {
							name = teacher_story_container
							target = scope:teacher_story
						}
					}
				}
			}
		}
		else = { # the knight does not have a tree
			title:c_ruins.holder = {
				set_variable = {
					name = knight_teacher
					value = scope:knight
				}
				create_story = {
					type = agot_knight_tree_teacher
					save_scope_as = teacher_story
				}
				create_story = {
					type = agot_knight_tree_structure
					save_scope_as = tree_story
				}
			}
			scope:teacher_story ?= { # Create list of squires and add this squire to it
				add_to_variable_list = {
					name = student_container
					target = scope:squire
				}
			}
			scope:tree_story ?= { # Assign founder position for the tree
				set_variable = {
					name = knight_tree_founder
					value = scope:knight
				}
				add_to_variable_list = { # Contains the teacher story for this tree
					name = teacher_story_container
					target = scope:teacher_story
				}
				add_to_variable_list = { # Checked for in GUI datamodel
					name = knight_tree_gui
					target = scope:knight
				}
				add_to_global_variable_list = {
					name = known_knight_trees
					target = this
				}
			}
		}
	}

	# Unlimited
	else_if = {
		limit = {
			has_game_rule = agot_kt_unlimited
			scope:knight = {
				trigger_if = {
					limit = { is_lowborn = no }
				}
				trigger_else = {
					is_lowborn = yes
					has_trait = kingsguard
				}
			}
		}
		if = { # the knight already has a teacher story
			limit = {
				title:c_ruins.holder = {
					any_owned_story = {
						story_type = agot_knight_tree_structure
						has_variable_list = knight_tree_gui
						any_in_list = {
							variable = teacher_story_container
							OR = {
								var:this_teacher ?= scope:knight
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
					}
				}
			}
			if = { # the knight already has a teacher story
				limit = {
					title:c_ruins.holder = {
						any_owned_story = {
							story_type = agot_knight_tree_teacher
							var:this_teacher ?= scope:knight
						}
					}
				}
				title:c_ruins.holder = {
					random_owned_story = { # Add this squire to the existing list of squires
						limit = {
							story_type = agot_knight_tree_teacher
							var:this_teacher = scope:knight
						}
						add_to_variable_list = {
							name = student_container
							target = scope:squire
						}
					}
				}
			}
			else = { # the knight does not have a teacher story yet
				title:c_ruins.holder = {
					set_variable = {
						name = knight_teacher
						value = scope:knight
					}
					create_story = {
						type = agot_knight_tree_teacher
						save_scope_as = teacher_story
					}
				}
				scope:teacher_story ?= { # Create list of squires and add this squire to it
					add_to_variable_list = {
						name = student_container
						target = scope:squire
					}
				}
				title:c_ruins.holder = {
					random_owned_story = {
						limit = {
							story_type = agot_knight_tree_structure
							any_in_list = {
								variable = teacher_story_container
								any_in_list = {
									variable = student_container
									this = scope:knight
								}
							}
						}
						add_to_variable_list = {
							name = teacher_story_container
							target = scope:teacher_story
						}
					}
				}
			}
		}
		else = { # the knight does not have a tree
			title:c_ruins.holder = {
				set_variable = {
					name = knight_teacher
					value = scope:knight
				}
				create_story = {
					type = agot_knight_tree_teacher
					save_scope_as = teacher_story
				}
				create_story = {
					type = agot_knight_tree_structure
					save_scope_as = tree_story
				}
			}
			scope:teacher_story ?= { # Create list of squires and add this squire to it
				add_to_variable_list = {
					name = student_container
					target = scope:squire
				}
			}
			scope:tree_story ?= { # Assign founder position for the tree
				set_variable = {
					name = knight_tree_founder
					value = scope:knight
				}
				add_to_variable_list = { # Contains the teacher story for this tree
					name = teacher_story_container
					target = scope:teacher_story
				}
				add_to_variable_list = { # Checked for in GUI datamodel
					name = knight_tree_gui
					target = scope:knight
				}
				add_to_global_variable_list = {
					name = known_knight_trees
					target = this
				}
			}
		}
	}
}