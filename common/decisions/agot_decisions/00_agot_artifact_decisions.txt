agot_sell_artifacts_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
	}
	desc = agot_sell_artifacts_decision_desc
	sort_order = 75

	decision_group_type = artifact

	is_shown = {
		agot_can_trade_artifacts_trigger = yes
		NOT = { government_has_flag = government_is_first_ranger }
	}

	is_valid = {
		custom_description = {
			text = agot_stolen_artifact_from_artifact_keeper_dec_trigger
			trigger_if = {
				limit = {
					exists = house
				}
				NOT = {
					house = {
						exists = var:agot_stolen_artifact_from_artifact_keeper
					}
				}
			}
		}
		custom_description = {
			text = agot_not_wilding_desc_trigger
			culture = {
				agot_is_wildling_culture = no
			}
		}
	}

	ai_potential = {
		always = yes
	}

	ai_check_interval = 24

	effect = {
		custom_tooltip = agot_sell_artifacts_decision_custom_tooltip_1

		# Compatibility with old save
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						exists = global_var:agot_artifact_keeper
					}
				}
				agot_get_artifact_keeper = yes
			}
			else_if = {
				limit = {
					global_var:agot_artifact_keeper = {
						OR = {
							is_alive = no
							is_ai = no
						}
					}
				}
				agot_reload_artifact_keeper = yes
			}
			else_if = {
				limit = {
					NOT = {
						global_var:agot_artifact_keeper_title.holder = global_var:agot_artifact_keeper
					}
				}
				global_var:agot_artifact_keeper_title = {
					create_title_and_vassal_change = {
						type = conquest
						save_scope_as = change
						add_claim_on_loss = no
					}
					change_title_holder_include_vassals = {
						holder = global_var:agot_artifact_keeper
						change = scope:change
					}

					resolve_title_and_vassal_change = scope:change
				}
			}
			if = {
				limit = {
					NOT = {
						global_var:agot_artifact_keeper = {
							is_independent_ruler = yes
						}
					}
				}
				global_var:agot_artifact_keeper = {
					create_title_and_vassal_change = {
						type = independency
						save_scope_as = change
						add_claim_on_loss = yes
					}
					becomes_independent = {
						change = scope:change
					}
					resolve_title_and_vassal_change = scope:change
				}
			}
		}

		# Refersh market and owned artifacts
		agot_get_market_artifacts_effect = yes
		agot_get_owned_artifacts_effect = yes

		if = {
			limit = {
				is_ai = yes
				NOT = { government_has_flag = government_is_first_ranger }
			}

			# Either sell or buy an artifact
			random_list = {
				1 = {} # Do nothing
				50 = { # Sell artifact
					trigger = {
						agot_ai_may_sell_artifact_trigger = yes
					}

					agot_ai_get_artifact_to_sell_effect = {
						ARTIFACT = artifact_to_sell
					}

					if = {
						limit = { exists = scope:artifact_to_sell }
						agot_sell_artifact_effect = {
							ARTIFACT = scope:artifact_to_sell
						}
					}
				}
				50 = { # Buy artifact
					trigger = {
						# Performance: Limit buying of artifacts to dukes and above
						highest_held_title_tier >= tier_duchy
						agot_ai_may_buy_artifact_trigger = yes
					}

					agot_ai_get_artifact_to_buy_effect = {
						ARTIFACT = artifact_to_buy
					}

					if = {
						limit = { exists = scope:artifact_to_buy }
						agot_buy_artifact_effect = {
							ARTIFACT = scope:artifact_to_buy
						}
					}
				}
			}
		}
		else = {
			# Show artifact market window
			set_variable = {
				name = agot_artifact_market_window_open
				value = 1
			}
		}
	}

	ai_will_do = {
		base = 100
	}
}

agot_buy_eye_gem_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_smith.dds"
	}
	desc = replace_eye_desc
	sort_order = 100

	decision_group_type = artifact

	selection_tooltip = replace_eye_decision_tooltip

	cooldown = { years = 3 }

	is_shown = {
		has_trait = one_eyed
		NOT = {
			OR = {
				has_character_flag = has_eyegem_red
				has_character_flag = has_eyegem_saphire
				has_character_flag = has_eyegem_white
				has_character_flag = has_eyegem_blue
				has_character_flag = has_eyegem_green
				has_character_flag = has_eyegem_black
				has_character_flag = has_eyegem_yellow
				has_character_flag = has_eyegem_orange
				has_character_flag = has_eyegem_purple
			}
		}
	}

	cost = {
		gold = basic_fund_inspiration_cost
	}

	widget = {
		gui = "decision_view_widget_commission_artifact"
		controller = decision_option_list_controller
		decision_to_second_step_button = "agot_buy_eye_gem_decision_next_stop_button"

		# Gem List

		item = {
			value = has_eyegem_red
			localization = {
				desc = replace_eye_gem_option_red
			}
			icon = "gfx/interface/icons/traits/one_eyed_red_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_saphire
			localization = {
				desc = replace_eye_gem_option_saphire
			}
			icon = "gfx/interface/icons/traits/one_eyed_sapphire_trait.dds"

			ai_chance = {
				value = { 0 10 }
				if = {
					limit = {
						dynasty = dynasty:dynn_Tarth
					}
					add = 25
				}
			}
		}
		item = {
			value = has_eyegem_white
			localization = {
				desc = replace_eye_gem_option_white
			}
			icon = "gfx/interface/icons/traits/one_eyed_white_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_blue
			localization = {
				desc = replace_eye_gem_option_blue
			}
			icon = "gfx/interface/icons/traits/one_eyed_blue_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_green
			localization = {
				desc = replace_eye_gem_option_green
			}
			icon = "gfx/interface/icons/traits/one_eyed_green_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_black
			localization = {
				desc = replace_eye_gem_option_black
			}
			icon = "gfx/interface/icons/traits/one_eyed_black_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_yellow
			localization = {
				desc = replace_eye_gem_option_yellow
			}
			icon = "gfx/interface/icons/traits/one_eyed_yellow_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_orange
			localization = {
				desc = replace_eye_gem_option_orange
			}
			icon = "gfx/interface/icons/traits/one_eyed_orange_trait.dds"

			ai_chance = {
				value = { 0 10 }
			}
		}
		item = {
			value = has_eyegem_purple
			localization = {
				desc = replace_eye_gem_option_purple
			}
			icon = "gfx/interface/icons/traits/one_eyed_purple_trait.dds"

			ai_chance = {
				value = { 0 10 }
				if = {
					limit = {
						culture = { has_cultural_pillar = heritage_valyrian }
					}
					add = 25
				}
			}
		}
	}

	effect = {
		hidden_effect = {
			if = {
				limit = { scope:has_eyegem_red = yes }
				add_character_flag = has_eyegem_red
			}
			else_if = {
				limit = { scope:has_eyegem_saphire = yes }
				add_character_flag = has_eyegem_saphire
			}
			else_if = {
				limit = { scope:has_eyegem_white = yes }
				add_character_flag = has_eyegem_white
			}
			else_if = {
				limit = { scope:has_eyegem_blue = yes }
				add_character_flag = has_eyegem_blue
			}
			else_if = {
				limit = { scope:has_eyegem_green = yes }
				add_character_flag = has_eyegem_green
			}
			else_if = {
				limit = { scope:has_eyegem_black = yes }
				add_character_flag = has_eyegem_black
			}
			else_if = {
				limit = { scope:has_eyegem_yellow = yes }
				add_character_flag = has_eyegem_yellow
			}
			else_if = {
				limit = { scope:has_eyegem_orange = yes }
				add_character_flag = has_eyegem_orange
			}
			else_if = {
				limit = { scope:has_eyegem_purple = yes }
				add_character_flag = has_eyegem_purple
			}
		}
	}

	ai_check_interval = 60

	ai_potential = {
		is_available_adult = yes
		gold > 100 # So they don't bankrupt themself on a pretty eyepiece
	}

	ai_will_do = {
		base = 0

		# Gold Modifiers
		modifier = {
			add = -100
			NOT = { gold >= 100 }
		}
		# Having more than 100 gold will make the AI more likely to take it; more money more spending freedom
		modifier = {
			add = 10
			gold > 100
		}
		# Culture Modifier - Valyrians are more likely to take this decision, but not by much
		modifier = {
			add = 15
			OR = {
				has_culture = culture:high_valyrian
				has_culture = culture:westerosi_valyrian
				has_culture = culture:essosi_valyrian
				has_religion = religion:the_flames_religion
			}
		}
		# Dynasty Modifier - Tarth is the Sapphire Isle, so they will be more likely to take this decision due to an abundance of gems
		modifier = {
			add = 25
			dynasty = dynasty:dynn_Tarth
		}
		modifier = {
			add = 10
			has_trait = callous
		}
		modifier = {
			add = 5
			has_trait = deceitful
		}
		modifier = {
			add = 5
			has_trait = wrathful
		}
		modifier = {
			add = 7
			has_trait = sadistic
		}
		modifier = {
			add = 5
			has_trait = vengeful
		}
		modifier = {
			add = 25
			has_trait = arrogant
		}
		modifier = {
			add = -15
			has_trait = craven
		}
		modifier = {
			add = -15
			has_trait = shy
		}
		modifier = {
			add = -15
			has_trait = content
		}
		# High Dread Characters will be more inspired to take this decision
		modifier = {
			add = 25
			dread > high_dread
		}
		# Bold Characters will be more inspired to take this decision
		modifier = {
			add = 20
			ai_boldness > very_low_positive_ai_value
		}
	}
}

remove_eye_gem_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	ai_check_interval = 60

	sort_order = 88

	desc = remove_eye_decision_tooltip
	selection_tooltip = remove_eye_decision_tooltip

	cooldown = { years = 3 }

	is_shown = {
		has_trait = one_eyed
		OR = {
			has_character_flag = has_eyegem_red
			has_character_flag = has_eyegem_saphire
			has_character_flag = has_eyegem_white
			has_character_flag = has_eyegem_blue
			has_character_flag = has_eyegem_green
			has_character_flag = has_eyegem_black
			has_character_flag = has_eyegem_yellow
			has_character_flag = has_eyegem_orange
			has_character_flag = has_eyegem_purple
		}
	}

	effect = {
		trigger_event = eyereplace.0005
		custom_tooltip = remove_eye_gem_decision_effect
	}
}

agot_commission_crown_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_smith.dds"
	}
	ai_check_interval = 12
	cooldown = { years = 10 }
	desc = agot_commission_crown_decision_desc
	selection_tooltip = agot_commission_crown_decision_tooltip

	decision_group_type = artifact

	is_shown = {
		NOT = {
			government_has_flag = government_is_nw
		}
		OR = {
			primary_title.tier = tier_empire
			AND = {
				primary_title.tier = tier_kingdom
				agot_is_independent_ruler = yes
			}
		}
		agot_can_make_any_crown_trigger = yes
		agot_ai_unique_crown_character_trigger = yes
	}

	is_valid = {
		gold >= 250
	}

	is_valid_showing_failures_only = {
		# Only valid for characters with a court smith.
		employs_court_position = court_smith_court_position

		custom_tooltip = {
			text = agot_in_coronation
			NOR = {
				involved_activity ?= {
					has_activity_type = activity_coronation
				}
				involved_activity ?= {
					has_activity_type = activity_no_dlc_coronation
				}
			}
		}

		#custom_tooltip = {
		#	text = agot_commission_on_cooldown
		#	NOT = {
		#		has_variable = crown_commission_cooldown
		#	}
		#}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 25
	}

	effect = {
		custom_tooltip = agot_commission_crown_decision_effects_tooltip
		trigger_event = agot_commission_crown.0001
	}

	cost = { gold = 250 }
}

claim_dawn_worthy_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	decision_group_type = major

	sort_order = 1

	cost = { }

	desc = claim_dawn_worthy_decision_desc

	is_shown = {
		worthy_sword_of_the_morning_trigger = yes
		any_character_artifact = {
			has_artifact_modifier = vs_dawn_modifier
		}
		NOT = { has_character_flag = claimed_dawn }
	}

	is_valid = {
		worthy_sword_of_the_morning_trigger = yes
	}

	ai_check_interval = 60

	ai_potential = { always = yes }

	ai_will_do = { base = 100 }

	effect = {
		give_nickname = nick_the_sword_of_the_morning

		add_character_flag = claimed_dawn
		add_character_flag = is_sword_of_morning

		random_character_artifact = {
			limit = { has_artifact_modifier = vs_dawn_modifier }
			save_scope_as = dawn
		}

		add_prestige = massive_prestige_value
		add_prestige_level = 1

		hidden_effect = {
			scope:dawn = {
				equip_artifact_to_owner_replace = yes
			}
		}
	}
}

claim_dawn_unworthy_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	desc = claim_dawn_unworthy_decision_desc
	sort_order = 1

	decision_group_type = artifact

	cost = { prestige = 1000 }

	is_shown = {
		worthy_sword_of_the_morning_trigger = no
		any_character_artifact = {
			has_artifact_modifier = vs_dawn_modifier
		}
		NOT = { has_character_flag = claimed_dawn }
	}

	is_valid = {
		NAND = {
			dynasty = dynasty:dynn_Dayne
			OR = {
				has_trait = education_martial_prowess_4
				has_trait = education_martial_prowess_5
			}
			prowess >= 20
			OR = {
				has_trait = just
				has_trait = brave
			}
			NOR = {
				has_trait = murderer
				has_trait = kinslayer
				has_trait = gluttonous
				has_trait = greedy
				has_trait = lazy
				has_trait = callous
				has_trait = sadistic
				has_trait = deceitful
				has_trait = drunkard
				has_trait = craven
				has_trait = arbitrary
				has_trait = torturer
				has_trait = physique_bad
			}
		}
	}

	ai_check_interval = 0

	ai_potential = { always = no }

	ai_will_do = { base = 100 }

	effect = {
		add_character_flag = claimed_dawn

		random_character_artifact = {
			limit = { has_artifact_modifier = vs_dawn_modifier }
			save_scope_as = dawn
		}

		add_prestige_level = -1

		hidden_effect = {
			scope:dawn = {
				equip_artifact_to_owner_replace = yes
			}
		}
	}
}

retrieve_hidden_artifact_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	desc = retrieve_hidden_artifact_decision_desc
	selection_tooltip = retrieve_hidden_artifact_decision_tooltip

	decision_group_type = artifact

	ai_check_interval = 0

	is_shown = {
		any_secret = { secret_type = secret_agot_hidden_artifact }
	}

	is_valid_showing_failures_only = {
		is_available = yes
		age >= 10
	}

	effect = {
		if = {
			limit = { house ?= dynasty:dynn_Uller.dynasty_founder.house }
			show_as_tooltip = {
				agot_create_artifact_rhaenys_circlet_historical_effect = { OWNER = this }
			}
			trigger_event = agot_decisions_events.1000
		}
		else_if = {
			limit = {
				exists = dynasty:dynn_Mopatis
				house ?= dynasty:dynn_Mopatis.dynasty_founder.house
			}
			show_as_tooltip = {
				agot_create_artifact_vs_blackfyre_effect = { OWNER =this }
			}
			trigger_event = agot_decisions_events.1010
		}
	}

	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

retrieve_stored_artifacts_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	desc = retrieve_stored_artifacts_decision_desc
	selection_tooltip = retrieve_stored_artifacts_decision_tooltip

	decision_group_type = artifact

	ai_check_interval = 12

	is_shown = {
		exists = global_var:targ_artifacts_in_storage
		has_title = title:c_kings_landing
	}

	effect = {
		remove_global_variable = targ_artifacts_in_storage
		agot_spawn_historical_dragon_skulls_effect = { OWNER = root }
		agot_create_artifact_aenys_crown_historical_effect = { OWNER = root }
		scope:newly_created_artifact ?= {
			add_artifact_history = {
				recipient = root
				type = inherited
			}
		}
		agot_create_artifact_aegon_iii_crown_historical_effect = { OWNER = root }
		scope:newly_created_artifact ?= {
			add_artifact_history = {
				recipient = root
				type = inherited
			}
		}
		agot_create_artifact_aegon_iv_crown_historical_effect = { OWNER = root }
		scope:newly_created_artifact ?= {
			add_artifact_history = {
				recipient = root
				type = inherited
			}
		}
		agot_create_artifact_maekars_crown_historical_effect = { OWNER = root }
		scope:newly_created_artifact ?= {
			add_artifact_history = {
				recipient = root
				type = inherited
			}
		}
	}

	ai_potential = {
		dynasty ?= dynasty:dynn_Targaryen
	}

	ai_will_do = {
		base = 100
	}
}