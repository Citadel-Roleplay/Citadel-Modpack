darklyn_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = darklyn_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Darklyn.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Darklyn
	}

	is_valid = {
		has_title = title:c_duskendale
		has_title = title:d_duskendale
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Darklyn.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

reyne_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = reyne_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Reyne.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Reyne
	}

	is_valid = {
		has_title = title:c_castamere
		has_title = title:d_castamere
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Reyne.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

gardener_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = gardener_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Gardener.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Gardener
	}

	is_valid = {
		has_title = title:c_highgarden
		has_title = title:d_highgarden
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Gardener.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

durrandon_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = durrandon_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Durrandon.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Durrandon
	}

	is_valid = {
		has_title = title:c_storms_end
		has_title = title:d_shipbreaker_bay
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Durrandon.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

stark_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = stark_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Stark.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Stark
	}

	is_valid = {
		has_title = title:c_winterfell
		has_title = title:d_winterfell
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Stark.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

arryn_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = arryn_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Arryn.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Arryn
	}

	is_valid = {
		has_title = title:c_the_eyrie
		has_title = title:d_the_giants_lance
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Arryn.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

hoare_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = hoare_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Hoare.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Hoare
	}

	is_valid = {
		has_title = title:d_orkmont
		has_title = title:c_nettlemont
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Hoare.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

lannister_revival_decision = {
	ai_check_interval = 0
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = lannister_revival_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	is_shown = {
		dynasty:dynn_Lannister.dynasty_founder.house = {
			NOT = {
				any_house_member = {
					is_alive = yes
				}
			}
		}
		dynasty = dynasty:dynn_Lannister
	}

	is_valid = {
		has_title = title:d_casterly_rock
		has_title = title:c_casterly_rock
	}

	effect = {
		agot_house_revival_effect = {
			NEW_HOUSE = dynasty:dynn_Lannister.dynasty_founder.house
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

dynamic_bastard_house_revival_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	}

	desc = dynamic_bastard_house_revival_decision_desc

	decision_group_type = major

	selection_tooltip = house_revival_tooltip

	cost = {
		prestige = medium_prestige_value
	}
	cooldown = {
		years = 5
	}

	is_shown = {
		house ?= {
			var:bastard_house_of ?= {
				any_house_member = {
					count = 0
				}
			}
		}
		is_house_head = yes
		is_landed_or_landless_administrative = yes
	}

	is_valid = {
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Darklyn.dynasty_founder.house
			}
			has_title = title:c_duskendale
			has_title = title:d_duskendale
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Reyne.dynasty_founder.house
			}
			has_title = title:c_castamere
			has_title = title:d_castamere
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Gardener.dynasty_founder.house
			}
			has_title = title:c_highgarden
			has_title = title:d_highgarden
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Durrandon.dynasty_founder.house
			}
			has_title = title:c_storms_end
			has_title = title:d_shipbreaker_bay
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Stark.dynasty_founder.house
			}
			has_title = title:c_winterfell
			has_title = title:d_winterfell
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Arryn.dynasty_founder.house
			}
			has_title = title:d_casterly_rock
			has_title = title:c_casterly_rock
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Hoare.dynasty_founder.house
			}
			has_title = title:d_orkmont
			has_title = title:c_nettlemont
		}
		trigger_if = {
			limit = {
				house.var:bastard_house_of = dynasty:dynn_Lannister.dynasty_founder.house
			}
			has_title = title:d_orkmont
			has_title = title:c_nettlemont
		}
		trigger_else = {
			custom_tooltip = {
				text = dynamic_bastard_house_revival_decision_bastard
				always = yes
			}
		}
	}

	effect = {
		if = {
			limit = {
				has_trait = bastard_founder
				root.capital_province = {
					geographical_region = world_westeros_seven_kingdoms
				}
				top_liege ?= {
					highest_held_title_tier = tier_empire
					capital_province = {
						geographical_region = world_westeros_seven_kingdoms
					}
				}
			}
			save_scope_as = bastard
			top_liege = {
				primary_title = {
					save_scope_as = empire_title
				}
				save_scope_as = top_liege
				trigger_event = agot_dynastic_stability.2000
			}
			house.var:bastard_house_of ?= {
				save_scope_as = bastard_house_of # loc
			}
			custom_tooltip = dynamic_bastard_house_revival_decision_westeros_needs_legitimization
		}
		else = {
			house = { save_scope_as = house }
			house.var:bastard_house_of ?= {
				save_scope_as = bastard_house_of
			}
			every_child = {
				limit = { this.house = scope:house }
				set_house = house.var:bastard_house_of
				every_held_title = {
					limit = {
						title_uses_legitimate_house_mechanic = yes
					}
					save_scope_as = legitimate_house_title_to_change
					agot_set_current_house = {
						HOUSE = house.var:bastard_house_of
						TITLE = scope:legitimate_house_title_to_change
					}
					if = {
						limit = {
							var:legitimate_house = scope:house
						}
						agot_set_legitimate_house = {
							HOUSE = house.var:bastard_house_of
							TITLE = scope:legitimate_house_title_to_change
						}
					}
				}
				every_child = {
					limit = {
						this.house = scope:house
					}
					set_house = house.var:bastard_house_of
					every_held_title = {
						limit = {
							title_uses_legitimate_house_mechanic = yes
						}
						save_scope_as = legitimate_house_title_to_change
						agot_set_current_house = {
							HOUSE = house.var:bastard_house_of
							TITLE = scope:legitimate_house_title_to_change
						}
						if = {
							limit = {
								var:legitimate_house = scope:house
							}
							agot_set_legitimate_house = {
								HOUSE = house.var:bastard_house_of
								TITLE = scope:legitimate_house_title_to_change
							}
						}
					}
					every_child = {
						limit = {
							this.house = scope:house
						}
						set_house = house.var:bastard_house_of
						every_held_title = {
							limit = {
								title_uses_legitimate_house_mechanic = yes
							}
							save_scope_as = legitimate_house_title_to_change
							agot_set_current_house = {
								HOUSE = house.var:bastard_house_of
								TITLE = scope:legitimate_house_title_to_change
							}
							if = {
								limit = {
									var:legitimate_house = scope:house
								}
								agot_set_legitimate_house = {
									HOUSE = house.var:bastard_house_of
									TITLE = scope:legitimate_house_title_to_change
								}
							}
						}
					}
				}
			}
			set_house = house.var:bastard_house_of
			every_held_title = {
				set_coa = root.house
				if = {
					limit = {
						title_uses_legitimate_house_mechanic = yes
					}
					save_scope_as = legitimate_house_title_to_change
					agot_set_current_house = {
						HOUSE = house.var:bastard_house_of
						TITLE = scope:legitimate_house_title_to_change
					}
					if = {
						limit = {
							var:legitimate_house = scope:house
						}
						agot_set_legitimate_house = {
							HOUSE = house.var:bastard_house_of
							TITLE = scope:legitimate_house_title_to_change
						}
					}
				}
			}
			scope:bastard_house_of = {
				if = {
					limit = { root = { is_house_head = no } }
					set_house_head = root
				}
			}
			add_legitimacy = medium_legitimacy_loss
		}
	}

	ai_potential = {
		always = yes
	}

	ai_check_interval = 36

	ai_will_do = {
		base = 60
		modifier = {
			add = 100
			any_parent = {
				house ?= house.var:bastard_house_of
			}
		}
	}
}