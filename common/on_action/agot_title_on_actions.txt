# A title is destroyed
# root = the holder before destruction
# scope:landed_title = the title that is being destroyed
# Does *not* provide scope:transfer_type
on_title_destroyed = {
	on_actions = {
		agot_pentos_treaty_pentos_destroyed_on_action
		agot_title_destroyed_mega_war_on_action
	}
}

# A title is transferred to a new character
# root = the new holder
# scope:title = the title that changes hands
# scope:previous_holder = previous holder. Might be dead
on_title_gain = {
	on_actions = {
		agot_pentos_treaty_on_action
	}
}

on_title_lost = {
	on_actions = {
		agot_pentos_treaty_on_action_title_lost
		agot_small_council_title_lost
	}
}

on_vassal_gained = {
	on_actions = {
		agot_pentos_treaty_on_action
	}
}

on_vassal_change = {
	on_actions = {
		agot_pentos_treaty_on_action_independence
	}
}

agot_pentos_treaty_on_action = {
	trigger = {
		exists = global_var:braavos_treaty
		exists = title:k_pentos.holder
	}
	effect = {
		if = {
			limit = {
				OR = {
					top_liege = title:k_pentos.holder
					has_title = title:k_pentos
				}
				NOT = {
					has_character_modifier = agot_pentos_braavos_treaty
				}
			}
			add_character_modifier = agot_pentos_braavos_treaty
		}
		scope:vassal ?= {
			if = {
				limit = {
					OR = {
						top_liege = title:k_pentos.holder
						root = { has_title = title:k_pentos }
					}
					NOT = {
						has_character_modifier = agot_pentos_braavos_treaty
					}
				}
				add_character_modifier = agot_pentos_braavos_treaty
			}
			else_if = {
				limit = {
					NOR = {
						top_liege = title:k_pentos.holder
						root = { has_title = title:k_pentos }
					}
					has_character_modifier = agot_pentos_braavos_treaty
				}
				remove_character_modifier = agot_pentos_braavos_treaty
			}
		}
	}
}

agot_pentos_treaty_on_action_independence = {
	trigger = {
		scope:old_liege = title:k_pentos.holder
		NOR = {
			liege ?= title:k_pentos.holder
			top_liege ?= title:k_pentos.holder
		}
	}
	effect = {
		if = {
			limit = {
				has_character_modifier = agot_pentos_braavos_treaty
			}
			remove_character_modifier = agot_pentos_braavos_treaty
		}
		every_vassal_or_below = {
			limit = {
				has_character_modifier = agot_pentos_braavos_treaty
			}
			remove_character_modifier = agot_pentos_braavos_treaty
		}
	}
}

agot_pentos_treaty_on_action_title_lost = {
	trigger = {
		NOR = {
			has_title = title:k_pentos
			liege ?= title:k_pentos.holder
			top_liege ?= title:k_pentos.holder
		}
	}
	effect = {
		if = {
			limit = {
				has_character_modifier = agot_pentos_braavos_treaty
			}
			remove_character_modifier = agot_pentos_braavos_treaty
		}
	}
}

agot_pentos_treaty_pentos_destroyed_on_action = {
	trigger = {
		NOR = {
			exists = title:k_pentos.holder
			exists = title:k_braavos.holder
		}
	}
	effect = {
		every_living_character = {
			limit = {
				has_character_modifier = agot_pentos_braavos_treaty
			}
			remove_character_modifier = agot_pentos_braavos_treaty
			trigger_event = { id = agot_decisions_events.0201 days = 1 }
		}
	}
}

agot_small_council_title_lost = {
	trigger = {
		scope:title = {
			has_variable = small_council_vassal_title
		}
	}
	effect = {
		if = {
			limit = {
				exists = scope:new_holder
				exists = scope:title.var:small_council_vassal_title.holder
				scope:new_holder = {
					has_relation_small_councillor = scope:title.var:small_council_vassal_title.holder
				}
			}
			scope:new_holder = {
				remove_relation_small_councillor = scope:title.var:small_council_vassal_title.holder
			}
			scope:title.var:small_council_vassal_title.holder = {
				if = {
					limit = { has_variable = special_contract_none }
					vassal_contract_set_obligation_level = { type = special_contract level = 0 }
				}
				if = {
					limit = { has_variable = special_contract_scutage }
					vassal_contract_set_obligation_level = { type = special_contract level = 1 }
				}
				if = {
					limit = { has_variable = special_contract_march }
					vassal_contract_set_obligation_level = { type = special_contract level = 2 }
				}
				if = {
					limit = { has_variable = special_contract_palatinate }
					vassal_contract_set_obligation_level = { type = special_contract level = 3 }
				}
				remove_variable = small_council
				remove_variable = small_council_liege_title
				remove_variable = small_council_original_liege_title
				remove_localized_text = small_council_title
				remove_character_flag = ai_should_not_transfer
			}
			scope:title = {
				remove_variable = small_council_vassal_title
			}
			agot_remove_repatriation_modifiers = yes
		}
		else_if = {
			limit = {
				exists = scope:new_holder
			}
			save_scope_as = old_holder
			agot_reassign_repatriation_modifier = { OLD_LIEGE = scope:old_holder NEW_LIEGE = scope:new_holder }
		}
		else = {
			agot_remove_repatriation_modifiers = yes
		}
	}
}