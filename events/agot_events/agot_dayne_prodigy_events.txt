namespace = agot_dayne_prodigy

agot_dayne_prodigy.0002 = { # Parent will have choice of either trying to make their child brave, or have them train with a sword
	type = character_event
	title = agot_dayne_prodigy.0002.t
	desc = agot_dayne_prodigy.0002.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = {
		name = agot_dayne_prodigy.0002.a
		custom_tooltip = agot_dayne_prodigy.0002.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}
		hidden_effect = {
			scope:prodigy = {
				if = {
					limit = {
						number_of_personality_traits < personality_trait_limit
					}
					random_list = {
						70 = {
							if = {
								limit = {
									scope:prodigy = {
										has_trait = craven
									}
								}
								remove_trait = craven
							}
							add_trait = brave
							root = {
								send_interface_toast = {
									title = agot_dayne_prodigy.0002.gainedtraitbrave
								}
							}

							modifier = {
								trigger = {
									root = { has_trait = brave }
								}
								factor = 1.2
							}
							modifier = {
								trigger = {
									scope:prodigy = {
										OR = {
											has_trait = rowdy
											has_trait = curious
										}
									}
								}
								add = 10
							}
						}
						30 = {
							add_trait = craven
							root = {
								send_interface_toast = {
									title = agot_dayne_prodigy.0002.gainedtraitcraven
								}
								trigger_event = agot_dayne_prodigy.0018
							}
							modifier = {
								trigger = {
									root = { has_trait = craven }
								}
								factor = 1.2
							}
							modifier = {
								trigger = {
									scope:prodigy = {
										has_trait = pensive
									}
								}
								add = 10
							}
							random_owned_story = {
								limit = {
									story_type = agot_story_sotm
								}
								end_story = yes
							}
						}
					}
				}
		}
		}
		ai_chance = {
			base = 50
		}

	}

	option = {
		name = agot_dayne_prodigy.0002.b
		custom_tooltip = agot_dayne_prodigy.0002.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainednoprowess
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0003 = { # Parent will have option to push their child for prowess training, or to make them just
	type = character_event
	title = agot_dayne_prodigy.0003.t
	desc = agot_dayne_prodigy.0003.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = {
		name = agot_dayne_prodigy.0003.a
		custom_tooltip = agot_dayne_prodigy.0003.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}
		hidden_effect = {
			scope:prodigy = {
				random_list = {
					70 = {
						if = {
							limit = {
								scope:prodigy = {
									has_trait = callous
								}
							}
							remove_trait = callous
						}
						add_trait = just
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0003.gainedtraitjust
							}
						}
						modifier = {
							trigger = {
								root = { has_trait = just }
							}
							factor = 1.2
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = pensive
										has_trait = charming
									}
								}
							}
							add = 10
						}
					}
					30 = {
						if = {
							limit = {
								scope:prodigy = { has_trait = just }
							}
							remove_trait = just
						}
						add_trait = callous
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0003.gainedtraitcallous
							}
							trigger_event = agot_dayne_prodigy.0018
						}
						modifier = {
							trigger = {
								root = { has_trait = callous }
							}
							factor = 1.2
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = bossy
										has_trait = rowdy
									}
								}
							}
							add = 10
						}

						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = agot_dayne_prodigy.0003.b
		custom_tooltip = agot_dayne_prodigy.0003.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainednoprowess
						}
					}
				}
			}

		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0004 = { # Parent will have the option of having them train harder, or trying to make them compassionate
	type = character_event
	title = agot_dayne_prodigy.0004.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:prodigy = {
						number_of_personality_traits < personality_trait_limit
					}
				}
				desc = agot_dayne_prodigy.0004.desc
			}
			desc = agot_dayne_prodigy.0004.desc_nocomp
		}
	}
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = {
		name = agot_dayne_prodigy.0004.a
		custom_tooltip = agot_dayne_prodigy.0004.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}

		hidden_effect = {
			scope:prodigy = {
				random_list = {
					70 = {
						if = {
							limit = {
								scope:prodigy = {
									has_trait = sadistic
								}
							}
							remove_trait = sadistic
						}
						add_trait = compassionate
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0004.gainedtraitcompassionate
							}
						}
						modifier = {
							trigger = {
								root = { has_trait = compassionate }
							}
							factor = 1.2
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = pensive
										has_trait = charming
									}
								}
							}
							add = 10
						}
					}
					30 = {
						if = {
							limit = {
								scope:prodigy = { has_trait = compassionate }
							}
							remove_trait = compassionate
						}
						add_trait = sadistic
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0004.gainedtraitsadistic
							}
							trigger_event = agot_dayne_prodigy.0018
						}
						modifier = {
							trigger = {
								root = { has_trait = sadistic }
							}
							factor = 1.2
						}
						modifier = {
							root = { has_character_modifier = patron_saagael_modifier }
							factor = 1.2
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = curious
										has_trait = rowdy
									}
								}
							}
							add = 10
						}
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = agot_dayne_prodigy.0004.b
		custom_tooltip = agot_dayne_prodigy.0004.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0002.gainednoprowess
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0005 = { # Parent will have the option of trying to make them a blademaster with a bunch of XP or giving up, may result in death if they choose the former
	type = character_event
	title = agot_dayne_prodigy.0005.t
	desc = agot_dayne_prodigy.0005.desc
	theme = education


	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}
	immediate = {
		create_character = {
			age = { 20 40}
			gender_female_chance = 0
			culture = root.culture
			faith = root.faith
			location = root.location
			dynasty = none
			prowess = 18
			save_scope_as = training_knight

			after_creation = {
				add_trait = knight
			}
		}
	}

	option = { # They put their son through extreme trials, leading to their death, maiming, or becoming a blademaster
		name = agot_dayne_prodigy.0005.a
		custom_tooltip = agot_dayne_prodigy.0005.a.tt

		scope:prodigy = {
			random_list = {
				80 = {
					if = {
						limit = {
							scope:prodigy = {
								has_trait = lifestyle_blademaster
							}
						}
						add_trait_xp = {
							trait = lifestyle_blademaster
							value = 100
						}
					}
					else_if = {
						limit = {
							scope:prodigy = {
								NOT = { has_trait = lifestyle_blademaster }
							}
						}
						add_trait = lifestyle_blademaster

						add_trait_xp = {
							trait = lifestyle_blademaster
							value = 75
						}
					}
				}

				10 = {
					random_list = {
						33 = {
							add_trait = one_eyed
						}
						33 = {
							add_trait = one_legged
						}
						33 = {
							add_trait = one_handed
						}
					}
				}

				10 = {
					death = {
						death_reason = death_duel
						killer = scope:training_knight
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = agot_dayne_prodigy.0005.b
		custom_tooltip = agot_dayne_prodigy.0005.b.tt

		scope:prodigy = {
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

agot_dayne_prodigy.0006 = {
	type = character_event
	title = agot_dayne_prodigy.0006.t
	desc = agot_dayne_prodigy.0006.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = worry
	}

	option = {
		name = agot_dayne_prodigy.0006.a
		custom_tooltip = agot_dayne_prodigy.0006.a.tt

		scope:prodigy = {
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

agot_dayne_prodigy.0007 = { # See if the prodigy is worthy of being SOTM
	type = character_event
	title = agot_dayne_prodigy.0007.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { root = scope:dayne_dynasty_head }
				desc = agot_dayne_prodigy.0007.desc.non_parent
			}

			triggered_desc = {
				trigger = {
					OR = {
						root = scope:dayne_parent
						root = scope:dayne_grandparent
					}
				}
				desc = agot_dayne_prodigy.0007.desc
			}
		}
	}
	theme = education


	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = { #Prodigy becomes SOTM
		name = agot_dayne_prodigy.0007.a
		custom_tooltip = agot_dayne_prodigy.0007.a.tt

		trigger = {
			scope:prodigy = {
				worthy_sword_of_the_morning_trigger = yes
			}
		}

		scope:prodigy = {
			give_nickname = nick_the_sword_of_the_morning

			add_character_flag = is_sword_of_morning

			add_prestige = massive_prestige_value
			add_prestige_level = 1
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}

		scope:dawn = {
			set_owner = scope:prodigy
		}

		hidden_effect = {
			scope:prodigy = {
				add_character_flag = claimed_dawn
			}

			scope:dawn = {
				equip_artifact_to_owner_replace = yes
			}
		}

		if = {
			limit = {
				scope:dayne_parent = {
					is_ai = no
				}
			}
			scope:dayne_parent = { trigger_event = agot_dayne_prodigy.0016 }
		}
		else_if = {
			limit = {
				exists = scope:dayne_grandparent
			}
			scope:dayne_grandparent = { trigger_event = agot_dayne_prodigy.0016 }
		}

		ai_chance = {
			base = 100
		}
	}

	option = { #Prodigy fails to become SOTM may attempt to steal Dawn
		name = agot_dayne_prodigy.0007.b
		custom_tooltip = agot_dayne_prodigy.0007.b.tt

		trigger = {
			scope:prodigy = {
				worthy_sword_of_the_morning_trigger = no
			}
		}
		hidden_effect = {
			scope:prodigy ?= {
				random_list = {
					10 = {
						trigger_event = agot_dayne_prodigy.0015
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
					90 = {
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = { # Prodigy is worthy but denied the sword anyway
		name = agot_dayne_prodigy.0007.c
		custom_tooltip = agot_dayne_prodigy.0007.c.tt

		trigger = {
			scope:prodigy = {
				worthy_sword_of_the_morning_trigger = yes
			}
		}

		hidden_effect = {
			scope:prodigy = {
				random_list = {
					10 = {
						trigger_event = agot_dayne_prodigy.0015
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
					90 = {
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}

		ai_chance = {
			base = 0
		}
	}
}

agot_dayne_prodigy.0008 = { # Prodigy may be worthy, but there is a SOTM already
	type = character_event
	title = agot_dayne_prodigy.0008.t
	desc = agot_dayne_prodigy.0008.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = {
		name = agot_dayne_prodigy.0008.a
		custom_tooltip = agot_dayne_prodigy.0008.a.tt

		scope:prodigy = {
			add_prestige = 100
		}
		ai_chance = {
			base = 100
		}
	}
}

# Events for if Prodigy's parent is dead

agot_dayne_prodigy.0009 = { # Prodigy will have choice of either trying to be brave, or training with a sword
	type = character_event
	title = agot_dayne_prodigy.0009.t
	desc = agot_dayne_prodigy.0009.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	option = {
		name = agot_dayne_prodigy.0009.a
		custom_tooltip = agot_dayne_prodigy.0009.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}

		hidden_effect = {
			scope:prodigy = {
				if = {
					limit = {
						number_of_personality_traits < personality_trait_limit
					}
					random_list = {
						70 = {
							if = {
								limit = {
									scope:prodigy = {
										has_trait = craven
									}
								}
								remove_trait = craven
							}
							add_trait = brave
							root = {
								send_interface_toast = {
									title = agot_dayne_prodigy.0009.gainedtraitbrave
								}
							}
							modifier = {
								trigger = {
									scope:prodigy = {
										OR = {
											has_trait = rowdy
											has_trait = curious
										}
									}
								}
								add = 10
							}
						}
						30 = {
							add_trait = craven
							root = {
								send_interface_toast = {
									title = agot_dayne_prodigy.0009.gainedtraitcraven
								}
								trigger_event = agot_dayne_prodigy.0019
							}
							modifier = {
								trigger = {
									scope:prodigy = {
										has_trait = pensive
									}
								}
								add = 10
							}
							random_owned_story = {
								limit = {
									story_type = agot_story_sotm
								}
								end_story = yes
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}

	}

	option = {
		name = agot_dayne_prodigy.0009.b
		custom_tooltip = agot_dayne_prodigy.0009.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess1
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainednoprowess
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0010 = { # Prodigy will have choice of either trying to be just, or training with a sword
	type = character_event
	title = agot_dayne_prodigy.0010.t
	desc = agot_dayne_prodigy.0010.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	option = {
		name = agot_dayne_prodigy.0010.a
		custom_tooltip = agot_dayne_prodigy.0010.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}

		hidden_effect = {
			scope:prodigy = {
				random_list = {
					70 = {
						if = {
							limit = {
								scope:prodigy = {
									has_trait = callous
								}
							}
							remove_trait = callous
						}
						add_trait = just
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0010.gainedtraitjust
							}
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = pensive
										has_trait = charming
									}
								}
							}
							add = 10
						}
					}
					30 = {
						if = {
							limit = {
								scope:prodigy = { has_trait = just }
							}
							remove_trait = just
						}
						add_trait = callous
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0010.gainedtraitcallous
							}
							trigger_event = agot_dayne_prodigy.0019
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = bossy
										has_trait = rowdy
									}
								}
							}
							add = 10
						}
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = agot_dayne_prodigy.0010.b
		custom_tooltip = agot_dayne_prodigy.0010.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess1
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainednoprowess
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0011 = { # Prodigy will have choice of either trying to be compassionate, or training with a sword
	type = character_event
	title = agot_dayne_prodigy.0011.t
	desc = agot_dayne_prodigy.0011.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	option = {
		name = agot_dayne_prodigy.0011.a
		custom_tooltip = agot_dayne_prodigy.0011.a.tt

		trigger = {
			scope:prodigy = {
				number_of_personality_traits < personality_trait_limit
			}
		}

		hidden_effect = {
			scope:prodigy = {
				random_list = {
					70 = {
						if = {
							limit = {
								scope:prodigy = {
									has_trait = sadistic
								}
							}
							remove_trait = sadistic
						}
						add_trait = compassionate
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0011.gainedtraitcompassionate
							}
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = pensive
										has_trait = charming
									}
								}
							}
							add = 10
						}
					}
					30 = {
						if = {
							limit = {
								scope:prodigy = { has_trait = compassionate }
							}
							remove_trait = compassionate
						}
						add_trait = sadistic
						root = {
							send_interface_toast = {
								title = agot_dayne_prodigy.0011.gainedtraitsadistic
							}
							trigger_event = agot_dayne_prodigy.0019
						}
						modifier = {
							root = { has_character_modifier = patron_saagael_modifier }
							factor = 1.2
						}
						modifier = {
							trigger = {
								scope:prodigy = {
									OR = {
										has_trait = curious
										has_trait = rowdy
									}
								}
							}
							add = 10
						}
						random_owned_story = {
							limit = {
								story_type = agot_story_sotm
							}
							end_story = yes
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}

	option = {
		name = agot_dayne_prodigy.0011.b
		custom_tooltip = agot_dayne_prodigy.0011.b.tt

		scope:prodigy = {
			random_list = {
				10 = {
					add_prowess_skill = 3
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess3
						}
					}
				}
				30 = {
					add_prowess_skill = 2
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess2
						}
					}
				}
				30 = {
					add_prowess_skill = 1
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainedprowess1
						}
					}
				}
				30 = {
					add_prowess_skill = 0
					root = {
						send_interface_toast = {
							title = agot_dayne_prodigy.0009.gainednoprowess
						}
					}
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
}

agot_dayne_prodigy.0012 = { # Prodigy may try to become a blademaster with a bunch of xp, or give up on the dream of being SOTM, may result in death at the trials
	type = character_event
	title = agot_dayne_prodigy.0012.t
	desc = agot_dayne_prodigy.0012.desc
	theme = education


	left_portrait = {
		character = root
		animation = admiration
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = { # Prodigy goes through extreme trials to become a blademaster, may result in death
		name = agot_dayne_prodigy.0012.a
		custom_tooltip = agot_dayne_prodigy.0012.a.tt

		scope:prodigy = {
			random_list = {
				70 = { # They become a blademaster with XP
					if = {
						limit = {
							scope:prodigy = {
								has_trait = lifestyle_blademaster
							}
						}
						add_trait_xp = {
							trait = lifestyle_blademaster
							value = 50
						}
					}
					else_if = {
						limit = {
							scope:prodigy = {
								NOT = { has_trait = lifestyle_blademaster }
							}
						}
						add_trait = lifestyle_blademaster

						add_trait_xp = {
							trait = lifestyle_blademaster
							value = 75
						}
					}
				}

				20 = { # They're maimed in the trial
					random_list = {
						33 = {
							add_trait = one_eyed
						}
						33 = {
							add_trait = one_legged
						}
						33 = {
							add_trait = one_handed
						}
					}
				}

				10 = { # They're killed in the trial
					create_character = {
						age = { 20 40}
						gender_female_chance = 0
						culture = root.culture
						faith = root.faith
						location = root.location
						dynasty = none
						prowess = 18
						save_scope_as = training_knight

						after_creation = {
							add_trait = knight
						}
					}
					death = {
						death_reason = death_duel
						killer = scope:training_knight
					}
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = { # Prodigy gives up on being SOTM
		name = agot_dayne_prodigy.0012.b
		custom_tooltip = agot_dayne_prodigy.0012.b.tt

		scope:prodigy = {
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

agot_dayne_prodigy.0013 = { # Prodigy finds out if they're worthy or not to be SOTM
	type = character_event
	title = agot_dayne_prodigy.0013.t
	desc = {
		desc = agot_dayne_prodigy.0013.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:prodigy = { worthy_sword_of_the_morning_trigger = yes }
				}
				desc = agot_dayne_prodigy.0013.desc.worthynothousehead
			}

			triggered_desc = {
				trigger = {
					scope:prodigy = { worthy_sword_of_the_morning_trigger = no }
				}
				desc = agot_dayne_prodigy.0013.desc.unworthynothousehead
			}

			triggered_desc = {
				trigger = {
					scope:prodigy = {
						this = dynasty:dynn_Dayne.dynast
						worthy_sword_of_the_morning_trigger = yes
					}
				}
				desc = agot_dayne_prodigy.0013.desc.worthyhousehead
			}

			triggered_desc = {
				trigger = {
					scope:prodigy = {
						this = dynasty:dynn_Dayne.dynast
						worthy_sword_of_the_morning_trigger = no
					}
				}
				desc = agot_dayne_prodigy.0013.desc.unworthyhousehead
			}
		}
	}
	theme = education


	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				scope:prodigy = {
					worthy_sword_of_the_morning_trigger = yes
				}
			}
			animation = ecstasy
		}
		animation = grief
	}

	option = { #Prodigy becomes SOTM
		name = agot_dayne_prodigy.0013.a
		custom_tooltip = agot_dayne_prodigy.0013.a.tt

		trigger = {
			scope:prodigy = {
				worthy_sword_of_the_morning_trigger = yes
			}
		}

		scope:prodigy = {
			give_nickname = nick_the_sword_of_the_morning

			add_character_flag = is_sword_of_morning

			add_prestige = massive_prestige_value
			add_prestige_level = 1
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}

		scope:dawn = {
			set_owner = scope:prodigy
		}

		hidden_effect = {
			scope:prodigy = {
				add_character_flag = claimed_dawn
			}

			scope:dawn = {
				equip_artifact_to_owner_replace = yes
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = { #Prodigy fails to become SOTM
		name = agot_dayne_prodigy.0013.b
		custom_tooltip = agot_dayne_prodigy.0013.b.tt

		trigger = {
			scope:prodigy = {
				worthy_sword_of_the_morning_trigger = no
			}
		}

		ai_chance = {
			base = 100
		}
	}
}

agot_dayne_prodigy.0014 = { # Prodigy may be worthy, but there is a SOTM already
	type = character_event
	title = agot_dayne_prodigy.0014.t
	desc = agot_dayne_prodigy.0014.desc
	theme = education

	left_portrait = {
		character = root
		animation = admiration
	}

	option = {
		name = agot_dayne_prodigy.0014.a
		custom_tooltip = agot_dayne_prodigy.0014.a.tt

		scope:prodigy = {
			add_prestige = 100
		}
		ai_chance = {
			base = 100
		}
	}
}

agot_dayne_prodigy.0015 = { # Prodigy has stolen Dawn
	type = character_event
	title = agot_dayne_prodigy.0015.t
	desc = agot_dayne_prodigy.0015.desc
	theme = education

	left_portrait = {
		character = root
		animation = threatening
	}

	trigger = {
		scope:prodigy = {
			is_imprisoned = no
		}
	}

	immediate = {
		scope:prodigy ?= {
			add_character_flag = claimed_dawn
			add_prestige_level = -1
		}

		scope:dawn ?= {
			set_owner = scope:prodigy
		}

		scope:dawn ?= {
			equip_artifact_to_owner_replace = yes
		}
	}

	option = { #Attempt to imprison them
		name = agot_dayne_prodigy.0015.a
		custom_tooltip = agot_dayne_prodigy.0015.a.tt
		if = {
			limit = {
				exists = scope:dayne_grandparent
				root = scope:dayne_grandparent
			}
			random_list = {
				95 = {
					imprison_character_effect = {
						TARGET = scope:prodigy
						IMPRISONER = scope:dayne_grandparent
					}
				}
				5 = { # They escape with the sword and become a LAAMP
					scope:prodigy ?= {
						create_landless_adventurer_title_effect = {
							REASON = flag:exile
							FLAVOR_CHAR = scope:prodigy
						}
					}
				}
			}
		}
		else = {
			random_list = {
				95 = {
					imprison_character_effect = {
						TARGET = scope:prodigy
						IMPRISONER = scope:dayne_parent
					}
				}
				5 = { # They escape with the sword and become a LAAMP
					scope:prodigy = {
						create_landless_adventurer_title_effect = {
							REASON = flag:exile
							FLAVOR_CHAR = scope:prodigy
						}
					}
				}
			}
		}
	}
}

agot_dayne_prodigy.0016 = { # Notify Dayne parents their child has become SOTM
	type = character_event
	title = agot_dayne_prodigy.0016.t
	desc = agot_dayne_prodigy.0016.desc
	theme = education

	left_portrait = {
		character = root
		animation = ecstasy
	}

	right_portrait = {
		character = scope:prodigy
		animation = ecstasy
	}

	option = {
		name = agot_dayne_prodigy.0016.a
		custom_tooltip = agot_dayne_prodigy.0016.a.tt

		root = {
			add_prestige = 100
		}
	}
}

agot_dayne_prodigy.0017 = { # Prodigy died before story cycle completion
	type = character_event
	title = agot_dayne_prodigy.0017.t
	desc = agot_dayne_prodigy.0017.desc
	theme = death

	left_portrait = {
		character = root
		animation = grief
	}

	right_portrait = {
		character = scope:prodigy
		animation = dead
	}

	option = {
		name = agot_dayne_prodigy.0017.a
		custom_tooltip = agot_dayne_prodigy.0017.a.tt

		root = {
			if = {
				limit = {
					NOT = { has_trait = callous }
				}
				add_stress = major_stress_gain
			}
		}
		scope:prodigy = {
			random_owned_story = {
				limit = {
					story_type = agot_story_sotm
				}
				end_story = yes
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

agot_dayne_prodigy.0018 = {
	type = character_event
	title = agot_dayne_prodigy.0018.t
	desc = agot_dayne_prodigy.0018.desc
	theme = education

	left_portrait = {
		character = root
		animation = sadness
	}

	right_portrait = {
		character = scope:prodigy
		animation = sadness
	}

	option = {
		name = agot_dayne_prodigy.0018.a
		custom_tooltip = agot_dayne_prodigy.0018.a.tt
	}
}

agot_dayne_prodigy.0019 = {
	type = character_event
	title = agot_dayne_Prodigy.0019.t
	desc = agot_dayne_prodigy.0019.desc
	theme = education

	left_portrait = {
		character = root
		animation = sadness
	}

	option = {
		name = agot_dayne_prodigy.0019.a
		custom_tooltip = agot_dayne_prodigy.0019.a.tt
	}
}
