namespace = agot_religion_events

# Whaling Expedition
agot_religion_events.0700 = {
	type = character_event
	title = agot_religion_events.0700.t
	desc = agot_religion_events.0700.desc
	theme = hunt_activity
	override_background = { reference = fp1_ocean }
	right_portrait = root
	immediate = {}

	# I will launch a well-funded expedition
	option = {
		name = agot_religion_events.0700.a
		trigger = { gold >= major_gold_value }
		show_as_unavailable = { gold < major_gold_value }
		remove_short_term_gold = major_gold_value
		set_variable = {
			name = whaling_exp_funds
			value = flag:well_funded
		}
		trigger_event = { id = agot_religion_events.0701 days = 1 }
		add_piety = medium_piety_value
		ai_chance = {
			base = 40
		}
	}

	# I will launch a moderately-funded expedition
	option = {
		name = agot_religion_events.0700.b
		trigger = { gold >= medium_gold_value }
		show_as_unavailable = { gold < medium_gold_value }
		remove_short_term_gold = medium_gold_value
		set_variable = {
			name = whaling_exp_funds
			value = flag:moderately_funded
		}
		trigger_event = { id = agot_religion_events.0701 days = 1 }
		add_piety = minor_piety_value
		ai_chance = {
			base = 60
		}
	}

	# I will launch a sparsely-funded expedition
	option = {
		name = agot_religion_events.0700.c
		trigger = { gold >= minor_gold_value }
		show_as_unavailable = { gold < minor_gold_value }
		remove_short_term_gold = minor_gold_value
		set_variable = {
			name = whaling_exp_funds
			value = flag:sparsely_funded
		}
		trigger_event = { id = agot_religion_events.0701 days = 1 }
		add_piety = miniscule_piety_value
		ai_chance = {
			base = 10
			modifier = {
				factor = 1.5
				has_trait = greedy
			}
		}
	}

	option = {
		name = agot_religion_events.0700.d
		remove_decision_cooldown = agot_launch_whaling_expedition_expedition_decision
	}
}

agot_religion_events.0701 = {
	type = character_event
	title = agot_religion_events.0701.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					var:whaling_success = flag:great
				}
				desc = agot_religion_events.0701.desc_great
			}
			triggered_desc = {
				trigger = {
					var:whaling_success = flag:good
				}
				desc = agot_religion_events.0701.desc_good
			}
			triggered_desc = {
				trigger = {
					var:whaling_success = flag:bad
				}
				desc = agot_religion_events.0701.desc_bad
			}
		}
	}
	window = visit_settlement_window
	theme = hunt_activity
	override_background = { reference = fp1_ocean }
	center_portrait = {
		character = root
		animation = survey
	}
	immediate = {
		random_list = {
			5 = {
				set_variable = {
					name = whaling_success
					value = flag:great
				}
				modifier = {
					add = 5
					has_trait = lifestyle_hunter
				}
				modifier = {
					add = 2
					var:whaling_exp_funds = flag:well_funded
				}
			}
			10 = {
				set_variable = {
					name = whaling_success
					value = flag:good
				}
				modifier = {
					add = 5
					has_trait = lifestyle_hunter
				}
				modifier = {
					add = 5
					var:whaling_exp_funds = flag:moderately_funded
				}
			}
			10 = {
				set_variable = {
					name = whaling_success
					value = flag:bad
				}
				modifier = {
					add = 5
					var:whaling_exp_funds = flag:sparsely_funded
				}
			}
		}
	}
	option = {
		name = agot_religion_events.0701.a
		trigger = {
			var:whaling_success = flag:great
		}
		duel = {
			skill = prowess
			value = high_skill_rating
			45 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = agot_religion_events.0701.a.tt_success
				send_interface_toast = {
					title = agot_religion_events.0701.a.tt_success
					left_icon = root
					add_gold = 350
					add_piety = 350
					if = {
						limit = {
							has_trait = lifestyle_hunter
						}
						add_trait_xp = {
							trait = lifestyle_hunter
							track = hunter
							value = {
								integer_range = {
									min = 15
									max = 20
								}
							}
						}
					}
				}
			}
			55 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = agot_religion_events.0701.a.tt_failure
				send_interface_toast = {
					title = agot_religion_events.0701.a.tt_failure
					left_icon = root
					add_prestige = minor_prestige_loss
				}
			}
		}
	}
	option = {
		name = agot_religion_events.0701.b
		trigger = {
			var:whaling_success = flag:good
		}
		duel = {
			skill = prowess
			value = decent_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = agot_religion_events.0701.b.tt_success
				send_interface_toast = {
					title = agot_religion_events.0701.a.tt_success
					left_icon = root
					add_gold = 150
					add_piety = 150
					if = {
						limit = {
							has_trait = lifestyle_hunter
						}
						add_trait_xp = {
							trait = lifestyle_hunter
							track = hunter
							value = {
								integer_range = {
									min = 5
									max = 10
								}
							}
						}
					}
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = agot_religion_events.0701.a.tt_failure
				send_interface_toast = {
					title = agot_religion_events.0701.a.tt_failure
					left_icon = root
					add_prestige = minor_prestige_loss
				}
			}
		}
	}
	option = {
		name = agot_religion_events.0701.c
		trigger = {
			var:whaling_success = flag:bad
		}
		add_prestige = minor_prestige_loss
	}
	after = {
		remove_variable = whaling_exp_funds
		remove_variable = whaling_success
	}
}

# Send Food  to Dragon
agot_religion_events.0800 = {
	type = character_event
	title = agot_religion_events.0800.t
	desc = agot_religion_events.0800.desc
	theme = faith
	left_portrait = scope:actor
	right_portrait = {
		character = scope:recipient
		animation = dragon_main
		camera = camera_dragon_event_standing
		outfit_tags = { linear_camera_zoom }
	}
	override_background = {
		reference = wilderness_scope
	}
	immediate = {}
	option = {
		name = agot_religion_events.0800.a
		random_list = {
			25 = {
				death = {
					death_reason = death_dragon_fire
					killer = scope:recipient
				}
				modifier = {
					add = {
						value = scope:recipient.draconic_dread
						divide = 2
					}
				}
			}
			25 = {
				add_trait = burned
				add_trait_xp = {
					trait = burned
					value = {
						integer_range = {
							min = 30
							max = 75
						}
					}
				}
				add_piety = minor_piety_value
			}
			25 = {
				add_piety = major_piety_gain
			}
		}
	}
	option = {
		name = agot_religion_events.0800.b
	}
}

# Sacrifice Child to Others
agot_religion_events.0900 = {
	type = character_event
	title = agot_religion_events.0900.t
	desc = agot_religion_events.0900.desc
	theme = faith
	left_portrait = scope:actor
	right_portrait = scope:recipient
	override_background = {
		reference = wilderness_scope
	}
	immediate = {}
	option = {
		name = agot_religion_events.0900.a
		scope:recipient = {
			death = {
				death_reason = death_sacrificed_to_others
				killer = scope:actor
			}
		}
		add_trait = murderer
		add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
		add_piety = major_piety_gain
	}
}

#Oily Black Stone Offering
agot_religion_events.1000 = {
	type = character_event
	title = agot_religion_events.1000.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					faith = {
						any_holy_site = {
							OR = {
								county.holder = root
								county.holder.top_liege = { this = root }
							}
						}
					}
				}
				desc = agot_religion_events.1000.desc.holy_site
			}
			triggered_desc = {
				trigger = {
					any_character_artifact = {
						has_variable = oily_black_stone_artifact
					}
				}
				desc = agot_religion_events.1000.desc.artifact
			}
		}
	}
	theme = faith
	override_background = {
		reference = agot_oily_black_stone_obelisk
	}

	right_portrait = {
		character = root
		animation = throne_room_kneel_1
		camera = camera_event_center_away
	}

	immediate = {
		play_music_cue = mood_shadowbinder
	}

	option = {
		trigger = {
			OR = {
				is_ai = no
				short_term_gold > major_gold_value
			}
		}
		name = agot_religion_events.1000.a
		remove_short_term_gold = major_gold_value
		flavor = agot_religion_events.1000.a.tt
		save_scope_value_as = {
			name = offering
			value = flag:expensive
		}
		stress_impact = {
			greedy = medium_stress_gain
			cynical = medium_stress_gain
		}
		trigger_event = {
			id = agot_religion_events.1001
			days = { 2 3 }
		}
		ai_chance = {
			base = 0

			ai_value_modifier = {
				ai_zeal = 10
				ai_greed = -10
			}
		}
	}

	option = {
		trigger = {
			OR = {
				is_ai = no
				short_term_gold > minor_gold_value
			}
		}
		name = agot_religion_events.1000.b
		remove_short_term_gold = minor_gold_value
		flavor = agot_religion_events.1000.b.tt
		save_scope_value_as = {
			name = offering
			value = flag:traditional
		}
		trigger_event = {
			id = agot_religion_events.1001
			days = { 2 3 }
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = agot_religion_events.1000.c
		flavor = agot_religion_events.1000.c.tt
		save_scope_value_as = {
			name = offering
			value = flag:none
		}
		stress_impact = {
			generous = medium_stress_gain
			humble = medium_stress_gain
		}
		trigger_event = {
			id = agot_religion_events.1001
			days = { 2 3 }
		}

		ai_chance = {
			base = 0

			ai_value_modifier = {
				ai_boldness = 5
				ai_greed = 5
				ai_zeal = -10
			}

			modifier = {
				add = 980
				has_trait = arrogant
			}
		}
	}

	option = {
		name = agot_religion_events.1000.d
		flavor = agot_religion_events.1000.d.tt
		remove_decision_cooldown = oily_black_stone_meditate_decision
		ai_chance = {
			base = 0
		}
	}
}
agot_religion_events.1001 = {
	type = character_event
	title = agot_religion_events.1001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:offering = flag:none
				}
				desc = agot_religion_events.1001.desc.start_no_offering
			}
			desc = agot_religion_events.1001.desc.start_offering
		}
		desc = agot_religion_events.1001.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:outcome = flag:no_effect
				}
				desc = agot_religion_events.1001.desc.end_no_change
			}
			desc = agot_religion_events.1001.desc.end_changed
		}
	}
	theme = faith
	override_background = {
		reference = agot_oily_black_stone_obelisk_glowing
	}
	right_portrait = {
		character = root
		triggered_animation = {
			trigger = { scope:outcome = flag:shrewd }
			animation = thinking
		}
		triggered_animation = {
			trigger = { scope:outcome = flag:strong }
			animation = wrestling_victory
		}
		triggered_animation = {
			trigger = {
				OR = {
					scope:outcome = flag:whispering_stone_blessing
					scope:outcome = flag:eternal_design_blessing
					scope:outcome = flag:monolith_wisdom_blessing
					scope:outcome = flag:black_heart_blessing
					scope:outcome = flag:eldritch_presence_blessing
				}
			}
			animation = happiness
		}
		triggered_animation = {
			trigger = {
				OR = {
					scope:outcome = flag:ill
					scope:outcome = flag:impotent
					scope:outcome = flag:infirm
				}
			}
			animation = sick_stomach
		}
		triggered_animation = {
			trigger = { scope:outcome = flag:possessed }
			animation = eccentric
		}
		triggered_animation = {
			trigger = { scope:outcome = flag:lunatic }
			animation = lunatic
		}
		triggered_animation = {
			trigger = {
				scope:outcome = flag:no_effect
				has_trait = zealous
			}
			animation = sadness
		}
		triggered_animation = {
			trigger = {
				scope:outcome = flag:no_effect
				NOT = { has_trait = zealous }
			}
			animation = disappointed
		}
	}

	on_trigger_fail = {
		# Refund the player's money if the ritual fails for some reason.
		if = {
			limit = {
				scope:offering = flag:expensive
			}
			add_gold = major_gold_value
		}
		else_if = {
			limit = {
				scope:offering = flag:traditional
			}
			add_gold = minor_gold_value
		}
	}

	immediate = {
		# Determine what the impact of the ritual will be.
		random_list = {
			# Permanent Skill Boost
			5 = {
				trigger = {
					NAND = {
						AND = {
							has_trait = shrewd
							has_trait_rank = {
								trait = intellect_bad
								rank > 0
							}
						}
						AND = {
							has_trait = strong
							has_trait_rank = {
								trait = physique_bad
								rank > 0
							}
						}
					}
				}
				random_list = {
					50 = {
						trigger = {
							NOR = {
								has_trait = shrewd
								has_trait_rank = {
									trait = intellect_bad
									rank > 0
								}
							}
						}
						save_scope_value_as = {
							name = outcome
							value = flag:shrewd
						}
					}
					50 = {
						trigger = {
							NOR = {
								has_trait = strong
								has_trait_rank = {
									trait = physique_bad
									rank > 0
								}
							}
						}
						save_scope_value_as = {
							name = outcome
							value = flag:strong
						}
					}
				}
			}
			# Temporary Skill Boost
			15 = {
				modifier = { # 0% chance with expensive offering.
					add = 10
					scope:offering = flag:expensive
				}
				modifier = { # 66% chance with no offering.
					add = -5
					scope:offering = flag:none
				}
				random_list = {
					20 = {
						save_scope_value_as = {
							name = outcome
							value = flag:whispering_stone_blessing
						}
					}
					20 = {
						save_scope_value_as = {
							name = outcome
							value = flag:eternal_design_blessing
						}
					}
					20 = {
						save_scope_value_as = {
							name = outcome
							value = flag:black_heart_blessing
						}
					}
					20 = {
						save_scope_value_as = {
							name = outcome
							value = flag:monolith_wisdom_blessing
						}
					}
					20 = {
						save_scope_value_as = {
							name = outcome
							value = flag:eldritch_presence_blessing
						}
					}
				}
			}
			# No Effect
			30 = {
				modifier = { # 0% chance with expensive offering.
					add = -10
					scope:offering = flag:expensive
				}
				modifier = { # 66% chance with no offering.
					add = 5
					scope:offering = flag:none
				}

				save_scope_value_as = {
					name = outcome
					value = flag:no_effect
				}
			}
			# Negative Effect
			40 = {
				random_list = {
					25 = {
						trigger = { NOT = { has_trait = possessed } }
						modifier = {
							add = 100
							scope:offering = flag:expensive
						}
						save_scope_value_as = {
							name = outcome
							value = flag:possessed
						}
					}
					25 = {
						trigger = { NOT = { has_trait = lunatic_1 } }
						modifier = {
							add = 50
							scope:offering = flag:none
						}
						save_scope_value_as = {
							name = outcome
							value = flag:lunatic
						}
					}
					25 = {
						trigger = { NOT = { has_trait = impotent } }
						save_scope_value_as = {
							name = outcome
							value = flag:impotent
						}
					}
					25 = {
						trigger = { can_contract_disease_trigger = { DISEASE = ill } }
						save_scope_value_as = {
							name = outcome
							value = flag:ill
						}
					}
					25 = {
						trigger = { NOT = { has_trait = infirm } }
						save_scope_value_as = {
							name = outcome
							value = flag:infirm
						}
					}
				}
			}
		}

		# If we failed to set the outcome flag, set it now.
		if = {
			limit = {
				NOT = { exists = scope:outcome }
			}
			save_scope_value_as = {
				name = outcome
				value = flag:no_effect
			}
		}
	}

	option = {
		# Custom name text based on ritual outcome.
		name = {
			trigger = { scope:outcome = flag:shrewd }
			text = agot_religion_events.1001.shrewd
		}
		name = {
			trigger = { scope:outcome = flag:strong }
			text = agot_religion_events.1001.strong
		}
		name = {
			trigger = {
				OR = {
					scope:outcome = flag:whispering_stone_blessing
					scope:outcome = flag:eternal_design_blessing
					scope:outcome = flag:monolith_wisdom_blessing
					scope:outcome = flag:black_heart_blessing
					scope:outcome = flag:eldritch_presence_blessing
				}
			}
			text = agot_religion_events.1001.good
		}
		name = {
			trigger = {
				OR = {
					scope:outcome = flag:ill
					scope:outcome = flag:impotent
					scope:outcome = flag:infirm
				}
			}
			text = agot_religion_events.1001.bad
		}
		name = {
			trigger = { scope:outcome = flag:possessed }
			text = agot_religion_events.1001.possessed
		}
		name = {
			trigger = { scope:outcome = flag:lunatic }
			text = agot_religion_events.1001.possessed
		}
		name = {
			trigger = {
				scope:outcome = flag:no_effect
				has_trait = zealous
			}
			text = agot_religion_events.1001.no_change.zealous
		}
		name = {
			trigger = {
				scope:outcome = flag:no_effect
				NOT = { has_trait = zealous }
			}
			text = agot_religion_events.1001.no_change
		}
		flavor = {
			first_valid = {
				triggered_desc = {
					trigger = { scope:outcome = flag:shrewd }
					desc = agot_religion_events.1001.shrewd.tt
				}
				triggered_desc = {
					trigger = { scope:outcome = flag:strong }
					desc = agot_religion_events.1001.strong.tt
				}
				triggered_desc = {
					trigger = {
						OR = {
							scope:outcome = flag:whispering_stone_blessing
							scope:outcome = flag:eternal_design_blessing
							scope:outcome = flag:monolith_wisdom_blessing
							scope:outcome = flag:black_heart_blessing
							scope:outcome = flag:eldritch_presence_blessing
						}
					}
					desc = agot_religion_events.1001.good.tt
				}
				triggered_desc = {
					trigger = {
						OR = {
							scope:outcome = flag:ill
							scope:outcome = flag:impotent
							scope:outcome = flag:infirm
						}
					}
					desc = agot_religion_events.1001.bad.tt
				}
				triggered_desc = {
					trigger = { scope:outcome = flag:possessed }
					desc = agot_religion_events.1001.possessed.tt
				}
				triggered_desc = {
					trigger = { scope:outcome = flag:lunatic }
					desc = agot_religion_events.1001.possessed.tt
				}
				triggered_desc = {
					trigger = {
						scope:outcome = flag:no_effect
						has_trait = zealous
					}
					desc = agot_religion_events.1001.no_change.zealous.tt
				}
				triggered_desc = {
					trigger = {
						scope:outcome = flag:no_effect
						NOT = { has_trait = zealous }
					}
					desc = agot_religion_events.1001.no_change.tt
				}
			}
		}


		# Apply the actual outcome effects:
		# Good Outcomes
		if = {
			limit = { scope:outcome = flag:shrewd}
			if = {
				limit = { has_trait = dull}
				remove_trait = dull
			}
			else = {
				add_trait = shrewd
			}
		}
		else_if = {
			limit = { scope:outcome = flag:strong}
			if = {
				limit = { has_trait = weak}
				remove_trait = weak
			}
			else = {
				add_trait = strong
			}
		}
		else_if = {
			limit = { scope:outcome = flag:whispering_stone_blessing }
			add_character_modifier = {
				modifier = whispering_stone_blessing
				years = 20
			}
		}
		else_if = {
			limit = { scope:outcome = flag:eternal_design_blessing }
			add_character_modifier = {
				modifier = eternal_design_blessing
				years = 20
			}
		}
		else_if = {
			limit = { scope:outcome = flag:eldritch_presence_blessing }
			add_character_modifier = {
				modifier = eldritch_presence_blessing
				years = 20
			}
		}
		else_if = {
			limit = { scope:outcome = flag:black_heart_blessing }
			add_character_modifier = {
				modifier = black_heart_blessing
				years = 20
			}
		}
		else_if = {
			limit = { scope:outcome = flag:monolith_wisdom_blessing }
			add_character_modifier = {
				modifier = monolith_wisdom_blessing
				years = 20
			}
		}
		# Bad Outcomes
		else_if = {
			limit = { scope:outcome = flag:possessed}
			add_trait = possessed_1
			add_stress = medium_stress_impact_gain
		}
		else_if = {
			limit = { scope:outcome = flag:lunatic}
			add_trait = lunatic_1
			add_stress = major_stress_impact_gain
		}
		else_if = {
			limit = { scope:outcome = flag:impotent}
			add_trait = impotent
			add_stress = major_stress_impact_gain
		}
		else_if = {
			limit = { scope:outcome = flag:ill}
			contract_disease_effect = { DISEASE = ill TREATMENT_EVENT = yes }
			add_stress = minor_stress_impact_gain
		}
		else_if = {
			limit = { scope:outcome = flag:infirm}
			add_trait = infirm
			add_stress = major_stress_impact_gain
		}
	}
}

# Blood Draining & Consuming
agot_religion_events.2000 = {
	type = character_event
	title = agot_religion_events.2000.t
	desc = agot_religion_events.2000.desc
	theme = faith
	override_background = {
		reference = dungeon
	}

	left_portrait = root

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_character_selection_two_options"
		container = "custom_widgets_container"
	}

	immediate = {
		if = {
			limit = {
				is_ai = no
			}
			every_prisoner = {
				root = {
					add_to_variable_list = {
						name = possible_characters
						target = prev
					}
				}
			}
			ordered_in_list = {
				variable = possible_characters
				order_by = age
				root = { set_variable = { name = si_selected_character value = prev } }
				save_scope_as = living_blood_bag
			}
		}
		else = {
			random_prisoner = {
				save_scope_as = living_blood_bag
			}
		}
	}

	option = {
		trigger = { is_ai = no }
		name = agot_religion_events.2000.a
		var:si_selected_character = {
			save_scope_as = living_blood_bag
			remove_variable = si_selecting_character
		}
		clear_variable_list = possible_characters
	}

	option = {
		trigger = { is_ai = yes }
		name = agot_religion_events.2000.b
	}
	after = {
		trigger_event = agot_religion_events.2001
	}
}
agot_religion_events.2001 = {
	type = character_event
	title = agot_religion_events.2001.t
	desc = agot_religion_events.2001.desc
	theme = faith
	override_background = {
		reference = dungeon
	}

	left_portrait = { animation = schadenfreude character = root }
	right_portrait = { animation = prisondungeon character = scope:living_blood_bag }

	immediate = {}

	option = {
		name = agot_religion_events.2001.a
		scope:living_blood_bag = {
			if = {
				limit = {
					NOR = {
						has_character_modifier = blood_drained_malus_small_modifier
						has_character_modifier = blood_drained_malus_moderate_modifier
						has_character_modifier = blood_drained_malus_large_modifier
					}
				}
				add_character_modifier = { modifier = blood_drained_malus_small_modifier years = 2 }
			}
			else_if = {
				limit = {
					has_character_modifier = blood_drained_malus_small_modifier
				}
				remove_character_modifier = blood_drained_malus_small_modifier
				add_character_modifier = { modifier = blood_drained_malus_moderate_modifier years = 2 }
			}
			else_if = {
				limit = {
					has_character_modifier = blood_drained_malus_moderate_modifier
				}
				remove_character_modifier = blood_drained_malus_moderate_modifier
				add_character_modifier = { modifier = blood_drained_malus_large_modifier years = 2 }
			}
			else_if = {
				limit = {
					has_character_modifier = blood_drained_malus_large_modifier
				}
				add_kinslayer_trait_or_nothing_effect = {
					VICTIM = this
				}
				death = {
					death_reason = death_blood_drained
					killer = root
				}
			}
		}
		custom_tooltip = agot_religion_events.2001.a_tt
		if = {
			limit = {
				NOT = {
					has_variable = blood_is_life_blood_counter
				}
			}
			set_variable = {
				name = blood_is_life_blood_counter
				value = 20
			}
		}
		else = {
			change_variable = {
				name = blood_is_life_blood_counter
				add = 20
			}
		}
	}
}

# Ritual Wars
agot_religion_events.3000 = {
	type = character_event
	title = agot_religion_events.3000.t
	desc = agot_religion_events.3000.desc
	theme = war

	left_portrait = scope:attacker
	right_portrait = scope:defender

	immediate = {
		scope:attacker = {
			add_character_flag = involved_in_war_ritual
			add_to_list = attackers
			every_courtier = {
				limit = {
					is_human = yes
					can_be_knight_trigger = { ARMY_OWNER = prev }
				}
				add_to_list = attackers_filter_list
			}
			every_knight = {
				limit = {
					is_human = yes
				}
				add_to_list = attackers_filter_list
			}
			hidden_effect = {
				if = {
					limit = {
						list_size:attackers_filter_list > 3
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
				}
			}
			ordered_in_list = {
				list = attackers_filter_list
				order_by = prowess
				max = 3
				add_to_list = attackers
			}
		}
		scope:defender = {
			add_character_flag = involved_in_war_ritual
			add_to_list = defenders
			every_courtier = {
				limit = {
					is_human = yes
					can_be_knight_trigger = { ARMY_OWNER = prev }
				}
				add_to_list = defenders_filter_list
			}
			every_knight = {
				limit = {
					is_human = yes
				}
				add_to_list = defenders_filter_list
			}
			hidden_effect = {
				if = {
					limit = {
						list_size:defenders_filter_list > 3
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
					create_character = {
						employer = this
						gender = male
						faith = this.faith
						culture = this.culture
						random_traits = yes
						dynasty = none
						age = { 18 55 }
						after_creation = {
							add_to_list = defenders_filter_list
						}
					}
				}
			}
			ordered_in_list = {
				list = defenders_filter_list
				order_by = prowess
				max = 3
				add_to_list = defenders
			}
		}
	}
	option = {
		name = agot_religion_events.3000.a
		every_in_list = {
			list = attackers
			save_temporary_scope_as = dummy
			custom_tooltip = agot_religion_events.3000.a_attackers_tt
		}
		every_in_list = {
			list = defenders
			save_temporary_scope_as = dummy
			custom_tooltip = agot_religion_events.3000.a_defenders_tt
		}
		custom_tooltip = agot_religion_events.3000.a_tt
		scope:attacker = {
			trigger_event = { id = agot_religion_events.3001 days = 1 }
		}
		scope:defender = {
			trigger_event = agot_religion_events.3002 # Notification Event to the Defender, actual math is handled on scope:attacker.
		}
	}
}
agot_religion_events.3001 = { # Ceremony Start
	type = character_event
	title = agot_religion_events.3001.t
	desc = agot_religion_events.3001.desc
	theme = war
	left_portrait = scope:attacker
	right_portrait = scope:defender

	immediate = {
		set_local_variable = { name = attacker_score value = 0 }
		set_local_variable = { name = defender_score value = 0 }
		set_local_variable = {
			name = attacker_aptitude
			value = {
				value = 0
				add = scope:attacker.martial
				divide = 3
			}
		}
		set_local_variable = {
			name = defender_aptitude
			value = {
				value = 0
				add = scope:defender.martial
				divide = 3
			}
		}
		every_in_list = {
			list = attackers
			save_temporary_scope_as = dummy
			change_local_variable = {
				name = attacker_score
				add = scope:dummy.prowess
			}
		}
		every_in_list = {
			list = defenders
			save_temporary_scope_as = dummy
			change_local_variable = {
				name = defender_score
				add = scope:dummy.prowess
			}
		}
		change_local_variable = {
			name = attacker_score
			add = local_var:attacker_aptitude
		}
		change_local_variable = {
			name = defender_score
			add = local_var:defender_aptitude
		}
	}
	option = {
		name = agot_religion_events.3001.a
		trigger_event = agot_religion_events.3003
	}
}
agot_religion_events.3002 = {
	type = character_event
	title = agot_religion_events.3000.t
	desc = agot_religion_events.3000.desc
	theme = war

	immediate = {}
	option = {
		name = agot_religion_events.3000.a
		every_in_list = {
			list = attackers
			save_temporary_scope_as = dummy
			custom_tooltip = agot_religion_events.3000.a_attackers_tt
		}
		every_in_list = {
			list = defenders
			save_temporary_scope_as = dummy
			custom_tooltip = agot_religion_events.3000.a_defenders_tt
		}
	}
}
agot_religion_events.3003 = { # Ceremony Finish
	type = character_event
	title = agot_religion_events.3003.t
	desc = {
		desc = agot_religion_events.3003.desc
		first_valid = {
			triggered_desc = {
				trigger = { local_var:attacker_score > local_var:defender_score }
				desc = agot_religion_events.3003.desc_attacker_won
			}
			triggered_desc = {
				trigger = { local_var:attacker_score = local_var:defender_score }
				desc = agot_religion_events.3003.desc_attacker_tie
			}
			triggered_desc = {
				trigger = { local_var:attacker_score < local_var:defender_score }
				desc = agot_religion_events.3003.desc_attacker_lost
			}
		}
	}
	theme = war
	left_portrait = scope:attacker
	right_portrait = scope:defender

	immediate = {}
	option = {
		name = {
			trigger = {
				local_var:attacker_score = local_var:defender_score
			}
			text = agot_religion_events.3003.a_single_combat
		}
		name = {
			trigger = {
				local_var:attacker_score > local_var:defender_score
			}
			text = agot_religion_events.3003.a
		}
		name = {
			trigger = {
				local_var:attacker_score < local_var:defender_score
			}
			text = agot_religion_events.3003.b
		}
		if = {
			limit = {
				local_var:attacker_score = local_var:defender_score
			}
			custom_tooltip = agot_religion_events.3003.a_single_combat_tt
			configure_start_single_combat_effect = {
				SC_INITIATOR = scope:attacker
				SC_ATTACKER = scope:attacker
				SC_DEFENDER = scope:defender
				FATALITY = possible
				FIXED = no
				LOCALE = terrain_scope
				OUTPUT_EVENT = agot_religion_events.3004
				INVALIDATION_EVENT = agot_religion_events.3007
			}
		}
		else_if = {
			limit = {
				local_var:attacker_score > local_var:defender_score
			}
			remove_character_flag = involved_in_war_ritual
			custom_tooltip = agot_religion_events.war_winner_attacker
			show_as_tooltip = {
				scope:defender = { agot_banish_effect = { BANISHER = scope:attacker } }
			}
			scope:defender = {
				trigger_event = { id = agot_religion_events.3006 days = 1 }
			}
		}
		else_if = {
			limit = {
				local_var:attacker_score < local_var:defender_score
			}
			remove_character_flag = involved_in_war_ritual
			custom_tooltip = agot_religion_events.war_winner_defender
			hidden_effect = { scope:war = { end_war = defender } }
			scope:attacker = { agot_banish_effect = { BANISHER = scope:defender } }
		}
	}
}
agot_religion_events.3004 = { # Single Combat Handler
	hidden = yes
	immediate = {
		scope:sc_victor = {
			trigger_event = agot_religion_events.3005
		}
		scope:sc_loser = {
			trigger_event = agot_religion_events.3006
		}
	}
}

agot_religion_events.3005 = { # Single Combat Outcome / General Outcome event
	type = character_event
	title = agot_religion_events.3005.t
	desc = agot_religion_events.3005.desc
	theme = war
	left_portrait = scope:attacker
	right_portrait = scope:defender

	immediate = {}
	option = {
		name = agot_religion_events.3005.a
		if = {
			limit = {
				this = scope:attacker
			}
			custom_tooltip = agot_religion_events.war_winner_attacker
			show_as_tooltip = {
				scope:defender = { agot_banish_effect = { BANISHER = scope:attacker } }
			}
		}
		else = {
			custom_tooltip = agot_religion_events.war_winner_defender
			show_as_tooltip = {
				scope:attacker = { agot_banish_effect = { BANISHER = scope:defender } }
			}
		}
	}
}
agot_religion_events.3006 = { # DEFEAT Single Combat Outcome / General Outcome event
	type = character_event
	title = agot_religion_events.3006.t
	desc = agot_religion_events.3006.desc
	theme = war
	left_portrait = scope:attacker
	right_portrait = scope:defender

	immediate = {}
	option = {
		name = agot_religion_events.3006.a
		if = {
			limit = {
				this = scope:attacker
			}
			hidden_effect = { scope:war = { end_war = defender } }
			custom_tooltip = agot_religion_events.war_winner_defender
			scope:attacker = { agot_banish_effect = { BANISHER = scope:defender } }
		}
		else = {
			hidden_effect = { scope:war = { end_war = attacker } }
			custom_tooltip = agot_religion_events.war_winner_attacker
			scope:defender = { agot_banish_effect = { BANISHER = scope:attacker } }
		}
		if = {
			limit = {
				scope:attacker = { has_character_flag = involved_in_war_ritual }
			}
			scope:attacker = {
				remove_character_flag = involved_in_war_ritual
			}
		}
		if = {
			limit = {
				scope:defender = { has_character_flag = involved_in_war_ritual }
			}
			scope:defender = {
				remove_character_flag = involved_in_war_ritual
			}
		}
	}
}
agot_religion_events.3007 = {
	hidden = yes

	immediate = {
		# Everyone puts their shirts back on.
		single_combat_clean_shirtlessness_effect = {
			ATTACKER = scope:actor
			DEFENDER = scope:recipient
		}
		# Inform both parties that the bout has invalidated.
		scope:attacker = {
			send_interface_toast = {
				title = agot_religion_events.3007.attacker_toast.t
				left_icon = scope:attacker
				right_icon = scope:defender
				custom_tooltip = agot_religion_events.3007.ceremony_invalidated.tt
			}
		}
		scope:defender = {
			send_interface_toast = {
				title = agot_religion_events.3007.defender_toast.t
				left_icon = scope:defender
				right_icon = scope:attacker
				custom_tooltip = agot_religion_events.3007.ceremony_invalidated.tt
			}
		}
		scope:war = {
			end_war = white_peace
		}
	}
}

#Fund Trade Expedition
agot_religion_events.4000 = {
	type = character_event
	title = agot_religion_events.4000.t
	desc = agot_religion_events.4000.desc
	theme = stewardship_wealth_focus
	left_portrait = root
	right_portrait = cp:councillor_admiral

	option = {
		name = agot_religion_events.4000.a
		flavor = agot_religion_events.4000.a.flavor
		trigger = { gold >= medium_gold_value }
		show_as_unavailable = { gold < medium_gold_value }
		remove_short_term_gold = medium_gold_value
		create_story = story_fund_trade_expedition
		random_owned_story = {
			limit = { story_type = story_fund_trade_expedition }
			set_variable = {
				name = funding
				value = flag:minimal
			}
		}

		if = {
			limit = {
				faith = { has_doctrine_parameter = can_fund_trade_expeditions }
			}
			add_piety = miniscule_piety_value
		}

		if = {
			limit = {
				dynasty ?= { has_dynasty_perk = velaryon_legacy_1 }
			}
			add_prestige = miniscule_piety_value
		}

		ai_chance = {
			base = 20
		}
	}

	option = {
		name = agot_religion_events.4000.b
		flavor = agot_religion_events.4000.b.flavor
		trigger = { gold >= major_gold_value }
		show_as_unavailable = { gold < major_gold_value }
		remove_short_term_gold = major_gold_value
		create_story = story_fund_trade_expedition
		random_owned_story = {
			limit = { story_type = story_fund_trade_expedition }
			set_variable = {
				name = funding
				value = flag:adequate
			}
		}

		if = {
			limit = {
				faith = { has_doctrine_parameter = can_fund_trade_expeditions }
			}
			add_piety = minor_piety_value
		}

		if = {
			limit = {
				dynasty ?= { has_dynasty_perk = velaryon_legacy_1 }
			}
			add_prestige = minor_prestige_value
		}

		ai_chance = {
			base = 20
		}
	}

	option = {
		name = agot_religion_events.4000.c
		flavor = agot_religion_events.4000.c.flavor
		trigger = { gold >= massive_gold_value }
		show_as_unavailable = { gold < massive_gold_value }
		remove_short_term_gold = massive_gold_value
		create_story = story_fund_trade_expedition
		random_owned_story = {
			limit = { story_type = story_fund_trade_expedition }
			set_variable = {
				name = funding
				value = flag:high
			}
		}

		if = {
			limit = {
				faith = { has_doctrine_parameter = can_fund_trade_expeditions }
			}
			add_piety = medium_piety_value
		}

		if = {
			limit = {
				dynasty ?= { has_dynasty_perk = velaryon_legacy_1 }
			}
			add_prestige = medium_prestige_value
		}

		ai_chance = {
			base = 10
		}
	}

	option = {
		name = agot_religion_events.4000.d
		flavor = agot_religion_events.4000.d.flavor
		trigger = { gold >= monumental_gold_value }
		show_as_unavailable = { gold < monumental_gold_value }
		remove_short_term_gold = monumental_gold_value
		create_story = story_fund_trade_expedition
		random_owned_story = {
			limit = { story_type = story_fund_trade_expedition }
			set_variable = {
				name = funding
				value = flag:expensive
			}
		}

		if = {
			limit = {
				faith = { has_doctrine_parameter = can_fund_trade_expeditions }
			}
			add_piety = major_piety_value
		}

		if = {
			limit = {
				dynasty ?= { has_dynasty_perk = velaryon_legacy_1 }
			}
			add_prestige = major_prestige_value
		}

		ai_chance = {
			base = 10
		}
	}

	option = {
		name = agot_religion_events.4000.e

		remove_decision_cooldown = agot_fund_trade_expedition_decision

		ai_chance = {
			base = 0
		}
	}
}

#Poor Trade Deal
agot_religion_events.4001 = {
	type = character_event
	title = agot_religion_events.4001.t
	desc = agot_religion_events.4001.desc
	theme = stewardship_wealth_focus
	left_portrait = root
	right_portrait = cp:councillor_admiral

	immediate = {
		if = {
			limit = { exists = scope:expensive }
			capital_county = {
				add_county_modifier = {
					modifier = satisfactory_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:high }
			capital_county = {
				add_county_modifier = {
					modifier = decent_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:adequate }
			capital_county = {
				add_county_modifier = {
					modifier = mediocre_trade_deal_modifier
					years = 5
				}
			}
		}

	}
	option = {
		name = agot_religion_events.4001.a
	}
}

#Average Trade Deal
agot_religion_events.4002 = {
	type = character_event
	title = agot_religion_events.4002.t
	desc = agot_religion_events.4002.desc
	theme = stewardship_wealth_focus
	left_portrait = root
	right_portrait = cp:councillor_admiral

	artifact = {
		target = scope:newly_created_artifact
		position = lower_right_portrait
	}

	immediate = {
		if = {
			limit = { exists = scope:expensive }
			capital_county = {
				add_county_modifier = {
					modifier = impressive_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:high }
			capital_county = {
				add_county_modifier = {
					modifier = satisfactory_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:adequate }
			capital_county = {
				add_county_modifier = {
					modifier = decent_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:minimal }
			capital_county = {
				add_county_modifier = {
					modifier = mediocre_trade_deal_modifier
					years = 5
				}
			}
		}

		if = {
			limit = { exists = scope:char_average_artifact }
			random_list = {
				10 = {
					trigger = {
						capital_province = {
							NOT = { geographical_region = world_essos_myr }
						}
					}
					agot_create_artifact_myrish_lace_effect = { OWNER = ROOT }
				}
				10 = {
					#trigger = {
					#	capital_province = {
					#		NOT = { geographical_region = world_essos_norvos }
					#	}
					#}
					agot_create_artifact_norvoshi_bear_carving_effect = { OWNER = ROOT }
				}
				10 = {
					trigger = {
						capital_province = {
							NOT = { geographical_region = world_essos_pentos }
						}
					}
					agot_create_artifact_pentoshi_cheese_effect = { OWNER = ROOT }
				}
				10 = {
					trigger = {
						any_artifact = {
							count < 77
							has_variable = crystal_carving
						}
					}
					create_artifact_crystal_carving_effect = { OWNER = ROOT }
				}
				10 = {
					agot_create_oily_black_stone_effect = { OWNER = ROOT }
				}
			}
		}

		if = {
			limit = { exists = scope:char_medium_gold }
			add_gold = medium_gold_value
		}
		else_if = {
			limit = { exists = scope:char_low_gold }
			add_gold = minor_gold_value
		}

	}
	option = {
		name = agot_religion_events.4002.a
	}
}

#Good Trade Deal
agot_religion_events.4003 = {
	type = character_event
	title = agot_religion_events.4003.t
	desc = agot_religion_events.4003.desc
	theme = stewardship_wealth_focus
	left_portrait = root
	right_portrait = cp:councillor_admiral

	artifact = {
		target = scope:newly_created_artifact
		position = lower_right_portrait
	}

	immediate = {
		if = {
			limit = { exists = scope:expensive }
			capital_county = {
				add_county_modifier = {
					modifier = flourishing_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:high }
			capital_county = {
				add_county_modifier = {
					modifier = impressive_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:adequate }
			capital_county = {
				add_county_modifier = {
					modifier = satisfactory_trade_deal_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = { exists = scope:minimal }
			capital_county = {
				add_county_modifier = {
					modifier = decent_trade_deal_modifier
					years = 5
				}
			}
		}

		if = {
			limit = { exists = scope:char_good_artifact }
			random_list = {
				8 = { # Glass Candle
					agot_create_random_glass_candle_effect = { OWNER = ROOT }
				}
				1 = { #Generic Valyrian Steel Sword
					random_list = {
						#Andal Variant
						1 = {
							agot_create_artifact_vs_andal_armingsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_andal_armingsword_silver_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_andal_longsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_andal_longsword_silver_historical_effect = { OWNER = ROOT }
						}
						# # First Man Variant
						1 = {
							agot_create_artifact_vs_firstman_armingsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_firstman_armingsword_silver_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_firstman_armingsword_bronze_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_firstman_longsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_firstman_longsword_silver_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_firstman_longsword_bronze_historical_effect = { OWNER = ROOT }
						}
						# Valyrian Variant
						1 = {
							agot_create_artifact_vs_valyrian_armingsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_valyrian_armingsword_silver_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_valyrian_longsword_gold_historical_effect = { OWNER = ROOT }
						}
						1 = {
							agot_create_artifact_vs_valyrian_longsword_silver_historical_effect = { OWNER = ROOT }
						}
					}
				}
				1 = { #Dragon Egg
					random_list = {
						1 = {
							character:dragon_nessarion = { save_scope_as = dragon_parent }
						}
						1 = {
							trigger = { game_start_date >= 7935.1.1 }
							character:dragon_meraxes = { save_scope_as = dragon_parent }
						}
						1 = {
							trigger = { game_start_date >= 7959.1.1 }
							character:dragon_vhagar = { save_scope_as = dragon_parent }
						}
						1 = {
							trigger = { game_start_date >= 8017.1.1 }
							character:dragon_quicksilver = { save_scope_as = dragon_parent }
						}
						1 = {
							trigger = { game_start_date >= 8046.1.1 }
							character:dragon_meleys = { save_scope_as = dragon_parent }
						}
						1 = {
							trigger = { game_start_date >= 8097.1.1 }
							character:dragon_syrax = { save_scope_as = dragon_parent }
						}
					}
					agot_create_random_dragon_egg_artifact = { OWNER = root }
				}
			}
		}
		else_if = {
			limit = { exists = scope:char_average_artifact }
			random_list = {
				10 = {
					trigger = {
						capital_province = {
							NOT = { geographical_region = world_essos_myr }
						}
					}
					agot_create_artifact_myrish_lace_effect = { OWNER = ROOT }
				}
				10 = {
					#trigger = {
					#	capital_province = {
					#		NOT = { geographical_region = world_essos_norvos }
					#	}
					#}
					agot_create_artifact_norvoshi_bear_carving_effect = { OWNER = ROOT }
				}
				10 = {
					trigger = {
						capital_province = {
							NOT = { geographical_region = world_essos_pentos }
						}
					}
					agot_create_artifact_pentoshi_cheese_effect = { OWNER = ROOT }
				}
				10 = {
					trigger = {
						any_artifact = {
							count < 77
							has_variable = crystal_carving
						}
					}
					create_artifact_crystal_carving_effect = { OWNER = ROOT }
				}
				10 = {
					agot_create_oily_black_stone_effect = { OWNER = ROOT }
				}
			}
		}

		if = {
			limit = { exists = scope:char_large_gold }
			add_gold = major_gold_value
		}
		else_if = {
			limit = { exists = scope:char_medium_gold }
			add_gold = medium_gold_value
		}
		else_if = {
			limit = { exists = scope:char_low_gold }
			add_gold = minor_gold_value
		}

	}
	option = {
		name = agot_religion_events.4003.a
	}
}