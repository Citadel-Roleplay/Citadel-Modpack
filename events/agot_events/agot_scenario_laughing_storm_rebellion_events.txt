namespace = agot_laughing_storm_rebellion


##############################################################
## 0001-0010 LAUGHING STORM EVENTS - Canon Scenario         ##
##############################################################

#Lyonel's Fury
agot_laughing_storm_rebellion.0001 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0001.t
	desc = agot_laughing_storm_rebellion.0001.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	left_portrait = {
		character = root
		animation = map_rage
	}
	right_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}
	lower_right_portrait = {
		character = scope:duncansmall
		animation = personality_content
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
		random_owned_story = {
			limit = {
				story_type = story_agot_laughing_storm_rebellion
			}
			save_scope_as = the_laughing_storm_rebellion_story
		}
	}

	option = { #not my king
		name = agot_laughing_storm_rebellion.0001.a
	}
}

#The King's Trouble
agot_laughing_storm_rebellion.0002 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0002.t
	desc = agot_laughing_storm_rebellion.0002.desc

	theme = war

	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = root
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:duncansmall
		animation = personality_content
	}
	lower_right_portrait = {
		character = scope:jenny
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
		every_player = {
			limit = {
				is_vassal_or_below_of = scope:aegonv
				NOT = { this = scope:lyonel }
			}
			trigger_event = agot_laughing_storm_rebellion.0050
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0002.a

		show_as_tooltip = { scope:duncansmall = { add_trait = disinherited } }

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0003
				days = 3
			}
		}

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0401
				years = 5
			}
		}
	}
}

#The King's Offer
agot_laughing_storm_rebellion.0003 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0003.t
	desc = agot_laughing_storm_rebellion.0003.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = map_rage
	}

	#trial by combat
	option = {
		name = agot_laughing_storm_rebellion.0003.a

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0004
				days = 3
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#refuse
	option = {
		name = agot_laughing_storm_rebellion.0003.b

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0025
				days = 1
			}
		}

		add_prestige = massive_prestige_loss

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#A Trial
agot_laughing_storm_rebellion.0004 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0004.t
	desc = agot_laughing_storm_rebellion.0004.desc

	theme = war

	override_background = {
		reference = alley_day
	}
	right_portrait = {
		character = scope:duncantall
		animation = marshal
	}
	lower_right_portrait = {
		character = scope:aegonv
	}

	immediate = {
		scope:lyonel = {
			add_character_flag = currently_in_duel
		}
		scope:duncantall = {
			add_character_flag = no_hat
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0004.a

		remove_character_flag = single_combat_duel_armor

		if = {
			limit = { is_ai = yes}
			trigger_event = agot_laughing_storm_rebellion.0006
		}
		else = {
			configure_start_single_combat_effect = {
				SC_INITIATOR = scope:duncantall
				SC_ATTACKER = scope:duncantall
				SC_DEFENDER = scope:lyonel
				FATALITY = possible
				FIXED = no
				LOCALE = alley_day
				OUTPUT_EVENT = agot_laughing_storm_rebellion.0005
				INVALIDATION_EVENT = single_combat.1006	#In a real event, this would obviously be a different event to the output.
			}
		}
	}
}

#Duncan-Lyonel Duel - Player Aftermath
agot_laughing_storm_rebellion.0005 = {
	hidden = yes

	immediate = {
		if = {
			limit = { #Lyonel wins
				scope:sc_victor = scope:lyonel
			}
			scope:lyonel = {
				remove_character_flag = currently_in_duel
				trigger_event = {
					id = agot_laughing_storm_rebellion.0020
					days = 1
				}
			}
		}
		else = { #Duncan wins
			if = { #Lyonel survives
				limit = { scope:lyonel = { is_alive = yes } }
				scope:lyonel = {
					trigger_event = {
						id = agot_laughing_storm_rebellion.0007
						days = 1
					}
				}
				scope:aegonv = {
					trigger_event = {
						id = agot_laughing_storm_rebellion.0008
						days = 1
					}
				}
			}
			else = { #Lyonel dies
				scope:aegonv = {
					trigger_event = {
						id = agot_laughing_storm_rebellion.0009
						days = 1
					}
				}
			}

			agot_laughing_storm_instant_divorce_events_effect = yes
		}
	}
}

#Duncan-Lyonel Duel - AI Aftermath
agot_laughing_storm_rebellion.0006 = {
	hidden = yes

	immediate = {
		random_list = {
			0 = { #Duncan wins
				modifier = {
					add = agot_historic_outcome_2
				}
				random_list = {
					50 = { #Lyonel survives
						modifier = {
							add = agot_historic_outcome_2
						}
						scope:lyonel = {
							trigger_event = {
								id = agot_laughing_storm_rebellion.0007
								days = 1
							}
						}
						scope:aegonv = {
							trigger_event = {
								id = agot_laughing_storm_rebellion.0008
								days = 1
							}
						}
					}
					0 = { #Lyonel dies
						modifier = {
							add = agot_nonhistoric_outcome_2
						}
						scope:lyonel = {
							death = {
								death_reason = death_duel
								killer = scope:duncantall
							}
						}
						scope:aegonv = {
							trigger_event = {
								id = agot_laughing_storm_rebellion.0009
								days = 1
							}
						}
					}
				}

				agot_laughing_storm_instant_divorce_events_effect = yes

				if = {
					limit = { scope:aegonv = { is_ai = no } }
					scope:aegonv = {
						send_interface_toast = {
							type = event_generic_good
							title = agot_laughing_storm_rebellion.t
							left_icon = scope:duncantall
							right_icon = scope:lyonel
							custom_tooltip = agot_laughing_storm_rebellion.duncan_won
						}
					}
				}
			}
			0 = { #Lyonel wins
				modifier = {
					add = agot_nonhistoric_outcome_2
				}
				random_list = {
					50 = { #Duncan survives
						modifier = {
							add = agot_historic_outcome_2
						}
					}
					0 = { #Duncan dies
						modifier = {
							add = agot_nonhistoric_outcome_2
						}
						scope:duncantall = {
							death = {
								death_reason = death_duel
								killer = scope:lyonel
							}
						}
					}
				}
				scope:lyonel = {
					trigger_event = {
						id = agot_laughing_storm_rebellion.0020
						days = 1
					}
				}

				if = {
					limit = { scope:aegonv = { is_ai = no } }
					scope:aegonv = {
						send_interface_toast = {
							type = event_generic_good
							title = agot_laughing_storm_rebellion.t
							left_icon = scope:duncantall
							right_icon = scope:lyonel
							custom_tooltip = agot_laughing_storm_rebellion.lyonel_won
						}
					}
				}
			}
		}
	}
}

#Lyonel Lost - Lyonel POV
agot_laughing_storm_rebellion.0007 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0007.t
	desc = agot_laughing_storm_rebellion.0007.desc

	theme = battle

	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:lyonel
		animation = personality_bold
	}
	right_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}

	immediate = {
		scope:lyonel = {
			if = {
				limit = {
					is_alive = yes
					has_character_flag = no_hat
				}
				remove_character_flag = no_hat
			}
		}
		scope:duncantall = {
			if = {
				limit = {
					is_alive = yes
					has_character_flag = no_hat
				}
				remove_character_flag = no_hat
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0007.a
	}
}

#Lyonel Lost - Aegon V POV
agot_laughing_storm_rebellion.0008 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0008.t
	desc = agot_laughing_storm_rebellion.0008.desc

	theme = battle

	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:lyonel
		animation = personality_bold
	}
	lower_left_portrait = {
		trigger = {
			scope:rhaelle = {
				is_alive = yes
				NOT = { is_betrothed = yes }
				NOT = { is_married = yes }
			}
		}
		character = scope:rhaelle
	}
	lower_right_portrait = {
		trigger = {
			scope:vaella = {
				is_alive = yes
				NOT = { is_betrothed = yes }
				NOT = { is_married = yes }
			}
		}
		character = scope:vaella
	}

	#Rhaelle betrothal
	option = {
		name = agot_laughing_storm_rebellion.0008.a
		trigger = {
			OR = {
				scope:ormund = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:rhaelle = {
				is_alive = yes
				NOT = { is_betrothed = yes }
				NOT = { is_married = yes }
			}
		}

		if = {
			limit = {
				scope:ormund = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:rhaelle = {
				save_scope_as = targ_betrothed
			}
			scope:ormund = {
				save_scope_as = bara_betrothed
			}
		}
		else_if = {
			limit = {
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:rhaelle = {
				save_scope_as = targ_betrothed
			}
			scope:harbert = {
				save_scope_as = bara_betrothed
			}
		}

		scope:lyonel = { add_character_flag = bethrotal_of_rhaelle }

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0010
				days = 1
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_historic_outcome_3
			}
		}
	}

	#Vaella betrothal
	option = {
		name = agot_laughing_storm_rebellion.0008.b
		trigger = {
			OR = {
				scope:ormund = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:vaella = {
				is_alive = yes
				NOT = { is_betrothed = yes }
				NOT = { is_married = yes }
			}
		}

		if = {
			limit = {
				scope:ormund = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:vaella = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:vaella = {
				save_scope_as = targ_betrothed
			}
			scope:ormund = {
				save_scope_as = bara_betrothed
			}
		}
		else_if = {
			limit = {
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:vaella = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:vaella = {
				save_scope_as = targ_betrothed
			}
			scope:harbert = {
				save_scope_as = bara_betrothed
			}
		}

		scope:lyonel = { add_character_flag = bethrotal_of_vaella }

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0010
				days = 1
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_3
			}
		}
	}

	#No betrothal
	option = {
		name = agot_laughing_storm_rebellion.0008.c

		scope:lyonel = { add_character_flag = bethrotal_of_noone }

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0010
				days = 1
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_3
			}
		}
	}
}

#Lyonel Lost - Aegon V POV - Lyonel died
agot_laughing_storm_rebellion.0009 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0009.t
	desc = agot_laughing_storm_rebellion.0009.desc

	theme = battle

	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:lyonel
		animation = personality_bold
	}

	option = {
		name = agot_laughing_storm_rebellion.0009.a

		every_player = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0031
				days = 1
			}
		}

		scope:lyonel = {
			if = {
				limit = { is_alive = yes }
				remove_character_flag = currently_in_duel
				remove_character_flag = no_hat
			}
		}
		scope:duncantall = {
			if = {
				limit = { is_alive = yes }
				remove_character_flag = no_hat
			}
		}
	}
}

#A new betrothal
agot_laughing_storm_rebellion.0010 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0010.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_character_flag = bethrotal_of_rhaelle
						has_character_flag = bethrotal_of_vaella
					}
				}
				desc = agot_laughing_storm_rebellion.0010.betrothal.desc
			}
			triggered_desc = {
				trigger = {
					has_character_flag = bethrotal_of_noone
				}
				desc = agot_laughing_storm_rebellion.0010.nobetrothal.desc
			}
		}
	}

	theme = court

	override_background = {
		reference = agot_iron_throne
	}
	left_portrait = {
		character = scope:lyonel
		animation = personality_cynical
	}
	right_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}
	lower_left_portrait = {
		trigger = { exists = scope:bara_betrothed }
		character = scope:bara_betrothed
	}
	lower_right_portrait = {
		trigger = { exists = scope:targ_betrothed }
		character = scope:targ_betrothed
	}

	immediate = {
		scope:lyonel = {
			if = {
				limit = { is_alive = yes }
				remove_character_flag = currently_in_duel
				remove_character_flag = no_hat
				remove_character_flag = in_laughing_storm_story
			}
		}
		scope:duncantall = {
			if = {
				limit = { is_alive = yes }
				remove_character_flag = no_hat
			}
		}
	}

	#Betrothal
	option = {
		name = agot_laughing_storm_rebellion.0010.a
		trigger = {
			OR = {
				has_character_flag = bethrotal_of_rhaelle
				has_character_flag = bethrotal_of_vaella
			}
		}

		scope:bara_betrothed = {
			create_betrothal = scope:targ_betrothed
		}

		scope:lyonel = {
			add_character_flag = {
				flag = demand_betrothal
				days = 90
			}
			trigger_event = {
				id = agot_laughing_storm_rebellion.0028
				days = 3
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Refuse
	option = {
		name = agot_laughing_storm_rebellion.0010.b
		trigger = {
			OR = {
				has_character_flag = bethrotal_of_rhaelle
				has_character_flag = bethrotal_of_vaella
			}
		}

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0022
				days = 1
			}
		}

		every_player = {
			limit = { location ?= { geographical_region = world_westeros_seven_kingdoms } }
			trigger_event = {
				id = agot_laughing_storm_rebellion.0030
				days = 3
			}
		}

		show_as_tooltip = {
			scope:aegonv = {
				add_opinion = {
					target = scope:lyonel
					modifier = insulted_family_opinion
					opinion = -50
				}
			}
			scope:lyonel = {
				add_opinion = {
					target = scope:aegonv
					modifier = insulted_family_opinion
					opinion = -50
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#No betrothal
	option = {
		name = agot_laughing_storm_rebellion.0010.c
		trigger = {
			has_character_flag = bethrotal_of_noone
		}

		every_player = {
			limit = { location ?= { geographical_region = world_westeros_seven_kingdoms } }
			trigger_event = {
				id = agot_laughing_storm_rebellion.0030
				days = 3
			}
		}

		ai_chance = {
			base = 1
		}
	}

	after = {
		hidden_effect = {
			if = {
				limit = {
					has_character_flag = bethrotal_of_rhaelle
				}
				remove_character_flag = bethrotal_of_rhaelle
			}
			if = {
				limit = {
					has_character_flag = bethrotal_of_vaella
				}
				remove_character_flag = bethrotal_of_vaella
			}
			if = {
				limit = {
					has_character_flag = bethrotal_of_noone
				}
				remove_character_flag = bethrotal_of_noone
			}
		}
	}
}

##############################################################
## 0011-0018 LAUGHING STORM EVENTS - Canon Breakups         ##
##############################################################

#Jaehaerys & Shaera
agot_laughing_storm_rebellion.0011 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0011.t
	desc = agot_laughing_storm_rebellion.0011.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:jaehaerys
		animation = love
	}
	right_portrait = {
		character = scope:shaera
		animation = personality_compassionate
	}

	trigger = {
		scope:jaehaerys = {
			is_betrothed = yes
			betrothed = scope:celia
		}
		scope:shaera = {
			is_betrothed = yes
			betrothed = scope:luthor
		}
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#break up with celia and marry shaera
	option = {
		name = agot_laughing_storm_rebellion.0011.a

		scope:jaehaerys = {
			if = {
				limit = {
					is_betrothed = yes
					betrothed = scope:celia
				}
				break_betrothal = betrothed
			}
		}
		scope:shaera = {
			if = {
				limit = {
					is_betrothed = yes
					betrothed = scope:luthor
				}
				break_betrothal = betrothed
			}
		}
		scope:jaehaerys = { marry = scope:shaera }

		scope:aegonv = {
			if = {
				limit = { is_alive = yes }
				trigger_event = agot_laughing_storm_rebellion.0013
			}
		}
		scope:steffon = {
			if = {
				limit = { scope:jaehaerys = { has_character_flag = instant_divorce } }
				add_character_flag = rebellion_in_the_making
			}
			if = {
				limit = { is_alive = yes }
				trigger_event = agot_laughing_storm_rebellion.0013
			}
		}
		scope:garlan = {
			if = {
				limit = { scope:jaehaerys = { has_character_flag = instant_divorce } }
				add_character_flag = rebellion_in_the_making
			}
			if = {
				limit = { is_alive = yes }
				trigger_event = agot_laughing_storm_rebellion.0013
			}
		}

		ai_chance = {
			base = 100
		}
	}

	#don't do anything
	option = {
		name = agot_laughing_storm_rebellion.0011.b

		#Trigger divorce event for Daeron too if it's an early divorce scenario
		if = {
			limit = { scope:daeron = { has_character_flag = instant_divorce } }
			scope:daeron = {
				trigger_event = agot_laughing_storm_rebellion.0012
			}
		}
		else_if = {
			limit = { scope:jaehaerys = { has_character_flag = instant_divorce } }
			scope:lyonel = {
				if = {
					limit = {
						scope:garlan = { NOT = { has_character_flag = rebellion_in_the_making } }
						scope:steffon = { NOT = { has_character_flag = rebellion_in_the_making } }
						scope:runceford = { NOT = { has_character_flag = rebellion_in_the_making } }
						has_character_flag = lyonel_instant_war
					}
					trigger_event = {
						id = agot_laughing_storm_rebellion.0024
						days = 5
					}
				}
			}
		}

		ai_chance = {
			base = 0
		}
	}
}

#Daeron
agot_laughing_storm_rebellion.0012 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0012.t
	desc = agot_laughing_storm_rebellion.0012.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:daeron
		animation = boredom
	}
	right_portrait = {
		character = scope:olenna
		animation = dismissal
	}

	trigger = {
		scope:daeron = {
			is_betrothed = yes
			betrothed = scope:olenna
		}
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#break up with olenna
	option = {
		name = agot_laughing_storm_rebellion.0012.a

		scope:daeron = {
			if = {
				limit = {
					is_betrothed = yes
					betrothed = scope:olenna
				}
				break_betrothal = betrothed
			}

			add_trait = refusing_marriage
		}

		scope:aegonv = {
			if = {
				limit = { is_alive = yes }
				trigger_event = agot_laughing_storm_rebellion.0014
			}
		}
		scope:runceford = {
			if = {
				limit = { scope:daeron = { has_character_flag = instant_divorce } }
				add_character_flag = rebellion_in_the_making
			}
			if = {
				limit = { is_alive = yes }
				trigger_event = {
					id = agot_laughing_storm_rebellion.0014
					days = 1
				}
			}
		}

		if = {
			limit = { has_character_flag = disinherited_jae }
			remove_character_flag = disinherited_jae
		}

		ai_chance = {
			base = 100
		}
	}

	#don't do anything
	option = {
		name = agot_laughing_storm_rebellion.0012.b

		if = {
			limit = { has_character_flag = disinherited_jae }
			remove_character_flag = disinherited_jae
		}

		scope:lyonel = {
			if = {
				limit = {
					scope:garlan = { NOT = { has_character_flag = rebellion_in_the_making } }
					scope:steffon = { NOT = { has_character_flag = rebellion_in_the_making } }
					scope:runceford = { NOT = { has_character_flag = rebellion_in_the_making } }
					has_character_flag = lyonel_instant_war
				}
				trigger_event = {
					id = agot_laughing_storm_rebellion.0024
					days = 5
				}
			}
		}

		ai_chance = {
			base = 0
		}
	}
}

#Jaehaerys & Shaera - notification
agot_laughing_storm_rebellion.0013 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0013.t
	desc = agot_laughing_storm_rebellion.0013.desc

	theme = court

	override_background = {
		reference = garden
	}
	lower_left_portrait = {
		character = scope:celia
	}
	left_portrait = {
		character = scope:jaehaerys
		animation = love
	}
	right_portrait = {
		character = scope:shaera
		animation = personality_compassionate
	}
	lower_right_portrait = {
		character = scope:luthor
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
		if = {
			limit = {
				OR = {
					this = scope:steffon
					this = scope:garlan
				}
			}
			add_opinion = {
				target = scope:aegonv
				modifier = insulted_family_opinion
				opinion = -25
			}
		}
	}

	#Ok
	option = {
		name = agot_laughing_storm_rebellion.0013.a

		if = {
			limit = {
				OR = {
					this = scope:steffon
					this = scope:garlan
				}
				has_character_flag = rebellion_in_the_making
				scope:lyonel = { has_character_flag = lyonel_instant_war }
			}
			trigger_event = {
				id = agot_laughing_storm_rebellion.0023
				days = 3
			}
		}
		else_if = {
			limit = { has_character_flag = rebellion_in_the_making }
			remove_character_flag = rebellion_in_the_making
		}

		#Trigger divorce event for Daeron too if it's an early divorce scenario
		if = {
			limit = {
				this = scope:aegonv
				scope:daeron = { has_character_flag = instant_divorce }
			}
			scope:daeron = { trigger_event = agot_laughing_storm_rebellion.0012 }
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Disinherit them
	option = {
		trigger = {
			this = scope:aegonv
		}
		name = agot_laughing_storm_rebellion.0013.b

		scope:aegonv = {
			save_scope_as = actor
			scope:actor = {
				scope:jaehaerys = { disinherit_effect = { DISINHERITOR = scope:actor } }
				scope:shaera = { disinherit_effect = { DISINHERITOR = scope:actor } }
			}
		}

		title:k_dragonstone = {
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = change
			}
			change_title_holder = {
				holder = scope:aegonv
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		title:d_dragonstone = {
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = change
			}
			change_title_holder = {
				holder = scope:aegonv
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		title:c_dragonstone = {
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = change
			}
			change_title_holder = {
				holder = scope:aegonv
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		hidden_effect = {
			scope:aegonv = {
				if = {
					limit = { scope:jaehaerys = { NOT = { is_courtier_of = scope:aegonv } } }
					add_courtier = scope:jaehaerys
				}
				if = {
					limit = { scope:shaera = { NOT = { is_courtier_of = scope:aegonv } } }
					add_courtier = scope:shaera
				}
			}

			scope:daeron = { add_character_flag = disinherited_jae }
		}

		#Trigger divorce event for Daeron too if it's an early divorce scenario
		if = {
			limit = {
				this = scope:aegonv
				scope:daeron = { has_character_flag = instant_divorce }
			}
			scope:daeron = { trigger_event = agot_laughing_storm_rebellion.0012 }
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Daeron - notification
agot_laughing_storm_rebellion.0014 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0014.t
	desc = agot_laughing_storm_rebellion.0014.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:daeron
		animation = boredom
	}
	right_portrait = {
		character = scope:olenna
		animation = dismissal
	}

	immediate = {
		if = {
			limit = {
				OR = {
					NOT = { scope:garlan = { is_alive = yes } }
					NOT = { scope:luthor = { is_alive = yes } }
					scope:luthor = { is_betrothed = yes }
					scope:luthor = { is_married = yes }
				}
			}
			scope:lyonel = {
				if = {
					limit = {
						scope:garlan = { NOT = { has_character_flag = rebellion_in_the_making } }
						scope:steffon = { NOT = { has_character_flag = rebellion_in_the_making } }
						scope:runceford = { NOT = { has_character_flag = rebellion_in_the_making } }
						has_character_flag = lyonel_instant_war
					}
					trigger_event = {
						id = agot_laughing_storm_rebellion.0024
						days = 5
					}
				}
			}
		}

		if = {
			limit = {
				this = scope:runceford
			}
			add_opinion = {
				target = scope:aegonv
				modifier = insulted_family_opinion
				opinion = -25
			}
		}
	}

	option = {
		name = {
			trigger = { this = scope:aegonv }
			text = agot_laughing_storm_rebellion.0014.aegonv.a
		}
		name = {
			trigger = {
				this = scope:runceford
				scope:garlan = { is_alive = yes }
				scope:luthor = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}

			text = agot_laughing_storm_rebellion.0014.runceford.a
		}
		name = {
			trigger = {
				this = scope:runceford
				OR = {
					NOT = { scope:garlan = { is_alive = yes } }
					NOT = { scope:luthor = { is_alive = yes } }
					scope:luthor = { is_betrothed = yes }
					scope:luthor = { is_married = yes }
				}
			}

			text = agot_laughing_storm_rebellion.0014.runcefordx.a
		}

		if = {
			limit = {
				this = scope:runceford
				scope:garlan = { is_alive = yes }
				scope:luthor = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			custom_tooltip = agot_laughing_storm_rebellion.0014.runceford.a.tt
			scope:garlan = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0015
					days = 2
				}
			}
		}

		if = {
			limit = {
				this = scope:runceford
				has_character_flag = rebellion_in_the_making
				scope:lyonel = { has_character_flag = lyonel_instant_war }
			}
			trigger_event = {
				id = agot_laughing_storm_rebellion.0023
				days = 3
			}
		}
		else = { remove_character_flag = rebellion_in_the_making }

		ai_chance = {
			base = 0
			modifier = {
				add = agot_historic_outcome_2

				scope:daeron = { NOT = { has_character_flag = instant_divorce } }
			}
			modifier = {
				add = agot_nonhistoric_outcome_2

				scope:daeron = { has_character_flag = instant_divorce }
			}
		}
	}

	option = {
		trigger = {
			this = scope:runceford
			scope:garlan = { is_alive = yes }
			scope:luthor = {
				is_alive = yes
				NOT = { is_betrothed = yes }
				NOT = { is_married = yes }
			}
		}
		name = agot_laughing_storm_rebellion.0014.runcefordx.a

		scope:lyonel = {
			if = {
				limit = {
					scope:garlan = { NOT = { has_character_flag = rebellion_in_the_making } }
					scope:steffon = { NOT = { has_character_flag = rebellion_in_the_making } }
					scope:runceford = { NOT = { has_character_flag = rebellion_in_the_making } }
					has_character_flag = lyonel_instant_war
				}
				trigger_event = {
					id = agot_laughing_storm_rebellion.0024
					days = 5
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Luthor + Olenna = ?
agot_laughing_storm_rebellion.0015 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0015.t
	desc = agot_laughing_storm_rebellion.0015.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:luthor
		animation = flirtation
	}
	right_portrait = {
		character = scope:olenna
	}

	option = {
		name = agot_laughing_storm_rebellion.0015.a

		if = {
			limit = {
				scope:luthor = { NOT = { is_betrothed = yes } }
				scope:olenna = { NOT = { is_betrothed = yes } }
			}
			scope:luthor = {
				create_betrothal = scope:olenna
			}
			create_alliance = { # By marriage
				target = scope:garlan
				allied_through_owner = scope:luthor
				allied_through_target = scope:olenna
			}
			if = {
				limit = {
					scope:olenna = { NOT = { is_courtier_of = scope:garlan } }
				}
				scope:garlan = {
					add_courtier = scope:olenna
				}
			}
		}

		scope:runceford = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0017
				days = 1
			}
		}
		scope:garlan = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0017
				days = 1
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0015.b

		scope:olenna = { save_scope_as = my_child }
		scope:runceford = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0018
				days = 7
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Luthor + Olenna = betrothal notification
agot_laughing_storm_rebellion.0017 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0017.t
	desc = agot_laughing_storm_rebellion.0017.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:luthor
		animation = flirtation
	}
	right_portrait = {
		character = scope:olenna
	}
	lower_right_portrait = {
		character = scope:the_other_father
	}

	immediate = {
		show_as_tooltip = {
			scope:luthor = {
				create_betrothal = scope:olenna
			}
			create_alliance = { # By marriage
				target = scope:garlan
				allied_through_owner = scope:luthor
				allied_through_target = scope:olenna
			}
			scope:garlan = {
				add_courtier = scope:olenna
			}
		}

		if = {
			limit = { this = scope:garlan }
			scope:runceford = { save_scope_as = the_other_father }
		}
		else = { scope:garlan = { save_scope_as = the_other_father } }
	}

	option = {
		name = agot_laughing_storm_rebellion.0017.a
	}
}

#Luthor + Olenna = refused
agot_laughing_storm_rebellion.0018 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0018.t
	desc = agot_laughing_storm_rebellion.0018.desc

	theme = court

	override_background = {
		reference = garden
	}
	left_portrait = {
		character = scope:luthor
		animation = boredom
	}
	right_portrait = {
		character = scope:olenna
		animation = spymaster
	}
	lower_right_portrait = {
		character = scope:garlan
	}

	option = {
		name = agot_laughing_storm_rebellion.0018.a
	}
}

##############################################################
## 0020-0035 LAUGHING STORM EVENTS - Non-Canon Scenarios    ##
##############################################################

#Lyonel Won
agot_laughing_storm_rebellion.0020 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0020.t
	desc = {
		desc = agot_laughing_storm_rebellion.0020.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = demand_banishment
					has_character_flag = demand_betrothal
				}
				desc = agot_laughing_storm_rebellion.0020.desc.both
			}
			triggered_desc = {
				trigger = {
					NOT = { has_character_flag = demand_banishment }
					has_character_flag = demand_betrothal
				}
				desc = agot_laughing_storm_rebellion.0020.desc.only_betrothal
			}
			triggered_desc = {
				trigger = {
					has_character_flag = demand_banishment
					NOT = { has_character_flag = demand_betrothal }
				}
				desc = agot_laughing_storm_rebellion.0020.desc.only_banishment
			}
			triggered_desc = {
				trigger = {
					NOT = { has_character_flag = demand_banishment }
					NOT = { has_character_flag = demand_betrothal }
				}
				desc = agot_laughing_storm_rebellion.0020.desc.none
			}
		}
	}

	theme = battle

	override_background = {
		reference = alley_day
	}
	left_portrait = {
		character = scope:lyonel
		animation = celebrate_sword
	}
	right_portrait = {
		character = scope:aegonv
		animation = personality_bold
	}

	immediate = {
		scope:lyonel = {
			if = {
				limit = {
					is_alive = yes
					has_character_flag = no_hat
				}
				remove_character_flag = no_hat
			}
		}
		scope:duncantall = {
			if = {
				limit = {
					is_alive = yes
					has_character_flag = no_hat
				}
				remove_character_flag = no_hat
			}
		}

		if = {
			limit = {
				scope:duncansmall = { is_alive = yes }
				agot_nw_can_banish = { BANISHER = scope:aegonv BANISHEE = scope:duncansmall }
			}
			add_character_flag = {
				flag = demand_banishment
				days = 90
			}
		}
		if = {
			limit = {
				scope:rhaelle = { is_alive = yes }
				scope:rhaelle = { NOT = { is_betrothed = yes } }
				scope:rhaelle = { NOT = { is_married = yes } }
				OR = {
					AND = {
						scope:ormund = { is_alive = yes }
						scope:ormund = { NOT = { is_betrothed = yes } }
						scope:ormund = { NOT = { is_married = yes } }
					}
					AND = {
						scope:harbert = { is_alive = yes }
						scope:harbert = { NOT = { is_betrothed = yes } }
						scope:harbert = { NOT = { is_married = yes } }
					}
				}
			}
			add_character_flag = {
				flag = demand_betrothal
				days = 90
			}
		}
	}

	#swear fealty but demand a new betrothal and duncan to be banished
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							OR = {
								has_character_flag = demand_banishment
								has_character_flag = demand_betrothal
							}
						}
						desc = agot_laughing_storm_rebellion.0020.a
					}
					triggered_desc = {
						trigger = {
							NOT = { has_character_flag = demand_banishment }
							NOT = { has_character_flag = demand_betrothal }
						}
						desc = agot_laughing_storm_rebellion.0020.a.simple
					}
				}
			}
		}

		scope:lyonel = {
			remove_character_flag = currently_in_duel
			remove_character_flag = no_hat
		}
		scope:duncantall = {
			if = {
				limit = {
					is_alive = yes
					has_character_flag = no_hat
				}
				remove_character_flag = no_hat
			}
		}

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0021
				days = 3
			}
		}

		if = {
			limit = {
				scope:duncansmall = { is_alive = yes }
				agot_nw_can_banish = { BANISHER = scope:aegonv BANISHEE = scope:duncansmall }
				scope:rhaelle = { is_alive = yes }
				scope:rhaelle = { NOT = { is_betrothed = yes } }
				scope:rhaelle = { NOT = { is_married = yes } }
				OR = {
					AND = {
						scope:ormund = { is_alive = yes }
						scope:ormund = { NOT = { is_betrothed = yes } }
						scope:ormund = { NOT = { is_married = yes } }
					}
					AND = {
						scope:harbert = { is_alive = yes }
						scope:harbert = { NOT = { is_betrothed = yes } }
						scope:harbert = { NOT = { is_married = yes } }
					}
				}
			}
			show_as_tooltip = {
				agot_send_to_nightswatch_effect = {
					ACTOR = scope:aegonv
					NIGHTSWATCH_CANDIDATE = scope:duncansmall
				}
				if = {
					limit = {
						scope:ormund = { is_alive = yes }
						scope:ormund = { NOT = { is_betrothed = yes } }
						scope:ormund = { NOT = { is_married = yes } }
					}
					scope:rhaelle = {
						create_betrothal = scope:ormund
					}
				}
				else_if = {
					limit = {
						scope:harbert = { is_alive = yes }
						scope:harbert = { NOT = { is_betrothed = yes } }
						scope:harbert = { NOT = { is_married = yes } }
					}
					scope:rhaelle = {
						create_betrothal = scope:harbert
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:duncansmall = { is_alive = yes }
				agot_nw_can_banish = { BANISHER = scope:aegonv BANISHEE = scope:duncansmall }
			}
			show_as_tooltip = {
				agot_send_to_nightswatch_effect = {
					ACTOR = scope:aegonv
					NIGHTSWATCH_CANDIDATE = scope:duncansmall
				}
			}
		}
		else_if = {
			limit = {
				scope:rhaelle = { is_alive = yes }
				scope:rhaelle = { NOT = { is_betrothed = yes } }
				scope:rhaelle = { NOT = { is_married = yes } }
				OR = {
					AND = {
						scope:ormund = { is_alive = yes }
						scope:ormund = { NOT = { is_betrothed = yes } }
						scope:ormund = { NOT = { is_married = yes } }
					}
					AND = {
						scope:harbert = { is_alive = yes }
						scope:harbert = { NOT = { is_betrothed = yes } }
						scope:harbert = { NOT = { is_married = yes } }
					}
				}
			}
			show_as_tooltip = {
				if = {
					limit = {
						scope:ormund = { is_alive = yes }
						scope:ormund = { NOT = { is_betrothed = yes } }
						scope:ormund = { NOT = { is_married = yes } }
					}
					scope:rhaelle = {
						create_betrothal = scope:ormund
					}
				}
				else_if = {
					limit = {
						scope:harbert = { is_alive = yes }
						scope:harbert = { NOT = { is_betrothed = yes } }
						scope:harbert = { NOT = { is_married = yes } }
					}
					scope:rhaelle = {
						create_betrothal = scope:harbert
					}
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#stay independent
	option = {
		name = agot_laughing_storm_rebellion.0020.b

		scope:lyonel = {
			remove_character_flag = currently_in_duel
			remove_character_flag = no_hat
		}
		scope:duncantall = {
			remove_character_flag = no_hat
		}

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0026
				days = 1
			}

			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = yes
			}
			becomes_independent = {
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}

		agot_laughing_storm_instant_divorce_events_effect = yes

		#Send Reconquest Story
		title:b_ruins.holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0035
				years = 5
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Lyonel Won - Aegon V POV
agot_laughing_storm_rebellion.0021 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:lyonel = { NOT = { has_character_flag = demand_banishment } }
					scope:lyonel = { NOT = { has_character_flag = demand_betrothal } }
				}
				desc = agot_laughing_storm_rebellion.0021.no_demand.t
			}
			triggered_desc = {
				trigger = {
					OR = {
						scope:lyonel = { has_character_flag = demand_banishment }
						scope:lyonel = { has_character_flag = demand_betrothal }
					}
				}
				desc = agot_laughing_storm_rebellion.0021.t
			}
		}
	}
	desc = {
		desc = agot_laughing_storm_rebellion.0021.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:lyonel = { has_character_flag = demand_banishment }
					scope:lyonel = { has_character_flag = demand_betrothal }
				}
				desc = agot_laughing_storm_rebellion.0021.desc.both
			}
			triggered_desc = {
				trigger = {
					scope:lyonel = { NOT = { has_character_flag = demand_banishment } }
					scope:lyonel = { has_character_flag = demand_betrothal }
				}
				desc = agot_laughing_storm_rebellion.0021.desc.only_betrothal
			}
			triggered_desc = {
				trigger = {
					scope:lyonel = { has_character_flag = demand_banishment }
					scope:lyonel = { NOT = { has_character_flag = demand_betrothal } }
				}
				desc = agot_laughing_storm_rebellion.0021.desc.only_banishment
			}
			triggered_desc = {
				trigger = {
					scope:lyonel = { NOT = { has_character_flag = demand_banishment } }
					scope:lyonel = { NOT = { has_character_flag = demand_betrothal } }
				}
				desc = agot_laughing_storm_rebellion.0021.desc.none
			}
		}
	}

	theme = court

	override_background = {
		reference = courtyard
	}
	left_portrait = {
		character = scope:aegonv
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:lyonel
		animation = personality_bold
	}

	#refuse demand
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							OR = {
								scope:lyonel = { has_character_flag = demand_banishment }
								scope:lyonel = { has_character_flag = demand_betrothal }
							}
						}
						desc = agot_laughing_storm_rebellion.0021.a
					}
					triggered_desc = {
						trigger = {
							scope:lyonel = { NOT = { has_character_flag = demand_banishment } }
							scope:lyonel = { NOT = { has_character_flag = demand_betrothal } }
						}
						desc = agot_laughing_storm_rebellion.0021.a.no_demand
					}
				}
			}
		}

		if = {
			limit = {
				OR = {
					scope:lyonel = { has_character_flag = demand_banishment }
					scope:lyonel = { has_character_flag = demand_betrothal }
				}
			}
			scope:lyonel = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0032
					days = 1
				}
			}

			agot_laughing_storm_instant_war_effect = yes
		}
		else = {
			scope:lyonel = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0028
					days = 3
				}
			}
		}


		ai_chance = {
			base = 100
		}
	}

	#accept demand
	option = {
		trigger = {
			OR = {
				scope:lyonel = { has_character_flag = demand_banishment }
				scope:lyonel = { has_character_flag = demand_betrothal }
			}
		}
		name = agot_laughing_storm_rebellion.0021.b

		#Duncan takes the black
		scope:duncansmall = {
			if = {
				limit = {
					is_alive = yes
					agot_nw_can_banish = { BANISHER = scope:aegonv BANISHEE = scope:duncansmall }
				}
				if = {
					limit = {
						has_trait = maester
					}
					agot_expel_appropriate_maester_effect = yes
				}
				agot_send_to_nightswatch_effect = {
					ACTOR = scope:aegonv
					NIGHTSWATCH_CANDIDATE = scope:duncansmall
				}
			}
		}

		agot_laughing_storm_instant_divorce_events_effect = yes

		#A daughter betrothed to a Baratheon
		if = {
			limit = {
				scope:ormund = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:rhaelle = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:rhaelle = {
				create_betrothal = scope:ormund
			}
			scope:ormund = { save_scope_as = bara_betrothed }
			scope:rhaelle = { save_scope_as = targ_betrothed }
		}
		else_if = {
			limit = {
				scope:harbert = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
				scope:rhaelle = {
					is_alive = yes
					NOT = { is_betrothed = yes }
					NOT = { is_married = yes }
				}
			}
			scope:rhaelle = {
				create_betrothal = scope:harbert
			}
			scope:harbert = { save_scope_as = bara_betrothed }
			scope:rhaelle = { save_scope_as = targ_betrothed }
		}

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0028
				days = 3
			}
		}

		ai_chance = {
			base = 50
		}
	}
}

#Lyonel Refused the Marriage. POV: Aegon V
agot_laughing_storm_rebellion.0022 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0022.t
	desc = agot_laughing_storm_rebellion.0022.desc

	theme = court

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = personality_bold
	}

	immediate = {
		scope:aegonv = {
			add_opinion = {
				target = scope:lyonel
				modifier = insulted_family_opinion
				opinion = -50
			}
		}
		scope:lyonel = {
			add_opinion = {
				target = scope:aegonv
				modifier = insulted_family_opinion
				opinion = -50
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0022.a
		custom_tooltip = agot_laughing_storm_rebellion.0022.a.tt
	}
}

#creating the alliance
agot_laughing_storm_rebellion.0023 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0023.t
	desc = agot_laughing_storm_rebellion.0023.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	trigger = { scope:lyonel = { NOT = { has_character_flag = lsr_no_war } } }

	immediate = {
		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0024
				days = 4
			}
		}
	}

	#ally
	option = {
		name = agot_laughing_storm_rebellion.0023.a

		add_character_flag = ally
		set_variable = { name = mw_is_loyal_to value = scope:lyonel }
		set_variable = mw_block_other_stances

		if = {
			limit = { this = scope:runceford }
			title:d_the_arbor = { set_variable = allied_with_lyonel }
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#refuse
	option = {
		name = agot_laughing_storm_rebellion.0023.b

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
			modifier = {
				add = 25

				this = scope:runceford
			}
		}
	}
}

#WAR
agot_laughing_storm_rebellion.0024 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0024.t

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:steffon = { has_character_flag = ally }
					scope:garlan = { has_character_flag = ally }
					scope:runceford = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.garlan_steffon_runceford.desc
			}
			triggered_desc = {
				trigger = {
					scope:steffon = { has_character_flag = ally }
					scope:garlan = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.garlan_steffon.desc
			}
			triggered_desc = {
				trigger = {
					scope:steffon = { has_character_flag = ally }
					scope:runceford = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.steffon_runceford.desc
			}
			triggered_desc = {
				trigger = {
					scope:garlan = { has_character_flag = ally }
					scope:runceford = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.garlan_runceford.desc
			}
			triggered_desc = {
				trigger = {
					scope:garlan = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.garlan.desc
			}
			triggered_desc = {
				trigger = {
					scope:steffon = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.steffon.desc
			}
			triggered_desc = {
				trigger = {
					scope:runceford = { has_character_flag = ally }
				}
				desc = agot_laughing_storm_rebellion.0024.runceford.desc
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:steffon = { has_character_flag = ally } }
					NOT = { scope:garlan = { has_character_flag = ally } }
					NOT = { scope:runceford = { has_character_flag = ally } }
				}
				desc = agot_laughing_storm_rebellion.0024.none.desc
			}
		}
	}


	trigger = {
		NOT = { has_character_flag = already_received_lsr_0024 }
		NOT = { has_character_flag = lsr_no_war }
	}

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	immediate = {
		create_laughing_storm_rebel_alliances_effect = yes
		add_character_flag = {
			flag = already_received_lsr_0024
			days = 90
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0024.a

		add_character_flag = the_laughing_storm_rebellion_war

		agot_laughing_storm_flag_remove_effect = yes

		start_war = {
			cb = agot_independence_war
			target = title:e_the_iron_throne.holder
		}

		#Send Reconquest Story
		title:b_ruins.holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0035
				years = 5
			}
		}
	}
}

#Lyonel refused the trial - Aegon V POV
agot_laughing_storm_rebellion.0025 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0025.t
	desc = agot_laughing_storm_rebellion.0025.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	#war
	option = {
		name = agot_laughing_storm_rebellion.0025.a

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0027
				days = 2
			}
		}

		agot_laughing_storm_instant_war_effect = yes

		ai_chance = {
			base = 100
		}
	}

	#let it be
	option = {
		name = agot_laughing_storm_rebellion.0025.b

		show_as_tooltip = {
			scope:lyonel = {
				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = yes
				}
				becomes_independent = {
					change = scope:change
				}
				resolve_title_and_vassal_change = scope:change
			}
		}

		agot_laughing_storm_instant_divorce_events_effect = yes

		scope:lyonel = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0026
				days = 1
			}
		}

		ai_chance = {
			base = 50
		}
	}
}

#The Storm King
agot_laughing_storm_rebellion.0026 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0026.t
	desc = agot_laughing_storm_rebellion.0026.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	option = {
		name = agot_laughing_storm_rebellion.0026.a

		if = {
			limit = { NOT = { has_character_flag = laughing_cycle_trigger } }
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = yes
			}
			becomes_independent = {
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		else_if = {
			limit = {
				has_character_flag = laughing_cycle_trigger
				exists = title:d_the_arbor.holder
				exists = title:d_the_arbor.var:allied_with_lyonel
				title:d_the_arbor.holder.dynasty = dynasty:dynn_Redwyne
			}
			title:d_the_arbor.holder = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0038
					days = 1
				}
				#trigger_event = agot_laughing_storm_rebellion.0038
			}
		}

		#Send Reconquest Story
		title:b_ruins.holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0035
				years = 5
			}
		}

		every_player = {
			limit = { NOT = { this = scope:lyonel } }
			trigger_event = {
				id = agot_laughing_storm_rebellion.0029
				days = 1
			}
		}
	}
}

#The Early War
agot_laughing_storm_rebellion.0027 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0027.t
	desc = agot_laughing_storm_rebellion.0027.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	#war
	option = {
		name = agot_laughing_storm_rebellion.0027.a
	}
}

#Fin
agot_laughing_storm_rebellion.0028 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0028.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:lyonel = { has_character_flag = demand_betrothal } }
				desc = agot_laughing_storm_rebellion.0028.desc
			}
			triggered_desc = {
				trigger = { scope:lyonel = { NOT = { has_character_flag = demand_betrothal } } }
				desc = agot_laughing_storm_rebellion.0028.desc.no_betrothal
			}
		}
	}

	theme = court

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	immediate = {
		scope:lyonel = {
			if = {
				limit = { has_character_flag = in_laughing_storm_story }
				remove_character_flag = in_laughing_storm_story
			}
		}
	}

	#fin
	option = {
		name = agot_laughing_storm_rebellion.0028.a

		if = {
			limit = {
				scope:lyonel = { has_character_flag = demand_betrothal }
			}
			create_alliance = { # By marriage
				target = scope:aegonv
				allied_through_owner = scope:bara_betrothed
				allied_through_target = scope:targ_betrothed
			}
		}


		every_player = {
			limit = {
				NOT = { this = scope:lyonel }
				location ?= { geographical_region = world_westeros_seven_kingdoms }
			}
			trigger_event = {
				id = agot_laughing_storm_rebellion.0030
				days = 3
			}
		}
	}
}

#The Storm King - to all
agot_laughing_storm_rebellion.0029 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0029.t
	desc = agot_laughing_storm_rebellion.0029.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	option = {
		name = agot_laughing_storm_rebellion.0029.a
	}

	after = {
		scope:lyonel = { remove_character_flag = in_laughing_storm_story }
	}
}

#Fin - to all
agot_laughing_storm_rebellion.0030 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0030.t
	desc = agot_laughing_storm_rebellion.0030.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	immediate = {
		scope:lyonel = {
			if = {
				limit = { has_character_flag = in_laughing_storm_story }
				remove_character_flag = in_laughing_storm_story
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0030.a
	}
}

#Lyonel died - to all
agot_laughing_storm_rebellion.0031 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0031.t
	desc = agot_laughing_storm_rebellion.0031.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	option = {
		name = agot_laughing_storm_rebellion.0031.a
	}
}

#Lyonel's Demand refused
agot_laughing_storm_rebellion.0032 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0032.t
	desc = agot_laughing_storm_rebellion.0032.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	left_portrait = {
		character = scope:aegonv
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}

	#War
	option = {
		name = agot_laughing_storm_rebellion.0032.a
	}

	#No War
	option = {
		name = agot_laughing_storm_rebellion.0032.b
		trigger = { is_ai = no }

		add_character_flag = {
			flag = lsr_no_war
			days = 90
		}

		agot_laughing_storm_flag_remove_effect = yes

		every_player = {
			limit = { location ?= { geographical_region = world_westeros_seven_kingdoms } }
			trigger_event = {
				id = agot_laughing_storm_rebellion.0030
				days = 3
			}
		}
	}
}

#Reconquest Preparation
agot_laughing_storm_rebellion.0033 = {
	hidden = yes

	immediate = {
		if = {
			limit = {
				exists = title:e_the_stormlands.holder
				exists = title:e_the_iron_throne.holder
				OR = {
					title:e_the_iron_throne.holder = character:Targaryen_127 #Jaehaerys
					title:e_the_iron_throne.holder = character:Targaryen_129 #Daeron
					title:e_the_iron_throne.holder = character:Targaryen_126 #Duncan
				}
				title:e_the_iron_throne.holder = {
					NOT = { is_at_war_with = title:e_the_stormlands.holder }
					has_character_flag = agot_laughing_storm_rebellion_0033_sent
					is_at_war = no
					is_imprisoned = no
					is_incapable = no
					NOT = { exists = involved_activity }
				}
			}
			trigger_event = agot_laughing_storm_rebellion.0034
		}
		else = { remove_character_flag = agot_laughing_storm_rebellion_0033_sent }
	}
}

#Reconquest
agot_laughing_storm_rebellion.0034 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0034.t
	desc = agot_laughing_storm_rebellion.0034.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	lower_left_portrait = {
		character = scope:aegonv
	}
	left_portrait = {
		character = title:e_the_iron_throne.holder
		animation = war_attacker
	}
	right_portrait = {
		character = title:e_the_stormlands.holder
	}

	immediate = { laughing_storm_rebellion_scopes_effect = yes }

	#Lets Reconquer The Stormlands
	option = {
		name = agot_laughing_storm_rebellion.0034.a

		random_owned_story = {
			limit = { story_type = story_agot_reconquest_of_the_stormlands }
			end_story = yes
		}
		start_war = {
			cb = agot_reconquest_war
			target = title:e_the_stormlands.holder
		}
		remove_character_flag = agot_laughing_storm_rebellion_0033_sent

		title:e_the_iron_throne.holder = {
			create_story = { # Initialize The Reconquest of The Realm
				type = story_agot_reconquest_of_the_realm
				save_scope_as = reconquest_realm_story
			}
		}

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	#It's fine
	option = {
		name = agot_laughing_storm_rebellion.0034.b

		random_owned_story = {
			limit = { story_type = story_agot_reconquest_of_the_stormlands }
			end_story = yes
		}
		remove_character_flag = agot_laughing_storm_rebellion_0033_sent

		ai_chance = { base = 100 }
	}
}

#Reconquest Story Creation
agot_laughing_storm_rebellion.0035 = {
	hidden = yes

	immediate = {
		if = {
			limit = {
				exists = title:e_the_stormlands.holder
				exists = title:e_the_iron_throne.holder
				OR = {
					title:e_the_iron_throne.holder = character:Targaryen_122 #Aegon V
					title:e_the_iron_throne.holder = character:Targaryen_127 #Jaehaerys
					title:e_the_iron_throne.holder = character:Targaryen_129 #Daeron
					title:e_the_iron_throne.holder = character:Targaryen_126 #Duncan
				}
			}
			title:e_the_iron_throne.holder = {
				create_story = { # Initialize The Reconquest of The Stormlands
					type = story_agot_reconquest_of_the_stormlands
					save_scope_as = reconquest_stormlands_story
				}
			}
		}
	}
}

#Realm Reconquest Preparation
agot_laughing_storm_rebellion.0036 = {
	hidden = yes

	immediate = {
		if = {
			limit = {
				NOT = { exists = title:e_the_stormlands.holder }
				exists = title:e_the_iron_throne.holder
				OR = {
					title:e_the_iron_throne.holder = character:Targaryen_127 #Jaehaerys
					title:e_the_iron_throne.holder = character:Targaryen_129 #Daeron
					title:e_the_iron_throne.holder = character:Targaryen_126 #Duncan
				}
				title:e_the_iron_throne.holder = {
					is_imprisoned = no
					is_incapable = no
					NOT = { exists = involved_activity }
				}
				OR = {
					AND = {
						exists = title:e_the_north.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_north
							NOT = { is_at_war_with = title:e_the_north.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_the_riverlands.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_riverlands
							NOT = { is_at_war_with = title:e_the_riverlands.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_the_iron_islands.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_iron_islands
							NOT = { is_at_war_with = title:e_the_iron_islands.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_the_westerlands.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_westerlands
							NOT = { is_at_war_with = title:e_the_westerlands.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_the_reach.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_reach
							NOT = { is_at_war_with = title:e_the_reach.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_dorne.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_dorne
							NOT = { is_at_war_with = title:e_dorne.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
					AND = {
						exists = title:e_the_vale.holder
						title:e_the_iron_throne.holder = {
							has_character_flag = laughing_e_the_vale
							NOT = { is_at_war_with = title:e_the_vale.holder }
							has_character_flag = agot_laughing_storm_rebellion_0036_sent
							is_at_war = no
						}
					}
				}
			}
			trigger_event = agot_laughing_storm_rebellion.0037
		}
		else = { remove_character_flag = agot_laughing_storm_rebellion_0036_sent }
	}
}

#Realm Reconquest
agot_laughing_storm_rebellion.0037 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0037.t
	desc = agot_laughing_storm_rebellion.0037.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	lower_left_portrait = {
		character = scope:aegonv
	}
	right_portrait = {
		character = title:e_the_iron_throne.holder
		animation = war_attacker
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
		if = {
			limit = { has_character_flag = laughing_e_the_north }
			title:k_the_north = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_riverlands }
			title:k_the_riverlands = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_iron_islands }
			title:k_the_iron_islands = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_westerlands }
			title:k_the_westerlands = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_reach }
			title:k_the_reach = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_dorne }
			title:k_dorne = { save_scope_as = reconquest_target_title }
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_vale }
			title:k_the_vale = { save_scope_as = reconquest_target_title }
		}
	}

	#Lets Reconquer The Stormlands
	option = {
		name = agot_laughing_storm_rebellion.0037.a

		if = {
			limit = { has_character_flag = laughing_e_the_north }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_north.holder
			}
			remove_character_flag = laughing_e_the_north
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_riverlands }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_riverlands.holder
			}
			remove_character_flag = laughing_e_the_riverlands
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_iron_islands }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_iron_islands.holder
			}
			remove_character_flag = laughing_e_the_iron_islands
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_westerlands }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_westerlands.holder
			}
			remove_character_flag = laughing_e_the_westerlands
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_reach }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_reach.holder
			}
			remove_character_flag = laughing_e_the_reach
		}
		else_if = {
			limit = { has_character_flag = laughing_e_dorne }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_dorne.holder
			}
			remove_character_flag = laughing_e_dorne
		}
		else_if = {
			limit = { has_character_flag = laughing_e_the_vale }
			start_war = {
				cb = agot_reconquest_war
				target = title:e_the_vale.holder
			}
			remove_character_flag = laughing_e_the_vale
		}

		remove_character_flag = agot_laughing_storm_rebellion_0036_sent

		ai_chance = {
			base = 100

			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	#It's fine
	option = {
		name = agot_laughing_storm_rebellion.0037.b

		random_owned_story = {
			limit = { story_type = story_agot_reconquest_of_the_realm }
			end_story = yes
		}
		remove_character_flag = agot_laughing_storm_rebellion_0036_sent

		ai_chance = { base = 100 }
	}
}

#Redwyne Independence
agot_laughing_storm_rebellion.0038 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0038.t
	desc = agot_laughing_storm_rebellion.0038.desc

	theme = crown

	override_background = {
		reference = agot_pk_reach
	}
	left_portrait = {
		character = scope:redwyne_ruler
		animation = personality_bold
	}

	immediate = {
		title:d_the_arbor.holder = { save_scope_as = redwyne_ruler }

		title:e_the_stormlands = { save_scope_as = stormlands }
		title:e_the_reach = { save_scope_as = reach }
		title:d_the_arbor = { save_scope_as = arbor }
	}

	option = {
		name = agot_laughing_storm_rebellion.0038.a

		#Petty Kingdom
		add_prestige = 400

		get_title = title:k_the_arbor_straits

		if = {
			limit = {
				title:e_the_reach = { is_de_jure_liege_or_above_target = title:k_the_reach }
			}
			title:e_the_reach = { save_temporary_scope_as = empire }

			create_story = { # Initialize Arbor Story
				type = story_pk_arbor_lsr
				save_scope_as = pk_arbor_lsr_story
			}
		}
		else_if = {
			limit = {
				exists = title:k_the_reach.holder
				title:k_the_reach.holder = { agot_is_independent_ruler = yes }
			}
			title:e_the_reach = { save_temporary_scope_as = empire }

			create_story = { # Initialize Arbor Story
				type = story_pk_arbor_lsr
				save_scope_as = pk_arbor_lsr_story
			}
		}
		else = {
			title:e_the_iron_throne = { save_temporary_scope_as = empire }
		}

		title:k_the_arbor_straits = {
			set_de_jure_liege_title = scope:empire
			save_temporary_scope_as = k_agot_proclaim_pk_the_arbor
		}
		every_held_title = {
			limit = { tier = tier_duchy }
			set_de_jure_liege_title = scope:k_agot_proclaim_pk_the_arbor
		}
		set_global_variable = pk_agot_proclaim_pk_the_arbor_decision

		save_scope_as = i_am_the_king
		every_player = {
			limit = { NOT = { this = scope:i_am_the_king } }
			trigger_event = {
				id = agot_proclaim.0034
			}
		}

		#Independency
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = yes
		}
		becomes_independent = {
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change

		title:d_the_arbor.holder = {
			remove_variable = allied_with_lyonel
		}
	}
}

#Reach informed about PK Arbor
agot_laughing_storm_rebellion.0039 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0039.t
	desc = {
		desc = agot_laughing_storm_rebellion.0039.desc
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:redwyne_prisoner }
				desc = agot_laughing_storm_rebellion.0039.desc.olenna
			}
		}
	}

	theme = war

	override_background = {
		reference = agot_highgarden
	}
	left_portrait = {
		character = scope:e_reach_holder
		animation = personality_rational
	}
	right_portrait = {
		character = scope:k_arbor_holder
		animation = personality_bold
	}
	lower_right_portrait = {
		trigger = { exists = scope:redwyne_prisoner }
		character = scope:redwyne_prisoner
	}

	trigger = { NOT = { has_character_flag = already_received_lsr_0039 } }

	immediate = {
		add_character_flag = {
			flag = already_received_lsr_0039
			days = 90
		}

		scope:k_arbor_holder = {
			random_owned_story = {
				limit = { story_type = story_pk_arbor_lsr }
				end_story = yes
			}
		}

		laughing_storm_rebellion_scopes_effect = yes

		if = {
			limit = {
				scope:olenna = {
					is_alive = yes
					is_courtier_of = scope:e_reach_holder
					is_ruler = no
				}
			}
			scope:olenna = { save_scope_as = redwyne_prisoner }
		}

		title:e_the_stormlands = { save_scope_as = stormlands }
		title:e_the_reach = { save_scope_as = reach }
		title:d_the_arbor = { save_scope_as = arbor }
	}

	#Ok
	option = {
		name = agot_laughing_storm_rebellion.0039.a

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#Threat
	option = {
		name = agot_laughing_storm_rebellion.0039.b
		trigger = { exists = scope:redwyne_prisoner }

		if = {
			limit = {
				scope:olenna = { is_imprisoned = no }
			}
			hard_imprison_character_effect = {
				TARGET = scope:olenna
				IMPRISONER = scope:e_reach_holder
			}
		}

		scope:k_arbor_holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0040
				days = 3
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Arbor: Reach Threat
agot_laughing_storm_rebellion.0040 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0040.t
	desc = agot_laughing_storm_rebellion.0040.desc

	theme = war

	override_background = {
		reference = agot_pk_reach
	}
	left_portrait = {
		character = scope:e_reach_holder
		animation = personality_rational
	}
	right_portrait = {
		character = scope:k_arbor_holder
		animation = personality_bold
	}
	lower_right_portrait = {
		trigger = { exists = scope:redwyne_prisoner }
		character = scope:redwyne_prisoner
	}

	#Swear Fealty
	option = {
		name = agot_laughing_storm_rebellion.0040.a

		show_as_tooltip = {
			destroy_title = title:k_the_arbor_straits

			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			change_liege = { liege = scope:e_reach_holder change = scope:change }
			resolve_title_and_vassal_change = scope:change

			scope:olenna = { release_from_prison = yes }
		}

		scope:e_reach_holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0041
				days = 2
			}
		}



		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#Refuse
	option = {
		name = agot_laughing_storm_rebellion.0040.b

		show_as_tooltip= {
			execute_prisoner_effect = {
				VICTIM = scope:olenna
				EXECUTIONER = scope:e_reach_holder
			}
		}

		scope:e_reach_holder = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0042
				days = 2
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Arbor remains loyal
agot_laughing_storm_rebellion.0041 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0041.t
	desc = agot_laughing_storm_rebellion.0041.desc

	theme = war

	override_background = {
		reference = agot_highgarden
	}
	left_portrait = {
		character = scope:e_reach_holder
		animation = personality_rational
	}
	right_portrait = {
		character = scope:k_arbor_holder
		animation = personality_bold
	}
	lower_right_portrait = {
		trigger = { exists = scope:redwyne_prisoner }
		character = scope:redwyne_prisoner
	}

	option = {
		name = agot_laughing_storm_rebellion.0041.a

		destroy_title = title:k_the_arbor_straits

		scope:k_arbor_holder = {
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			change_liege = { liege = scope:e_reach_holder change = scope:change }
			resolve_title_and_vassal_change = scope:change
		}

		scope:olenna = { release_from_prison = yes }

		hidden_effect = {
			scope:k_arbor_holder = {
				every_held_title = {
					limit = { tier = tier_duchy }
					set_de_jure_liege_title = title:k_the_reach
				}
			}
			remove_global_variable = pk_agot_proclaim_pk_the_arbor_decision
		}
	}
}

#Arbor remains independent
agot_laughing_storm_rebellion.0042 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0042.t
	desc = agot_laughing_storm_rebellion.0042.desc

	theme = war

	override_background = {
		reference = agot_highgarden
	}
	left_portrait = {
		character = scope:e_reach_holder
		animation = personality_rational
	}
	right_portrait = {
		character = scope:k_arbor_holder
		animation = personality_bold
	}
	lower_right_portrait = {
		trigger = { exists = scope:redwyne_prisoner }
		character = scope:redwyne_prisoner
	}

	#Execeute Olenna
	option = {
		name = agot_laughing_storm_rebellion.0042.a

		execute_prisoner_effect = {
			VICTIM = scope:olenna
			EXECUTIONER = scope:e_reach_holder
		}
	}
}

#Initial event for everyone
agot_laughing_storm_rebellion.0050 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0050.t
	desc = agot_laughing_storm_rebellion.0050.desc

	theme = war

	override_background = {
		reference = agot_storms_end
	}
	right_portrait = {
		character = scope:lyonel
		animation = war_attacker
	}
	left_portrait = {
		character = scope:aegonv
		animation = personality_content
	}
	lower_left_portrait = {
		character = scope:duncansmall
	}

	option = {
		name = agot_laughing_storm_rebellion.0050.a
	}
}

##############################################################
## 0100-0104 MAELYS BLACKFYRE EVENTS                        ##
##############################################################

#Maelys Challenging Daemon
agot_laughing_storm_rebellion.0100 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0100.t
	desc = agot_laughing_storm_rebellion.0100.desc

	theme = war

	override_background = {
		reference = battlefield
	}
	left_portrait = {
		character = scope:maelysbf_lsr
		animation = war_attacker
	}
	right_portrait = {
		character = title:d_laamp_merc_golden_company.holder
		animation = war_attacker
	}

	immediate = {
		character:Blackfyre_14 = {
			save_scope_as = maelysbf_lsr
		}
		title:d_laamp_merc_golden_company.holder = {
			save_scope_as = daemonbf_lsr
			add_character_flag = {
				flag = maelys_duel
				days = 60
			}
		}

		if = {
			limit = {
				exists = title:d_laamp_merc_golden_company.holder.primary_heir
				NOT = { title:d_laamp_merc_golden_company.holder.primary_heir = character:Blackfyre_14 }
			}
			title:d_laamp_merc_golden_company.holder.primary_heir = {
				save_scope_as = bf_heir
			}
		}
	}

	trigger = {
		character:Blackfyre_14 = {
			is_alive = yes
			is_ruler = no
			agot_can_be_ruler = yes
		}
		exists = title:d_laamp_merc_golden_company.holder
		NOT = { title:d_laamp_merc_golden_company.holder = character:Blackfyre_14 }
		title:d_laamp_merc_golden_company.holder.dynasty = character:Blackfyre_14.dynasty
		NOT = { title:d_laamp_merc_golden_company.holder = title:e_the_iron_throne.holder }
		NOT = { title:d_laamp_merc_golden_company.holder = title:k_dragonstone.holder }
	}

	option = {
		name = agot_laughing_storm_rebellion.0100.a

		if = {
			limit = {
				title:d_laamp_merc_golden_company.holder = { is_adult = yes }
			}
			title:d_laamp_merc_golden_company.holder = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0101
					days = 4
				}
			}
		}
		else = {
			title:d_laamp_merc_golden_company.holder = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0102
					days = 4
				}
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0100.b

		random_owned_story = {
			limit = { story_type = story_maelys_lsr }
			end_story = yes
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#the duel
agot_laughing_storm_rebellion.0101 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0101.t
	desc = agot_laughing_storm_rebellion.0101.desc

	theme = war

	override_background = {
		reference = battlefield
	}
	left_portrait = {
		character = scope:maelysbf_lsr
		animation = war_attacker
	}
	right_portrait = {
		character = title:d_laamp_merc_golden_company.holder
		animation = war_attacker
	}

	option = {
		name = agot_laughing_storm_rebellion.0101.a

		hidden_effect = {
			title:d_laamp_merc_golden_company.holder = {
				set_designated_heir_unsafe = scope:maelysbf_lsr
				if = {
					limit = {
						scope:maelysbf_lsr = {
							is_alive = yes
							NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
						}
					}
					add_courtier = scope:maelysbf_lsr
				}
			}
		}

		if = {
			limit = {
				scope:maelysbf_lsr = { is_ai = yes }
				title:d_laamp_merc_golden_company.holder = { is_ai = yes }
			}
			trigger_event = agot_laughing_storm_rebellion.0103
		}
		else = {
			configure_start_single_combat_effect = {
				SC_INITIATOR = scope:maelysbf_lsr
				SC_ATTACKER = scope:maelysbf_lsr
				SC_DEFENDER = title:d_laamp_merc_golden_company.holder
				FATALITY = always
				FIXED = no
				LOCALE = battlefield
				OUTPUT_EVENT = agot_laughing_storm_rebellion.0104
				INVALIDATION_EVENT = single_combat.1006	#In a real event, this would obviously be a different event to the output.
			}
		}
	}
}

#usurpation
agot_laughing_storm_rebellion.0102 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0102.t
	desc = agot_laughing_storm_rebellion.0102.desc

	theme = war

	override_background = {
		reference = courtyard
	}
	left_portrait = {
		character = scope:maelysbf_lsr
		animation = war_attacker
	}
	right_portrait = {
		character = title:d_laamp_merc_golden_company.holder
		animation = war_attacker
	}

	immediate = {
		if = {
			limit = { NOT = { house = scope:maelysbf_lsr.house } }
			add_character_flag = {
				flag = is_not_house_blackfyre
				days = 60
			}
			dynasty = {
				random_dynasty_member = {
					limit = {
						is_playable_character = yes
						highest_held_title_tier >= tier_county
						NOT = { this = title:e_the_iron_throne.holder }
						NOT = { this = scope:maelysbf_lsr }
					}
					save_scope_as = random_dynasty_member
				}
			}
			if = {
				limit = { dynasty = title:e_the_iron_throne.holder.dynasty }
				title:e_the_iron_throne.holder = { save_scope_as = king_dynasty_member }
			}
		}
	}

	#Continue as Maelys
	option = {
		name = agot_laughing_storm_rebellion.0102.a

		if = {
			limit = {
				has_multiple_players = no
				is_ai = no
			}
			hidden_effect = {
				if = {
					limit = {
						scope:maelysbf_lsr = {
							is_alive = yes
							NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
						}
					}
					add_courtier = scope:maelysbf_lsr
				}
				set_designated_heir_unsafe = scope:maelysbf_lsr
			}
			death = {
				death_reason = death_execution
				killer = scope:maelysbf_lsr
			}
			show_as_tooltip = { set_player_character = scope:maelysbf_lsr }
		}
		else = {
			hidden_effect = {
				if = {
					limit = {
						scope:maelysbf_lsr = {
							is_alive = yes
							NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
						}
					}
					add_courtier = scope:maelysbf_lsr
				}
				set_designated_heir_unsafe = scope:maelysbf_lsr
			}
			death = {
				death_reason = death_execution
				killer = scope:maelysbf_lsr
			}
		}

		scope:maelysbf_lsr = { trigger_event = agot_laughing_storm_rebellion.0104 }
	}

	#Continue as random dynasty member
	option = {
		trigger = {
			exists = scope:random_dynasty_member
			has_character_flag = is_not_house_blackfyre
			has_multiple_players = no
			is_ai = no
		}
		name = agot_laughing_storm_rebellion.0102.b

		hidden_effect = {
			if = {
				limit = {
					scope:maelysbf_lsr = {
						is_alive = yes
						NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
					}
				}
				add_courtier = scope:maelysbf_lsr
			}
			set_designated_heir_unsafe = scope:maelysbf_lsr
		}
		if = {
			limit = {
				has_multiple_players = no
				is_ai = no
			}
			set_player_character = scope:random_dynasty_member
		}
		death = {
			death_reason = death_execution
			killer = scope:maelysbf_lsr
		}
		scope:maelysbf_lsr = { trigger_event = agot_laughing_storm_rebellion.0104 }
	}

	#Continue as the king
	option = {
		trigger = {
			exists = scope:king_dynasty_member
			has_character_flag = is_not_house_blackfyre
			has_multiple_players = no
			is_ai = no
		}
		name = agot_laughing_storm_rebellion.0102.c

		hidden_effect = {
			if = {
				limit = {
					scope:maelysbf_lsr = {
						is_alive = yes
						NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
					}
				}
				add_courtier = scope:maelysbf_lsr
			}
			set_designated_heir_unsafe = scope:maelysbf_lsr
		}
		if = {
			limit = {
				has_multiple_players = no
				is_ai = no
			}
			set_player_character = scope:king_dynasty_member
		}
		death = {
			death_reason = death_execution
			killer = scope:maelysbf_lsr
		}
		scope:maelysbf_lsr = { trigger_event = agot_laughing_storm_rebellion.0104 }
	}
}

#the duel AI
agot_laughing_storm_rebellion.0103 = {
	hidden = yes

	immediate = {
		random_list = {
			0 = { #Maelys wins
				modifier = {
					add = agot_historic_outcome_2
				}
				title:d_laamp_merc_golden_company.holder = {
					death = {
						death_reason = death_duel
						killer = scope:maelysbf_lsr
					}
				}
				scope:maelysbf_lsr = {
					trigger_event = agot_laughing_storm_rebellion.0104
				}
			}
			0 = { #Daemon wins
				modifier = {
					add = agot_nonhistoric_outcome_2
				}
				scope:maelysbf_lsr = {
					death = {
						death_reason = death_duel
						killer = title:d_laamp_merc_golden_company.holder
					}
				}
				title:d_laamp_merc_golden_company.holder = {
					set_designated_heir_unsafe = scope:bf_heir
					hidden_effect = {
						if = {
							limit = {
								scope:maelysbf_lsr = {
									is_alive = yes
									NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
								}
							}
							add_courtier = scope:maelysbf_lsr
						}
					}
				}
			}
		}
	}
}

#Maelys the Monstrous
agot_laughing_storm_rebellion.0104 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { this = character:Blackfyre_14 }
				desc = agot_laughing_storm_rebellion.0104.maelys.t
			}
			triggered_desc = {
				trigger = { NOT = { this = character:Blackfyre_14 } }
				desc = agot_laughing_storm_rebellion.0104.notmaelys.t
			}
		}
	}

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { this = character:Blackfyre_14 }
				desc = agot_laughing_storm_rebellion.0104.maelys.desc
			}
			triggered_desc = {
				trigger = { NOT = { this = character:Blackfyre_14 } }
				desc = agot_laughing_storm_rebellion.0104.notmaelys.desc
			}
		}
	}

	theme = war

	override_background = {
		reference = battlefield
	}
	right_portrait = {
		character = scope:maelysbf_lsr
		animation = war_attacker
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					scope:daemonbf_lsr = { is_alive = yes }
				}
				scope:daemonbf_lsr = {
					set_designated_heir_unsafe = scope:bf_heir
					hidden_effect = {
						if = {
							limit = {
								scope:maelysbf_lsr = {
									is_alive = yes
									NOT = { is_courtier_of = title:d_laamp_merc_golden_company.holder }
								}
							}
							add_courtier = scope:maelysbf_lsr
						}
					}
				}
			}

			if = {
				limit = { scope:maelysbf_lsr = { is_alive = yes } }
				scope:maelysbf_lsr = {
					add_trait = kinslayer_2
					add_dread = massive_dread_gain
					add_prestige_level = 1
				}
			}

			if = {
				limit = {
					NOT = { scope:maelysbf_lsr = { is_alive = yes } }
				}
				scope:maelysbf_lsr = { save_scope_as = bf_defeated }
			}
			if = {
				limit = {
					NOT = { scope:daemonbf_lsr = { is_alive = yes } }
				}
				scope:daemonbf_lsr = { save_scope_as = bf_defeated }
			}
		}
	}

	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = { this = character:Blackfyre_14 }
						desc = agot_laughing_storm_rebellion.0104.maelys.a
					}
					triggered_desc = {
						trigger = { NOT = { this = character:Blackfyre_14 } }
						desc = agot_laughing_storm_rebellion.0104.notmaelys.a
					}
				}
			}
		}
	}
}

#Bittersteel's Starter Event
agot_laughing_storm_rebellion.0105 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0105.t
	desc = agot_laughing_storm_rebellion.0105.desc

	theme = war

	override_background = { reference = battlefield }

	right_portrait = {
		character = title:d_laamp_merc_golden_company.holder
		animation = war_attacker
	}
	lower_left_portrait = {
		character = scope:daemon_blackfyre
		animation = war_attacker
	}

	immediate = {
		character:Targaryen_94 = { save_scope_as = daemon_blackfyre }
	}

	option = {
		name = agot_laughing_storm_rebellion.0105.a
	}
}

##############################################################
## 0200-0201 SCALY EVENTS                                   ##
##############################################################
agot_laughing_storm_rebellion.0200 = {
	hidden = yes

	trigger = { is_alive = yes }

	immediate = {
		random_list = {
			0 = {
				modifier = {
					add = agot_historic_outcome_2
				}
				random_ruler = {
					limit = {
						highest_held_title_tier >= tier_county
						NOT = { has_government = nights_watch_government }
						NOT = { has_government = ruins_government }
						NOT = { has_government = silent_sisterhood_government }
						NOT = { has_government = kingsguard_government }
						exists = capital_county
						capital_county.title_province = { geographical_region = world_westeros_the_stormlands }
						has_culture = culture:stormlander
						has_faith = faith:fots_seven
					}
					trigger_event = agot_laughing_storm_rebellion.0201
				}
			}
			0 = {
				modifier = {
					add = agot_nonhistoric_outcome_2
				}
				random_ruler = {
					limit = {
						highest_held_title_tier >= tier_county
						NOT = { has_government = nights_watch_government }
						NOT = { has_government = ruins_government }
						NOT = { has_government = silent_sisterhood_government }
						NOT = { has_government = kingsguard_government }
						exists = capital_county
						capital_county.title_province = { geographical_region = world_westeros_seven_kingdoms }
						NOT = { has_culture = culture:high_valyrian }
						NOT = { has_culture = culture:westerosi_valyrian }
					}
					trigger_event = agot_laughing_storm_rebellion.0201
				}
			}
		}
	}
}

agot_laughing_storm_rebellion.0201 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0201.t
	desc = agot_laughing_storm_rebellion.0201.desc

	theme = court

	override_background = {
		reference = courtyard
	}

	right_portrait = {
		character = scope:allard
		animation = war_attacker
	}

	immediate = {
		root = { save_scope_as = this_ruler }

		random_list = {
			0 = {
				modifier = {
					add = agot_historic_outcome_2
				}
				create_character = {
					age = 0
					gender = male
					location = scope:this_ruler.location
					culture = culture:stormlander
					faith = faith:fots_seven
					dynasty = none
					trait = scaly
					diplomacy = 9
					martial = 8
					stewardship = 7
					intrigue = 5
					learning = 4
					prowess = 12
					save_scope_as = allard
					after_creation = {
						agot_scaliest_effect = yes
						give_nickname = nick_the_scaly_prefix
					}
				}
			}
			0 = {
				modifier = {
					add = agot_nonhistoric_outcome_2
				}
				create_character = {
					age = 0
					gender_female_chance = 50
					location = scope:this_ruler.location
					culture = scope:this_ruler.culture
					faith = scope:this_ruler.faith
					dynasty = none
					trait = scaly
					diplomacy = 9
					martial = 8
					stewardship = 7
					intrigue = 5
					learning = 4
					prowess = 12
					save_scope_as = allard
					after_creation = {
						agot_scaliest_effect = yes
						give_nickname = nick_the_scaly_prefix
						random_list = {
							75 = {
								#scaly
							}
							25 = {
								#mega scaly
								random_list = {
									2 = {
										add_character_flag = dragonseed_potential_low
									}
									1 = {
										add_character_flag = dragonseed_potential_medium
									}
								}
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = agot_laughing_storm_rebellion.0201.a

		add_courtier = scope:allard
	}
}

##############################################################
## 0300-0311 TYTOS & ELLYN EVENTS                           ##
##############################################################

#Ellyn's Seduction
agot_laughing_storm_rebellion.0300 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0300.t
	desc = agot_laughing_storm_rebellion.0300.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	right_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#Seduce Tytos
	option = {
		name = agot_laughing_storm_rebellion.0300.a

		scope:tytos = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0301
				days = { 3 7 }
			}
		}
	}
}

#Tytos: Seduction Outcome
agot_laughing_storm_rebellion.0301 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0301.t
	desc = agot_laughing_storm_rebellion.0301.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#No - Refuse Ellyn
	option = {
		name = agot_laughing_storm_rebellion.0301.a

		scope:ellyn = {
			remove_trait = refusing_marriage

			trigger_event = {
				id = agot_laughing_storm_rebellion.0302
				days = { 1 3 }
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Yes - Ellyn is my lover
	option = {
		name = agot_laughing_storm_rebellion.0301.b

		scope:tytos = {
			set_relation_lover = {
				reason = lover_random_3
				target = scope:ellyn
			}

			trigger_event = {
				id = agot_laughing_storm_rebellion.0304
				days = { 3 7 }
			}
		}

		scope:ellyn = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0303
				days = 1
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Ellyn: Tytos refused me
agot_laughing_storm_rebellion.0302 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0302.t
	desc = agot_laughing_storm_rebellion.0302.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#Okay Then
	option = {
		name = agot_laughing_storm_rebellion.0302.a

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Rival Jeyne
	option = {
		name = agot_laughing_storm_rebellion.0302.b

		if = {
			limit = {
				can_set_relation_rival_trigger = { CHARACTER = scope:jeyne }
			}
			set_relation_rival = {
				target = scope:jeyne
				reason = rival_jealousy_at_court
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Ellyn: Tytos became my lover
agot_laughing_storm_rebellion.0303 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0303.t
	desc = agot_laughing_storm_rebellion.0303.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0303.a

		scope:jeyne = {
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:ellyn }
				}
				set_relation_rival = {
					target = scope:ellyn
					reason = rival_jealousy_at_court
				}
			}
		}
	}
}

#Tytos: Keeping it as secret, or request divorce from father
agot_laughing_storm_rebellion.0304 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0304.t
	desc = agot_laughing_storm_rebellion.0304.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#Secret
	option = {
		name = agot_laughing_storm_rebellion.0304.a
		scope:ellyn = {
			remove_trait = refusing_marriage
			trigger_event = {
				id = agot_laughing_storm_rebellion.0311
				days = 1
			}
		}

		ai_chance = {
			base = 50
		}
	}

	#Request Divorce from father
	option = {
		trigger = { character:Lannister_120 = { is_alive = yes } }
		name = agot_laughing_storm_rebellion.0304.b

		scope:gerold = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0305
				days = { 1 3 }
			}
		}

		ai_chance = {
			base = 50
		}
	}

	#Request Divorce from the High Septon
	option = {
		trigger = {
			character:Lannister_120 = { NOT = { is_alive = yes } }
			is_playable_character = yes
		}
		name = agot_laughing_storm_rebellion.0304.c

		trigger_event = {
			id = agot_laughing_storm_rebellion.0306
			days = { 1 3 }
		}

		ai_chance = {
			base = 50
		}
	}
}

#Gerold: Requests divorce from the High Septon
agot_laughing_storm_rebellion.0305 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0305.t
	desc = agot_laughing_storm_rebellion.0305.desc

	theme = seduction

	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	right_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_120 = { is_alive = yes }
		exists = title:k_the_most_devout.holder
		is_alive = yes
	}

	#Ask the High Septon
	option = {
		name = agot_laughing_storm_rebellion.0305.a

		trigger_event = {
			id = agot_laughing_storm_rebellion.0306
			days = { 1 3 }
		}
	}
}

#Gerold: High Septon asks money for the divorce -> Pay or Refuse
agot_laughing_storm_rebellion.0306 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0306.t
	desc = {
		desc = agot_laughing_storm_rebellion.0306.desc
		first_valid = {
			triggered_desc = {
				trigger = { title:k_the_most_devout.holder = { has_trait = greedy } }
				desc = agot_laughing_storm_rebellion.0306.greedy.desc
			}
		}
	}

	theme = court

	override_background = {
		reference = courtyard
	}
	lower_left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	lower_center_portrait = {
		character = scope:jeyne
		animation = admiration
	}
	lower_right_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	right_portrait = {
		character = title:k_the_most_devout.holder
		animation = personality_compassionate
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
		exists = title:k_the_most_devout.holder
		is_alive = yes
	}

	#No Divorce
	option = {
		trigger = { title:k_the_most_devout.holder = { NOT = { has_trait = greedy } } }
		name = agot_laughing_storm_rebellion.0306.a

		scope:tytos = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0308
				days = { 1 3 }
			}
		}

		ai_chance = {
			base = 50
		}
	}

	#Bribe & Divorce & Marriage
	option = {
		trigger = { title:k_the_most_devout.holder = { has_trait = greedy } }
		name = agot_laughing_storm_rebellion.0306.b

		scope:gerold = {
			pay_short_term_gold = {
				gold = 500
				target = title:k_the_most_devout.holder
			}
		}
		scope:ellyn = { remove_trait = refusing_marriage }
		scope:tytos = {
			divorce_effect = {
				DIVORCER = scope:tytos
				DIVORCEE = scope:jeyne
			}
			marry = scope:ellyn
			trigger_event = agot_laughing_storm_rebellion.0310
		}
		scope:ellyn = { trigger_event = agot_laughing_storm_rebellion.0310 }

		ai_chance = {
			base = 50
		}
	}

	#Can't afford
	option = {
		trigger = { title:k_the_most_devout.holder = { has_trait = greedy } }
		name = agot_laughing_storm_rebellion.0306.c

		if = {
			limit = { character:Reyne_45 = { is_alive = yes } }
			custom_tooltip = agot_laughing_storm_rebellion.0306.c.tt
			scope:roger = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0307
					days = { 1 3 }
				}
			}
		}

		ai_chance = {
			base = 50
		}
	}
}

#Roger: If Gerold resued the payment -> Pay or Refuse
agot_laughing_storm_rebellion.0307 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0307.t
	desc = agot_laughing_storm_rebellion.0307.desc

	theme = court

	override_background = {
		reference = courtyard
	}
	lower_left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	lower_center_portrait = {
		character = scope:jeyne
		animation = admiration
	}
	lower_right_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	right_portrait = {
		character = title:k_the_most_devout.holder
		animation = personality_compassionate
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
		exists = title:k_the_most_devout.holder
		is_alive = yes
	}

	#No Divorce
	option = {
		name = agot_laughing_storm_rebellion.0307.a

		scope:tytos = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0308
				days = { 1 3 }
			}
		}

		ai_chance = {
			base = 50
		}
	}

	#Bribe & Divorce & Marriage
	option = {
		name = agot_laughing_storm_rebellion.0307.b

		scope:roger = {
			pay_short_term_gold = {
				gold = 500
				target = title:k_the_most_devout.holder
			}
		}
		scope:ellyn = { remove_trait = refusing_marriage }
		scope:tytos = {
			divorce_effect = {
				DIVORCER = scope:tytos
				DIVORCEE = scope:jeyne
			}
			marry = scope:ellyn
			trigger_event = agot_laughing_storm_rebellion.0310
		}
		scope:ellyn = { trigger_event = agot_laughing_storm_rebellion.0310 }

		ai_chance = {
			base = 50
		}
	}
}

#Tytos: Noone funded the divorce -> Keep the secret, or elope
agot_laughing_storm_rebellion.0308 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0308.t
	desc = agot_laughing_storm_rebellion.0308.desc

	theme = court

	override_background = {
		reference = courtyard
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#Keep the secret
	option = {
		name = agot_laughing_storm_rebellion.0308.a
		scope:ellyn = {
			remove_trait = refusing_marriage

			trigger_event = {
				id = agot_laughing_storm_rebellion.0311
				days = 1
			}
		}

		ai_chance = {
			base = 50
		}
	}

	#Divorce & Marriage
	option = {
		name = agot_laughing_storm_rebellion.0308.b
		scope:ellyn = { remove_trait = refusing_marriage }
		scope:tytos = {
			add_character_flag = {
				flag = married_to_ellyn_anyway
				days = 90
			}
			stress_impact = { craven = medium_stress_impact_gain }

			divorce_effect = {
				DIVORCER = scope:tytos
				DIVORCEE = scope:jeyne
			}

			marry = scope:ellyn
		}
		scope:ellyn = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0310
				days = 1
			}
		}

		title:k_the_westerlands.holder = {
			every_vassal_or_below = {
				add_opinion = {
					target = scope:tytos
					modifier = forced_divorce_opinion
					opinion = -50
				}
			}
		}

		if = {
			limit = { character:Lannister_120 = { is_alive = yes } }
			custom_tooltip = agot_laughing_storm_rebellion.0308.b.tt
			scope:gerold = {
				trigger_event = {
					id = agot_laughing_storm_rebellion.0309
					days = 2
				}
			}
		}

		ai_chance = {
			base = 50
		}
	}
}

#Gerold's Decision
agot_laughing_storm_rebellion.0309 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0309.t
	desc = agot_laughing_storm_rebellion.0309.desc

	theme = court

	override_background = {
		reference = courtyard
	}
	lower_right_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	right_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
		is_alive = yes
	}

	#Accept
	option = {
		name = agot_laughing_storm_rebellion.0309.a

		ai_chance = {
			base = 50
		}
	}

	#Disinherit Tytos
	option = {
		name = agot_laughing_storm_rebellion.0309.b

		scope:gerold = {
			save_scope_as = actor
			scope:actor = {
				scope:tytos = { disinherit_effect = { DISINHERITOR = scope:actor } }
			}
		}

		ai_chance = {
			base = 50
		}
	}
}

#Tytos & Ellyn: We got married!
agot_laughing_storm_rebellion.0310 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0310.t

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { this = character:Lannister_129 }
				desc = agot_laughing_storm_rebellion.0310.desc
			}
			triggered_desc = {
				trigger = {
					this = character:Reyne_46
					character:Lannister_129 = { has_character_flag = married_to_ellyn_anyway }
				}
				desc = agot_laughing_storm_rebellion.0310.ellyn.desc
			}
			triggered_desc = {
				trigger = {
					this = character:Reyne_46
					character:Lannister_129 = { NOT = { has_character_flag = married_to_ellyn_anyway } }
				}
				desc = agot_laughing_storm_rebellion.0310.ellyn_anyway.desc
			}
		}
	}

	theme = seduction

	override_background = {
		reference = courtyard
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#OK.
	option = { name = agot_laughing_storm_rebellion.0310.a }
}

#Ellyn: No marriage
agot_laughing_storm_rebellion.0311 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0311.t

	desc = agot_laughing_storm_rebellion.0311.desc

	theme = seduction

	override_background = {
		reference = courtyard
	}
	left_portrait = {
		character = scope:tytos
		animation = personality_compassionate
	}
	right_portrait = {
		character = scope:ellyn
		animation = admiration
	}
	lower_left_portrait = {
		character = scope:jeyne
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#OK.
	option = { name = agot_laughing_storm_rebellion.0311.a }
}

##############################################################
## 0400-043XX BLOODRAVEN EVENTS                             ##
##############################################################

#Bloodraven Elected
agot_laughing_storm_rebellion.0400 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0400.t

	desc = agot_laughing_storm_rebellion.0400.desc

	theme = nightswatch

	override_background = { reference = agot_the_wall }

	left_portrait = {
		character = scope:bloodraven
		animation = personality_bold
	}
	lower_right_portrait = scope:jack

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	trigger = {
		character:Reyne_46 = { is_alive = yes }
		character:Lannister_129 = { is_alive = yes }
	}

	#OK.
	option = { name = agot_laughing_storm_rebellion.0400.a }
}

#Aegon V: Dark Sister
agot_laughing_storm_rebellion.0401 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0401.t

	desc = agot_laughing_storm_rebellion.0401.desc

	theme = court

	override_background = { reference = throne_room }

	left_portrait = {
		character = scope:aegonv
		animation = compassionate
	}
	right_portrait = {
		character = scope:bloodraven
		animation = personality_bold
	}

	artifact = {
		target = scope:dark_sister_sword
		position = lower_right_portrait
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes

		scope:bloodraven = {
			random_character_artifact = {
				limit = {
					has_variable = valyrian_steel
					has_artifact_modifier = vs_dark_sister_modifier
				}
				save_scope_as = dark_sister_sword
			}
		}
	}

	trigger = {
		scope:aegonv = { is_alive = yes }
		scope:bloodraven = {
			is_alive = yes
			any_character_artifact = {
				has_variable = valyrian_steel
				has_artifact_modifier = vs_dark_sister_modifier
			}
		}
	}

	#I want that sword
	option = {
		name = agot_laughing_storm_rebellion.0401.a

		scope:bloodraven = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0402
				days = { 3 7 }
			}
		}
		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}

	#Nah
	option = {
		name = agot_laughing_storm_rebellion.0401.b

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}
}

#Bloodraven: Aegon V wants Dark Sister
agot_laughing_storm_rebellion.0402 = {
	type = letter_event
	opening = agot_laughing_storm_rebellion.0402.opening
	desc = agot_laughing_storm_rebellion.0402.desc
	sender = scope:aegonv

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#No.
	option = {
		name = agot_laughing_storm_rebellion.0402.a

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0404
				days = { 3 7 }
			}
		}

		show_as_tooltip = {
			scope:aegonv = {
				add_opinion = {
					target = scope:bloodraven
					modifier = insulted_opinion
					opinion = -40
				}
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Sure I like my bow more anyways
	option = {
		name = agot_laughing_storm_rebellion.0402.b

		scope:aegonv = {
			trigger_event = {
				id = agot_laughing_storm_rebellion.0403
				days = { 3 7 }
			}
		}

		show_as_tooltip = {
			scope:dark_sister_sword = {
				set_owner = scope:aegonv
			}
			scope:aegonv = {
				pay_short_term_gold = {
					gold = 500
					target = scope:bloodraven
				}
			}
		}

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Aegon V: Bloodraven gave me Dark Sister
agot_laughing_storm_rebellion.0403 = {
	type = letter_event
	opening = agot_laughing_storm_rebellion.0403.opening
	desc = agot_laughing_storm_rebellion.0403.desc
	sender = scope:bloodraven

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#The Sword is Mine
	option = {
		name = agot_laughing_storm_rebellion.0403.a

		scope:dark_sister_sword = {
			set_owner = scope:aegonv
		}
		scope:aegonv = {
			pay_short_term_gold = {
				gold = 500
				target = scope:bloodraven
			}
		}
	}
}

#Aegon V: No sword for me
agot_laughing_storm_rebellion.0404 = {
	type = letter_event
	opening = agot_laughing_storm_rebellion.0404.opening
	desc = agot_laughing_storm_rebellion.0404.desc
	sender = scope:bloodraven

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#The Sword is Mine
	option = {
		name = agot_laughing_storm_rebellion.0404.a

		add_opinion = {
			target = scope:bloodraven
			modifier = insulted_opinion
			opinion = -40
		}
	}
}

#Bloodraven: Following my dreams I
agot_laughing_storm_rebellion.0420 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0420.t
	desc = agot_laughing_storm_rebellion.0420.desc

	theme = nightswatch

	override_background = { reference = agot_the_wall }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_bold
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#Let's Go.
	option = {
		name = agot_laughing_storm_rebellion.0420.a
		custom_tooltip = agot_laughing_storm_rebellion.0420.a.tt

		start_travel_plan = {
			players_use_planner = no
			destination = title:b_last_whisper.title_province
			on_arrival_destinations = last
			on_arrival_event = agot_laughing_storm_rebellion.0421
			return_trip = no
		}

		add_character_flag = never_return

		ai_chance = {
			base = 0

			modifier = {
				add = agot_historic_outcome_2
			}
		}
	}

	#Let's Not.
	option = {
		name = agot_laughing_storm_rebellion.0420.b

		ai_chance = {
			base = 0

			modifier = {
				add = agot_nonhistoric_outcome_2
			}
		}
	}
}

#Bloodraven: Following my dreams II
agot_laughing_storm_rebellion.0421 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0421.t
	desc = agot_laughing_storm_rebellion.0421.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_bold
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes

		hidden_effect = {
			create_character = {
				age = scope:bloodraven.age
				gender = male
				location = scope:bloodraven.location
				culture = scope:bloodraven.culture
				faith = scope:bloodraven.faith
				dynasty = none
				save_scope_as = three_eyed_crow
				after_creation = {
					change_first_name = "Three-Eyed Crow"
					copy_traits = scope:bloodraven
					make_trait_inactive = is_targaryen_96
					copy_inheritable_appearance_from = scope:bloodraven
					remove_trait = lifestyle_nw_ranger
					remove_trait = legitimized_bastard
				}
			}
		}
		if = {
			limit = {
				any_character_artifact = {
					has_variable = valyrian_steel
					has_artifact_modifier = vs_dark_sister_modifier
				}
			}
			random_character_artifact = {
				limit = {
					has_variable = valyrian_steel
					has_artifact_modifier = vs_dark_sister_modifier
				}
				save_scope_as = dark_sister_sword
			}
		}
	}

	#Three-Eyed Crow
	option = {
		name = agot_laughing_storm_rebellion.0421.a
		custom_tooltip = agot_laughing_storm_rebellion.0421.a.tt

		hidden_effect = {
			if = {
				limit = { exists = scope:dark_sister_sword }
				scope:dark_sister_sword = { set_owner = scope:three_eyed_crow }
			}
			scope:three_eyed_crow = { death = { death_reason = death_disappearance } }
		}
		death = { death_reason = death_disappeared_on_ranging }
	}
}

### Bloodraven Filler Events

#Dream: A Tree
agot_laughing_storm_rebellion.0451 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0451.t

	desc = agot_laughing_storm_rebellion.0451.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0451.a
		custom_tooltip = agot_laughing_storm_rebellion.0451.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Dark Wolf
agot_laughing_storm_rebellion.0452 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0452.t

	desc = agot_laughing_storm_rebellion.0452.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0452.a
		custom_tooltip = agot_laughing_storm_rebellion.0452.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Crow with three eyes
agot_laughing_storm_rebellion.0453 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0453.t

	desc = agot_laughing_storm_rebellion.0453.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0453.a
		custom_tooltip = agot_laughing_storm_rebellion.0453.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Climber
agot_laughing_storm_rebellion.0454 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0454.t

	desc = agot_laughing_storm_rebellion.0454.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0454.a
		custom_tooltip = agot_laughing_storm_rebellion.0454.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Tree Part 2
agot_laughing_storm_rebellion.0455 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0455.t

	desc = agot_laughing_storm_rebellion.0455.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0455.a
		custom_tooltip = agot_laughing_storm_rebellion.0455.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A White Wolf Part 2
agot_laughing_storm_rebellion.0456 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0456.t

	desc = agot_laughing_storm_rebellion.0456.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0456.a
		custom_tooltip = agot_laughing_storm_rebellion.0456.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Crow with three eyes Part 2
agot_laughing_storm_rebellion.0457 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0457.t

	desc = agot_laughing_storm_rebellion.0457.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0457.a
		custom_tooltip = agot_laughing_storm_rebellion.0457.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: A Climber Part 2
agot_laughing_storm_rebellion.0458 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0458.t

	desc = agot_laughing_storm_rebellion.0458.desc

	theme = mental_break

	override_background = { reference = agot_weirwood }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0458.a
		custom_tooltip = agot_laughing_storm_rebellion.0458.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: The Night
agot_laughing_storm_rebellion.0459 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0459.t

	desc = agot_laughing_storm_rebellion.0459.desc

	theme = mental_break

	override_background = { reference = agot_frozen_forest }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0459.a
		custom_tooltip = agot_laughing_storm_rebellion.0459.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Dream: The Dead
agot_laughing_storm_rebellion.0460 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0460.t

	desc = agot_laughing_storm_rebellion.0460.desc

	theme = mental_break

	override_background = { reference = agot_frozen_forest }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0460.a
		custom_tooltip = agot_laughing_storm_rebellion.0460.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Aemon: Dragon with three heads
agot_laughing_storm_rebellion.0461 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0461.t

	desc = agot_laughing_storm_rebellion.0461.desc

	theme = nightswatch

	override_background = {
		reference = throne_room
	}
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	left_portrait = {
		character = scope:aemon
		animation = personality_rational
	}
	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	trigger = { character:Targaryen_120 = { is_alive = yes } }

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0461.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Aemon: A Targaryen in a distant land
agot_laughing_storm_rebellion.0462 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0462.t

	desc = agot_laughing_storm_rebellion.0462.desc

	theme = nightswatch

	override_background = {
		reference = throne_room
	}
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	left_portrait = {
		character = scope:aemon
		animation = personality_rational
	}
	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	trigger = { character:Targaryen_120 = { is_alive = yes } }

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0462.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Ranging: A Child
agot_laughing_storm_rebellion.0463 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0463.t

	desc = agot_laughing_storm_rebellion.0463.desc

	theme = nightswatch

	override_background = { reference = agot_frozen_forest }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0463.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Ranging: The Children
agot_laughing_storm_rebellion.0464 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0464.t

	desc = agot_laughing_storm_rebellion.0464.desc

	theme = nightswatch

	override_background = { reference = agot_frozen_forest }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0464.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Misc: Brothers
agot_laughing_storm_rebellion.0465 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0465.t
	desc = agot_laughing_storm_rebellion.0465.desc

	theme = nightswatch

	override_background = { reference = agot_the_wall }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	left_portrait = {
		character = scope:bloodraven
		animation = personality_bold
		camera = shop_camera_main_far_angle_180
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0465.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Red Dream: A Girl in the Flames
agot_laughing_storm_rebellion.0466 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0466.t
	desc = agot_laughing_storm_rebellion.0466.desc

	theme = mental_break

	override_background = { reference = bp1_bonfire }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0466.a

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Red Dream: Wildfire
agot_laughing_storm_rebellion.0467 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0467.t
	desc = agot_laughing_storm_rebellion.0467.desc

	theme = mental_break

	override_background = { reference = agot_alley_day_kingslanding_wildfire }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	lower_left_portrait = {
		character = scope:aerion
	}
	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0467.a
		custom_tooltip = agot_laughing_storm_rebellion.0467.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Bloodraven: Whispers of the Dragon
agot_laughing_storm_rebellion.0468 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0468.t
	desc = agot_laughing_storm_rebellion.0468.desc

	theme = mental_break

	override_background = { reference = agot_the_wall }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
		camera = shop_camera_main_far_angle_210
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0468.a
		custom_tooltip = agot_laughing_storm_rebellion.0468.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}

#Bloodraven: The Cold Dark Night
agot_laughing_storm_rebellion.0469 = {
	type = character_event
	title = agot_laughing_storm_rebellion.0469.t
	desc = agot_laughing_storm_rebellion.0469.desc

	theme = mental_break

	override_background = { reference = throne_room }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	right_portrait = {
		character = scope:bloodraven
		animation = personality_rational
	}

	immediate = {
		laughing_storm_rebellion_scopes_effect = yes
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0469.a
		custom_tooltip = agot_laughing_storm_rebellion.0469.a.tt

		remove_character_flag = bloodraven_vision_event_sent
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0469.b
		custom_tooltip = agot_laughing_storm_rebellion.0469.b.tt

		remove_character_flag = bloodraven_vision_event_sent
	}

	#OK.
	option = {
		name = agot_laughing_storm_rebellion.0469.c
		custom_tooltip = agot_laughing_storm_rebellion.0469.c.tt

		remove_character_flag = bloodraven_vision_event_sent
	}
}